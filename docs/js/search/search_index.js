var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractClientService.html",[0,0.153,1,3.177]],["body/classes/AbstractClientService.html",[0,0.228,1,3.612,2,0.754,3,0.088,4,0.088,5,0.077,6,5.856,7,2.711,8,0.181,9,0.906,10,2.905,11,2.425,12,7.511,13,1.273,14,3.111,15,4.738,16,0.65,17,3.111,18,1.158,19,0.013,20,0.68,21,0.456,22,0.65,23,4,24,6.421,25,7.6,26,5.501,27,7.282,28,4.863,29,6.421,30,3.111,31,5.247,32,6.949,33,2.459,34,1.23,35,2.442,36,3.111,37,3.111,38,2.44,39,3.111,40,0.287,41,3.111,42,2.094,43,3.111,44,2.094,45,3.111,46,2.711,47,2.251,48,1.852,49,1.667,50,3.111,51,3.321,52,3.111,53,3.111,54,0.133,55,1.852,56,6.02,57,1.629,58,2.922,59,1.971,60,1.852,61,0.681,62,5.454,63,1.104,64,3.111,65,3.111,66,2.587,67,1.822,68,3.111,69,2.711,70,1.754,71,4.589,72,3.111,73,3.111,74,3.111,75,3.111,76,0.814,77,3.111,78,0.007,79,0.007]],["title/classes/AbstractDto.html",[0,0.153,80,1.969]],["body/classes/AbstractDto.html",[0,0.188,2,1.205,3,0.14,4,0.14,5,0.123,8,0.289,13,1.051,16,0.744,18,0.79,19,0.013,20,0.526,21,0.441,22,0.503,40,0.271,54,0.212,78,0.01,79,0.01,80,3.092,81,4.331,82,1.436,83,5.051,84,4.154,85,5.051,86,6.338,87,3.431,88,6.338,89,1.899,90,4.144,91,2.15,92,3.849,93,4.969,94,0.899,95,4.969,96,2.134,97,4.969,98,4.969,99,4.969,100,4.969,101,4.969,102,4.969,103,4.969]],["title/classes/AbstractEntity.html",[0,0.153,87,1.885]],["body/classes/AbstractEntity.html",[0,0.253,2,0.951,3,0.111,4,0.111,5,0.097,8,0.228,9,1.069,13,1.312,16,0.71,18,0.624,19,0.013,20,0.415,21,0.447,22,0.397,33,2.101,34,0.801,40,0.265,48,2.335,54,0.231,61,0.858,66,2.211,67,2.15,76,0.696,78,0.009,79,0.009,80,1.913,82,1.227,83,4.842,84,3.982,85,4.842,87,2.528,89,2.07,90,4.093,91,1.911,94,0.88,104,3.086,105,1.668,106,3.497,107,2.284,108,6.119,109,5.407,110,3.922,111,4.842,112,3.922,113,3.922,114,4.72,115,3.922,116,3.922,117,3.922,118,5.407,119,5.831,120,3.922,121,1.994,122,3.916,123,4.72,124,3.418,125,4.72,126,1.167,127,3.418,128,5.407,129,3.086,130,3.086,131,3.086,132,2.838,133,2.101,134,3.086,135,3.418,136,3.418,137,3.086,138,3.418,139,3.086,140,3.086,141,2.838,142,3.419,143,0.801,144,3.418,145,2.335,146,3.418,147,2.335,148,3.418,149,2.838,150,1.831,151,3.418]],["title/classes/AddUserSettings1639940635548.html",[0,0.153,152,3.177]],["body/classes/AddUserSettings1639940635548.html",[0,0.151,2,0.966,3,0.112,4,0.112,5,0.099,8,0.231,9,1.08,10,2.788,11,2.327,16,0.633,18,0.871,19,0.013,20,0.748,21,0.391,22,0.554,34,1.118,35,2.306,40,0.17,54,0.17,58,2.933,59,2.351,63,2.39,78,0.009,79,0.009,82,1.24,84,3.723,94,0.565,105,1.686,111,3.961,126,1.185,141,2.882,152,5.299,153,5.869,154,5.555,155,2.074,156,3.471,157,5.45,158,4.307,159,4.307,160,3.132,161,1.782,162,3.982,163,4.77,164,6.73,165,3.982,166,4.77,167,3.982,168,3.471,169,2.882,170,5.299,171,5.299,172,3.258,173,5.74,174,3.471,175,3.471,176,4.307,177,3.471,178,3.982,179,3.982,180,4.921,181,4.873,182,3.982,183,2.371,184,3.982,185,3.471,186,3.258,187,5.473,188,5.473,189,3.982,190,3.982,191,2.514,192,4.77,193,3.471,194,3.982,195,3.471]],["title/injectables/ApiConfigService.html",[196,0.914,197,1.969]],["body/injectables/ApiConfigService.html",[0,0.089,3,0.066,4,0.066,5,0.058,8,0.136,9,0.729,13,0.495,16,0.762,18,0.899,19,0.013,20,0.636,21,0.365,22,0.572,34,1.061,40,0.257,54,0.1,55,1.393,57,1.311,58,1.254,59,2.799,61,1.503,66,2.579,67,2.062,76,1.348,78,0.006,79,0.006,89,1.748,94,1.092,107,2.623,133,2.451,149,1.694,160,1.005,161,2.529,186,3.091,196,0.836,197,1.801,198,0.966,199,6.618,200,2.04,201,3.693,202,3.693,203,3.693,204,3.218,205,4.574,206,4.574,207,4.574,208,4.574,209,3.986,210,4.574,211,3.986,212,4.574,213,4.574,214,3.599,215,4.574,216,4.574,217,1.842,218,3.387,219,2.34,220,3.218,221,2.34,222,3.693,223,2.34,224,3.693,225,2.34,226,2.336,227,3.693,228,2.34,229,2.34,230,2.34,231,2.34,232,2.34,233,2.34,234,2.34,235,2.34,236,2.34,237,2.34,238,2.34,239,2.34,240,2.34,241,2.34,242,2.34,243,2.34,244,2.34,245,2.34,246,2.34,247,2.34,248,2.34,249,2.34,250,2.34,251,2.34,252,2.34,253,0.478,254,1.842,255,3.693,256,1.319,257,2.34,258,1.195,259,2.672,260,1.842,261,2.34,262,2.672,263,2.34,264,2.34,265,4.574,266,2.04,267,2.04,268,1.842,269,4.574,270,2.906,271,2.34,272,2.672,273,4.574,274,3.218,275,3.218,276,2.34,277,1.842,278,2.34,279,2.34,280,2.34,281,2.34,282,2.34,283,3.693,284,2.34,285,4.574,286,2.34,287,2.34,288,2.34,289,3.693,290,1.141,291,2.34,292,2.34,293,2.34,294,2.34,295,2.34,296,2.34,297,2.34,298,2.34,299,2.34,300,2.34,301,2.34,302,3.693,303,2.34,304,2.34,305,3.693,306,2.34,307,2.34,308,2.906,309,2.34,310,4.574,311,2.34,312,1.842,313,2.34,314,1.477,315,2.34,316,2.34,317,2.34,318,2.34,319,2.34,320,2.34,321,2.34,322,2.34,323,2.34,324,2.34,325,2.34,326,2.34,327,2.34,328,2.34,329,2.34,330,2.34,331,2.34,332,2.34,333,2.34,334,2.34,335,2.34,336,2.34,337,2.34,338,2.34,339,2.34,340,2.04,341,2.34,342,2.34,343,2.34,344,2.34,345,2.04]],["title/modules/AppModule.html",[346,1.666,347,2.922]],["body/modules/AppModule.html",[0,0.142,3,0.106,4,0.106,5,0.093,9,0.742,16,0.38,18,0.598,19,0.013,20,0.398,21,0.305,22,0.38,34,0.768,40,0.341,54,0.161,57,1.334,60,3.13,78,0.008,79,0.008,105,1.158,197,3.372,209,3.276,218,2.964,253,1.074,254,2.958,256,2.119,268,2.958,277,2.958,290,1.833,346,2.17,347,5.701,348,2.817,349,3.276,350,3.276,351,4.823,352,4.823,353,4.823,354,4.522,355,3.319,356,2.373,357,2.119,358,3.758,359,4.422,360,3.758,361,5.258,362,7.163,363,3.758,364,3.758,365,3.758,366,5.258,367,3.758,368,3.276,369,5.258,370,3.758,371,2.72,372,3.805,373,6.065,374,2.958,375,3.758,376,3.758,377,3.758,378,2.53,379,3.758,380,3.758,381,3.758,382,2.72,383,2.373,384,4.083,385,3.758,386,3.758,387,3.758,388,3.758,389,3.758,390,3.758,391,3.758,392,3.805,393,3.758,394,3.319,395,3.758,396,3.758,397,3.758,398,3.758,399,3.758,400,3.758,401,3.758,402,3.758]],["title/interfaces/Array.html",[143,0.825,403,2.718]],["body/interfaces/Array.html",[3,0.09,4,0.132,5,0.079,8,0.272,9,0.923,11,1.019,16,0.473,18,0.97,19,0.014,20,0.587,21,0.417,22,0.473,33,2.507,34,0.956,35,1.093,38,2.093,40,0.313,49,2.967,61,1.573,63,1.661,67,2.198,76,1.204,78,0.007,79,0.007,80,2.282,87,1.491,89,2.116,94,0.664,121,2.744,122,4.281,126,1.392,133,1.711,143,1.131,150,2.846,258,1.631,346,1.318,403,3.15,404,1.134,405,2.311,406,4.679,407,4.357,408,3.682,409,3.634,410,3.193,411,3.193,412,4.134,413,3.193,414,3.15,415,2.513,416,3.682,417,2.513,418,2.953,419,3.728,420,1.901,421,2.016,422,2.15,423,3.386,424,2.311,425,3.308,426,1.8,427,2.15,428,2.513,429,2.513,430,3.682,431,2.311,432,2.311,433,2.311,434,2.513,435,2.513,436,2.513,437,4.357,438,2.513,439,2.513,440,1.019,441,2.513,442,4.357,443,2.513,444,2.513,445,2.513,446,2.513,447,2.513,448,4.105,449,2.513,450,2.513,451,2.513,452,2.513,453,2.513,454,2.513,455,2.513,456,2.513,457,3.15,458,2.513,459,2.513,460,2.513,461,3.386,462,2.513,463,2.513,464,2.513,465,2.513,466,2.513,467,2.513,468,2.513,469,2.513]],["title/controllers/AuthController.html",[470,2.062,471,2.922]],["body/controllers/AuthController.html",[0,0.12,3,0.183,4,0.09,5,0.16,8,0.185,9,0.921,11,2.161,13,0.673,16,0.559,18,0.879,19,0.013,20,0.645,21,0.393,22,0.559,34,1.129,35,2.084,40,0.332,54,0.136,57,1.13,61,1.21,63,1.962,67,1.263,76,0.981,78,0.007,79,0.007,91,1.875,96,1.367,107,1.718,132,4.902,155,2.087,253,0.65,404,1.13,470,1.625,471,3.377,472,1.705,473,2.773,474,2.303,475,3.672,476,4.667,477,5.526,478,5.526,479,3.182,480,2.386,481,3.182,482,3.182,483,3.414,484,4.667,485,3.182,486,3.182,487,4.56,488,3.182,489,3.999,490,4.667,491,3.182,492,3.182,493,3.182,494,4.712,495,3.842,496,3.182,497,4.667,498,3.182,499,3.142,500,3.182,501,4.667,502,2.773,503,2.142,504,2.303,505,2.303,506,2.773,507,4.816,508,2.773,509,2.504,510,3.182,511,4.667,512,2.773,513,6.086,514,2.773,515,1.705,516,1.552,517,4.067,518,2.303,519,2.946,520,2.504,521,2.773,522,2.504,523,2.961,524,2.504,525,3.488,526,2.773,527,3.182,528,2.773,529,3.182,530,3.182,531,3.182,532,3.182,533,4.816,534,4.349,535,3.182,536,3.182,537,1.705,538,3.182,539,1.894,540,3.182,541,3.182,542,3.182,543,3.182,544,3.182,545,3.182,546,3.182,547,2.773,548,3.182,549,3.182,550,2.773,551,3.182,552,3.182,553,3.182]],["title/modules/AuthModule.html",[346,1.666,351,2.718]],["body/modules/AuthModule.html",[0,0.162,3,0.121,4,0.121,5,0.106,19,0.013,40,0.335,54,0.183,78,0.009,79,0.009,90,2.416,142,2.705,197,3.167,218,2.416,253,0.875,290,2.09,346,2.374,348,3.082,351,5.38,354,3.631,355,3.631,356,2.705,357,2.416,359,2.885,382,3.101,383,2.705,392,3.101,394,2.705,471,4.7,472,3.082,525,5.081,526,3.734,534,3.372,554,3.734,555,3.734,556,3.734,557,5.019,558,5.019,559,4.285,560,3.631,561,4.527,562,5.752,563,5.752,564,3.372,565,4.285,566,3.101,567,4.285,568,4.285,569,4.285,570,4.285,571,4.285,572,4.285,573,3.101,574,4.285,575,4.285,576,3.734,577,3.734,578,4.285,579,4.285,580,3.372,581,4.285]],["title/injectables/AuthService.html",[196,0.914,525,2.548]],["body/injectables/AuthService.html",[0,0.144,3,0.107,4,0.107,5,0.094,8,0.221,9,1.045,11,2.293,13,1.12,16,0.617,18,0.97,19,0.013,20,0.646,21,0.444,22,0.617,26,2.749,28,3.833,34,1.082,35,2.259,40,0.334,54,0.162,61,1.159,63,2.165,66,2.141,67,2.103,76,0.94,78,0.008,79,0.008,94,0.539,107,2.246,155,1.632,196,1.2,197,3.219,198,1.567,218,3.438,253,0.776,382,2.749,383,2.397,480,1.398,487,4.672,515,2.838,516,2.584,519,3.343,520,2.989,522,2.989,523,3.952,524,2.989,525,3.343,528,3.31,537,2.838,539,3.153,564,2.989,580,2.989,582,3.31,583,5.297,584,5.297,585,3.798,586,7.187,587,3.798,588,5.297,589,3.798,590,5.297,591,3.798,592,4.616,593,3.31,594,2.989,595,3.566,596,3.798,597,3.798,598,3.31,599,3.798,600,3.798,601,3.31,602,3.798,603,3.31,604,2.141,605,3.798,606,5.297,607,3.798,608,3.798]],["title/injectables/AuthUserInterceptor.html",[196,0.914,609,3.177]],["body/injectables/AuthUserInterceptor.html",[0,0.192,3,0.144,4,0.144,5,0.126,8,0.295,9,1.269,16,0.514,18,0.808,19,0.013,20,0.538,21,0.41,22,0.514,34,1.038,40,0.317,54,0.217,61,1.407,76,0.902,78,0.01,79,0.01,105,1.565,155,2.172,196,1.456,198,2.097,253,1.313,480,1.871,609,5.059,610,5.603,611,3.998,612,5.603,613,6.429,614,5.364,615,4.452,616,6.459,617,5.081,618,3.421,619,5.603,620,3.421,621,3.421,622,4.428,623,3.421,624,3.998,625,3.998,626,5.081,627,5.081]],["title/injectables/AwsS3Service.html",[196,0.914,628,2.403]],["body/injectables/AwsS3Service.html",[0,0.15,3,0.112,4,0.112,5,0.135,8,0.23,9,1.075,10,2.85,11,1.988,13,1.152,16,0.713,18,0.867,19,0.013,20,0.577,21,0.423,22,0.551,34,0.808,35,2.134,40,0.311,48,2.355,54,0.169,61,1.47,63,1.404,67,1.571,76,0.702,78,0.009,79,0.009,82,1.234,107,2.295,121,1.457,186,3.997,196,1.234,197,3.435,198,1.633,211,3.448,217,3.113,218,3.786,253,0.808,383,2.497,404,1.404,495,4.239,504,2.863,507,3.448,628,3.243,629,6.344,630,3.448,631,4.645,632,2.134,633,6.232,634,5.448,635,5.448,636,5.448,637,3.956,638,3.956,639,3.956,640,5.448,641,4.749,642,3.448,643,4.749,644,3.956,645,3.956,646,3.956,647,3.956,648,3.956,649,3.956,650,3.956,651,5.448,652,3.956,653,4.288,654,3.956,655,3.956,656,3.956,657,3.956,658,3.956,659,3.956,660,3.956,661,3.956,662,3.448]],["title/classes/ContextProvider.html",[0,0.153,621,2.718]],["body/classes/ContextProvider.html",[0,0.123,2,0.788,3,0.092,4,0.092,5,0.08,8,0.189,9,0.935,16,0.757,18,1.086,19,0.013,20,0.692,21,0.435,22,0.661,34,1.44,40,0.203,54,0.139,60,4.063,76,1.091,78,0.007,79,0.007,82,1.074,94,1.14,107,2.945,155,1.46,160,2.403,161,3.153,186,3.33,220,4.131,340,4.131,409,2.998,480,2.513,615,2.052,618,2.189,620,2.189,621,3.191,623,3.767,632,2.522,663,2.833,664,7.218,665,5.595,666,5.595,667,5.595,668,6.149,669,4.74,670,6.149,671,4.74,672,4.74,673,4.74,674,3.251,675,4.74,676,3.251,677,3.251,678,3.251,679,3.251,680,4.74,681,3.251,682,3.251,683,4.74,684,3.251,685,4.74,686,3.251,687,4.74,688,3.251,689,4.74,690,3.251,691,3.251,692,2.353,693,2.558,694,2.558,695,2.353,696,2.558,697,2.558,698,3.251,699,3.251,700,3.251,701,3.251,702,3.251,703,3.251]],["title/classes/CreateSettingsCommand.html",[0,0.153,704,2.718]],["body/classes/CreateSettingsCommand.html",[0,0.221,2,1.067,3,0.124,4,0.124,5,0.109,8,0.256,10,2.871,11,1.404,13,1.238,16,0.666,18,0.7,19,0.013,20,0.466,21,0.436,22,0.445,40,0.312,54,0.25,55,2.619,61,1.282,76,0.781,78,0.009,79,0.009,82,1.326,94,0.996,105,2.027,155,1.804,537,4.025,632,2.572,704,4.43,705,5.52,706,3.462,707,5.735,708,5.067,709,4.4,710,4.4,711,4.4,712,4.4,713,5.103,714,3.942,715,3.835,716,3.462,717,3.462,718,2.99,719,2.777,720,4.154,721,3.462,722,3.835,723,2.777,724,3.835,725,3.835,726,3.835,727,3.835,728,3.835]],["title/classes/CreateSettingsDto.html",[0,0.153,708,2.548]],["body/classes/CreateSettingsDto.html",[0,0.212,2,1.358,3,0.158,4,0.158,5,0.139,8,0.325,16,0.691,19,0.013,21,0.397,40,0.239,54,0.239,59,3.295,78,0.011,79,0.011,82,1.547,91,2.27,708,4.311,729,6.422,730,4.882,731,5.333,732,5.333,733,5.692,734,5.602,735,5.602]],["title/classes/CreateSettingsHandler.html",[0,0.153,723,2.548]],["body/classes/CreateSettingsHandler.html",[0,0.225,2,1.091,3,0.127,4,0.127,5,0.111,8,0.261,9,1.173,10,2.271,11,2.122,13,1.257,16,0.601,18,0.945,19,0.013,20,0.629,21,0.427,22,0.601,34,0.919,40,0.314,54,0.254,55,2.678,61,1.301,76,0.798,78,0.009,79,0.009,94,0.638,105,2.05,155,1.83,537,3.565,632,2.034,704,4.765,705,5.236,706,3.54,707,5.178,708,4.467,713,5.799,714,4,715,3.921,716,3.54,717,3.54,718,3.034,719,2.84,720,4.771,721,3.54,722,3.921,723,3.751,724,5.178,725,5.178,726,3.921,727,3.921,728,3.921,736,5.942,737,4.499,738,4.499,739,4.499,740,3.921]],["title/classes/CreateUsers.html",[0,0.153,741,3.177]],["body/classes/CreateUsers.html",[0,0.202,2,1.294,3,0.151,4,0.151,5,0.132,8,0.31,9,1.308,10,2.756,11,2.3,16,0.54,18,0.849,19,0.013,20,0.565,21,0.385,22,0.54,34,1.09,35,2.27,40,0.283,54,0.228,63,1.894,78,0.01,79,0.01,105,2.042,126,1.588,160,2.292,480,1.965,620,3.593,741,5.217,742,4.651,743,7.212,744,5.778,745,6.629,746,7.757,747,5.337,748,5.337,749,5.337,750,4.651,751,5.337]],["title/classes/CreateUsersTable1622299665807.html",[0,0.153,752,3.177]],["body/classes/CreateUsersTable1622299665807.html",[0,0.151,2,0.97,3,0.113,4,0.113,5,0.099,8,0.232,9,1.083,10,2.791,11,2.33,16,0.634,18,0.873,19,0.013,20,0.749,21,0.424,22,0.555,34,1.122,35,2.31,40,0.171,54,0.171,63,2.395,78,0.009,79,0.009,82,1.244,84,3.268,94,0.568,105,1.691,111,3.973,126,1.19,155,1.232,157,5.463,158,4.32,159,4.32,160,3.036,161,1.79,163,4.785,164,6.736,166,4.785,168,4.785,169,5.286,170,4.32,172,2.381,173,5.309,174,3.486,175,3.486,176,4.32,177,3.486,181,3.973,183,2.381,185,3.486,186,2.381,191,4.61,195,4.785,314,2.525,499,2.693,539,2.381,604,3.095,752,5.309,753,5.88,754,3.486,755,4,756,4,757,4,758,6.268,759,4,760,3.148,761,4,762,7.303,763,7.303,764,4,765,2.693,766,3.486,767,4]],["title/injectables/ExistsValidator.html",[196,0.914,768,2.922]],["body/injectables/ExistsValidator.html",[0,0.222,3,0.1,4,0.1,5,0.087,8,0.205,9,0.993,10,2.24,11,2.038,13,0.747,16,0.593,18,1.016,19,0.013,20,0.677,21,0.42,22,0.593,34,1.028,35,1.723,38,1.58,40,0.3,54,0.215,57,1.253,61,1.283,63,1.253,76,1.04,78,0.008,79,0.008,89,2.442,94,1.025,105,1.088,107,1.3,121,1.3,126,1.497,143,0.721,150,2.348,161,2.623,196,1.14,198,1.457,253,0.721,256,1.99,440,1.126,632,1.209,768,4.242,769,2.555,770,4.385,771,3.946,772,3.077,773,4.726,774,3.53,775,3.959,776,5.228,777,3.53,778,4.301,779,3.077,780,4.623,781,3.53,782,3.641,783,2.555,784,4.623,785,3.641,786,2.993,787,3.641,788,3.641,789,3.641,790,3.387,791,3.641,792,3.959,793,2.555,794,3.641,795,4.242,796,4.242,797,3.641,798,2.555,799,2.377,800,2.555,801,2.778,802,3.077,803,3.077,804,3.077,805,3.959,806,2.555,807,3.946,808,2.229,809,2.555,810,3.387,811,2.555,812,2.555]],["title/classes/FileNotImageException.html",[0,0.153,813,2.922]],["body/classes/FileNotImageException.html",[0,0.217,2,1.389,3,0.162,4,0.162,5,0.142,13,1.211,16,0.579,18,0.911,19,0.013,20,0.607,21,0.333,22,0.579,33,3.068,40,0.245,54,0.245,78,0.011,79,0.011,94,1.056,145,4.12,253,1.17,440,2.208,813,5.009,814,6.033,815,4.99,816,6.484,817,6.033,818,5.726,819,5.726]],["title/classes/GeneratorProvider.html",[0,0.153,820,3.177]],["body/classes/GeneratorProvider.html",[0,0.152,2,0.972,3,0.113,4,0.113,5,0.099,8,0.233,9,1.085,16,0.757,18,1.074,19,0.013,20,0.715,21,0.411,22,0.782,34,1.529,40,0.235,48,2.386,54,0.171,61,0.878,67,1.591,76,1.256,78,0.009,79,0.009,94,1.161,172,4.455,186,3.273,226,2.808,653,4.327,664,7.155,820,4.327,821,3.494,822,6.275,823,5.498,824,6.275,825,5.498,826,5.498,827,4.792,828,4.009,829,4.792,830,4.009,831,4.009,832,4.009,833,4.009,834,4.009,835,4.009,836,4.009,837,5.498,838,4.009,839,5.498,840,5.498,841,4.009,842,4.009,843,3.494,844,4.009,845,4.009,846,4.009,847,4.009]],["title/injectables/GeneratorService.html",[196,0.914,631,2.403]],["body/injectables/GeneratorService.html",[0,0.197,3,0.147,4,0.147,5,0.129,8,0.302,9,1.287,10,3.002,16,0.66,18,0.827,19,0.013,20,0.551,21,0.302,22,0.526,34,1.332,40,0.279,54,0.222,76,1.157,78,0.01,79,0.01,94,1.131,172,4.745,196,1.477,198,2.145,253,1.062,631,3.882,653,5.132,827,5.684,829,5.684,843,4.53,848,4.53,849,5.198,850,5.198,851,5.198]],["title/controllers/HealthCheckerController.html",[470,2.062,852,2.922]],["body/controllers/HealthCheckerController.html",[0,0.187,3,0.14,4,0.14,5,0.122,8,0.287,9,1.246,11,2.221,13,1.045,16,0.5,19,0.013,21,0.287,34,1.01,35,2.163,40,0.313,54,0.211,76,0.877,78,0.01,79,0.01,91,1.522,107,2.563,253,1.01,345,4.307,378,4.252,470,2.524,472,2.648,474,3.577,852,4.571,853,4.571,854,4.307,855,6.067,856,5.773,857,4.942,858,4.942,859,4.942,860,4.571,861,6.316,862,6.961,863,6.316,864,3.987,865,4.307,866,4.942,867,4.942,868,4.942,869,4.942,870,4.942,871,4.307,872,4.942,873,4.942]],["title/modules/HealthCheckerModule.html",[346,1.666,352,2.718]],["body/modules/HealthCheckerModule.html",[0,0.203,3,0.152,4,0.152,5,0.133,19,0.013,40,0.323,54,0.229,78,0.01,79,0.01,253,1.097,290,2.619,346,2.746,348,3.565,352,5.331,355,4.2,356,3.389,357,3.027,359,3.614,378,3.614,472,3.565,560,4.2,852,5.233,853,3.885,855,5.799,860,3.885,864,4.998,865,4.679,874,4.679,875,4.679,876,5.368,877,6.654,878,5.368]],["title/classes/HttpExceptionFilter.html",[0,0.153,879,3.177]],["body/classes/HttpExceptionFilter.html",[0,0.197,2,0.896,3,0.104,4,0.104,5,0.092,8,0.215,9,1.026,10,1.986,13,0.782,16,0.66,18,0.956,19,0.013,20,0.637,21,0.425,22,0.608,31,3.222,34,1.062,40,0.304,54,0.158,60,3.882,61,1.663,76,0.922,78,0.008,79,0.008,82,1.177,105,1.601,107,2.213,141,2.675,145,2.201,160,1.588,181,3.761,253,1.062,258,1.888,272,4.35,308,4.73,372,2.675,505,2.675,786,1.888,807,3.499,879,4.09,880,5.988,881,3.222,882,5.239,883,5.977,884,5.197,885,2.909,886,3.697,887,3.697,888,4.53,889,6.521,890,5.683,891,3.697,892,5.197,893,7.126,894,3.697,895,6.011,896,2.675,897,4.53,898,2.675,899,2.489,900,3.697,901,3.222,902,3.222,903,3.222,904,3.222,905,3.222,906,3.697,907,3.697,908,4.53,909,3.697,910,3.697,911,3.697,912,5.197,913,5.197,914,3.697,915,3.697,916,3.697,917,5.197,918,3.697,919,5.197,920,3.697,921,3.697,922,3.697,923,3.222,924,3.697,925,3.697]],["title/interfaces/IAbstractEntity.html",[106,2.276,143,0.825]],["body/interfaces/IAbstractEntity.html",[0,0.255,3,0.113,4,0.113,5,0.099,8,0.232,9,1.083,13,1.161,16,0.405,18,0.636,19,0.013,20,0.424,21,0.443,22,0.405,33,2.143,34,0.817,40,0.268,48,2.381,54,0.235,61,0.876,66,2.255,67,2.179,76,0.71,78,0.009,79,0.009,80,1.951,82,1.244,83,5.117,84,4.208,85,5.117,87,1.867,89,2.578,90,4.295,94,0.957,104,3.148,105,1.232,106,3.534,107,1.473,108,5.463,109,5.463,111,3.973,114,3.486,118,5.463,119,5.88,121,2.021,122,3.957,123,4.785,124,3.486,125,4.785,126,1.19,127,3.486,128,5.88,129,3.148,130,3.148,131,3.148,132,3.973,133,2.143,134,4.32,135,4.785,136,4.785,137,4.32,138,4.785,139,4.32,140,4.32,141,3.973,142,3.957,143,0.817,144,3.486,145,2.381,146,3.486,147,2.381,148,3.486,149,2.895,150,1.867,151,3.486,404,1.42,926,4]],["title/interfaces/IApiFile.html",[143,0.825,927,3.177]],["body/interfaces/IApiFile.html",[3,0.165,4,0.165,5,0.145,8,0.34,19,0.013,20,0.825,21,0.408,22,0.71,54,0.25,59,3.226,78,0.011,79,0.011,82,1.589,94,1.066,143,1.197,404,2.079,927,5.521,928,5.104,929,5.243]],["title/interfaces/IExistsValidationArguments.html",[143,0.825,780,2.922]],["body/interfaces/IExistsValidationArguments.html",[0,0.234,3,0.11,4,0.11,5,0.096,8,0.226,10,1.486,11,1.717,19,0.013,20,0.412,21,0.387,35,1.331,38,1.74,40,0.309,54,0.23,57,1.38,61,1.352,63,1.38,76,1.096,78,0.008,79,0.008,82,1.219,89,2.547,94,0.946,105,1.198,107,1.432,121,1.432,126,1.602,143,0.794,150,2.513,161,2.409,196,1.219,253,0.794,256,2.192,404,1.38,440,1.717,632,1.331,768,3.896,769,2.814,771,2.618,773,4.158,775,3.06,776,5.24,778,2.618,780,4.469,782,2.814,783,2.814,784,4.824,785,3.896,786,3.153,787,3.896,788,3.896,789,3.896,790,3.624,791,3.896,792,4.236,793,2.814,794,3.896,795,4.469,796,4.469,797,3.896,798,2.814,799,2.618,800,2.814,801,3.06,802,3.389,803,3.389,804,3.389,805,5.245,806,2.814,807,4.874,808,2.454,809,2.814,810,3.624,811,2.814,812,2.814]],["title/interfaces/IFile.html",[143,0.825,495,2.548]],["body/interfaces/IFile.html",[3,0.149,4,0.149,5,0.131,8,0.306,19,0.013,21,0.458,54,0.225,78,0.01,79,0.01,82,1.491,94,1.177,143,1.078,226,3.663,404,1.872,495,4.154,930,4.597,931,7.996,932,7.511,933,7.511,934,6.547,935,7.511,936,7.511]],["title/interfaces/INumberFieldOptions.html",[143,0.825,937,2.922]],["body/interfaces/INumberFieldOptions.html",[0,0.099,3,0.043,4,0.043,5,0.038,8,0.089,19,0.014,21,0.411,22,0.636,38,2.98,40,0.254,44,1.033,54,0.313,57,1.21,58,3.862,59,2.904,61,1.376,76,1.298,78,0.004,79,0.004,82,0.591,90,0.865,91,1.833,92,1.274,94,0.571,96,1.121,121,2.928,143,0.533,150,3.415,226,3.039,253,0.314,258,0.784,404,0.545,409,0.822,503,3.523,516,0.748,615,1.648,692,1.89,693,2.055,694,2.055,695,1.89,696,1.207,697,1.207,733,1.11,786,0.784,808,4.618,899,1.033,929,1.033,937,2.466,938,1.11,939,5.708,940,3.788,941,4.561,942,3.263,943,3.548,944,5.708,945,1.337,946,1.337,947,1.337,948,1.337,949,2.275,950,2.275,951,1.89,952,1.337,953,1.337,954,2.055,955,1.337,956,5.056,957,1.758,958,2.275,959,1.337,960,1.337,961,2.275,962,1.337,963,2.055,964,2.275,965,1.11,966,1.207,967,1.207,968,1.337,969,2.055,970,2.055,971,2.055,972,2.682,973,2.055,974,1.89,975,1.337,976,2.055,977,1.89,978,2.055,979,1.337,980,2.682,981,5.599,982,4.159,983,2.055,984,6.282,985,1.337,986,1.337,987,1.337,988,1.337,989,0.865,990,1.337,991,2.275,992,1.337,993,1.337,994,1.337,995,1.337,996,1.337,997,1.337,998,1.337,999,5.186,1000,1.11,1001,3.165,1002,5.008,1003,4.275,1004,1.337,1005,1.337,1006,1.337,1007,1.337,1008,1.337,1009,1.337,1010,1.337,1011,1.337,1012,1.033,1013,2.055,1014,1.337,1015,1.337,1016,1.337,1017,1.337,1018,1.207,1019,2.055,1020,2.055,1021,1.337,1022,1.337,1023,1.337,1024,1.337,1025,1.207,1026,2.055,1027,1.207,1028,1.207,1029,2.97,1030,2.275,1031,1.337,1032,1.337,1033,2.275,1034,1.337,1035,1.11,1036,1.337,1037,2.055,1038,1.207,1039,2.055,1040,1.207,1041,2.055,1042,1.337,1043,2.275,1044,1.337,1045,1.337,1046,1.207,1047,2.055,1048,1.337,1049,1.207,1050,2.055,1051,1.337,1052,1.207]],["title/interfaces/IPageMetaDtoParameters.html",[143,0.825,1053,2.922]],["body/interfaces/IPageMetaDtoParameters.html",[0,0.182,3,0.136,4,0.136,5,0.119,8,0.28,13,1.02,19,0.013,21,0.4,40,0.266,54,0.206,59,2.671,78,0.01,79,0.01,82,1.409,92,3.823,96,2.071,143,0.985,226,4.002,404,1.712,412,2.584,425,3.913,426,2.719,457,5.277,632,2.638,989,2.719,1053,4.98,1054,3.491,1055,3.795,1056,3.506,1057,3.491,1058,4.204,1059,4.204,1060,4.204,1061,5.415,1062,4.204,1063,4.893,1064,4.204,1065,4.204,1066,4.204,1067,4.204,1068,4.204,1069,4.204]],["title/interfaces/IStringFieldOptions.html",[143,0.825,982,2.922]],["body/interfaces/IStringFieldOptions.html",[0,0.099,3,0.044,4,0.044,5,0.038,8,0.09,19,0.014,21,0.408,22,0.604,38,2.987,40,0.255,44,1.041,54,0.313,57,1.217,58,3.869,59,2.819,61,1.38,76,1.3,78,0.004,79,0.004,82,0.595,90,0.872,91,1.839,92,1.282,94,0.574,96,1.129,121,2.931,143,0.537,150,3.42,226,3.048,253,0.316,258,0.79,404,0.549,409,0.828,503,3.537,516,0.754,615,1.659,692,1.902,693,2.068,694,2.068,695,1.902,696,1.217,697,1.217,733,1.119,786,0.79,808,4.625,899,1.041,929,1.041,937,1.902,938,1.119,939,5.356,940,2.925,941,3.523,942,1.902,943,2.068,944,5.721,945,1.348,946,1.348,947,1.348,948,1.348,949,2.29,950,2.29,951,1.902,952,1.348,953,1.348,954,2.068,955,1.348,956,5.068,957,1.769,958,2.29,959,1.348,960,1.348,961,3.947,962,1.348,963,3.564,964,2.29,965,1.119,966,1.217,967,1.217,968,1.348,969,2.068,970,2.068,971,2.068,972,3.876,973,3.564,974,1.902,975,1.348,976,2.068,977,1.902,978,2.068,979,1.348,980,2.697,981,5.613,982,4.319,983,2.068,984,6.292,985,1.348,986,1.348,987,1.348,988,1.348,989,0.872,990,1.348,991,2.29,992,1.348,993,1.348,994,1.348,995,1.348,996,1.348,997,1.348,998,1.348,999,5.202,1000,1.119,1001,3.181,1002,5.024,1003,4.292,1004,1.348,1005,1.348,1006,1.348,1007,1.348,1008,1.348,1009,1.348,1010,1.348,1011,1.348,1012,1.041,1013,2.068,1014,1.348,1015,1.348,1016,1.348,1017,1.348,1018,1.217,1019,2.068,1020,2.068,1021,1.348,1022,1.348,1023,1.348,1024,1.348,1025,1.217,1026,2.068,1027,1.217,1028,1.217,1029,2.987,1030,2.29,1031,1.348,1032,1.348,1033,2.29,1034,1.348,1035,1.119,1036,1.348,1037,2.068,1038,1.217,1039,2.068,1040,1.217,1041,2.068,1042,1.348,1043,2.29,1044,1.348,1045,1.348,1046,1.217,1047,2.068,1048,1.348,1049,1.217,1050,2.068,1051,1.348,1052,1.217]],["title/interfaces/ITranslationDecoratorInterface.html",[143,0.825,1070,2.922]],["body/interfaces/ITranslationDecoratorInterface.html",[3,0.172,4,0.172,5,0.15,8,0.353,19,0.013,21,0.353,54,0.259,78,0.011,79,0.011,82,1.624,94,1.083,143,1.241,404,2.156,1070,5.189,1071,5.293,1072,7.88]],["title/interfaces/IUniqueValidationArguments.html",[143,0.825,1073,2.922]],["body/interfaces/IUniqueValidationArguments.html",[0,0.241,3,0.117,4,0.117,5,0.102,8,0.24,10,1.581,11,1.792,19,0.013,20,0.438,21,0.371,35,1.417,38,1.851,40,0.315,54,0.24,57,1.469,61,0.906,63,1.469,76,0.997,78,0.009,79,0.009,82,1.273,94,0.905,105,1.275,107,1.524,121,1.524,126,1.672,143,0.845,150,2.978,161,2.514,183,3.344,196,1.273,253,0.845,256,2.333,404,1.469,440,1.792,632,1.417,771,2.786,773,4.295,776,5.178,778,2.786,782,2.994,783,2.994,784,4.952,785,4.066,786,3.257,787,4.066,788,4.066,789,4.066,790,3.782,791,4.066,793,2.994,794,2.994,795,4.617,796,4.066,797,2.994,798,2.994,799,2.786,800,2.994,806,2.994,807,4.967,808,2.612,809,2.994,810,3.782,811,2.994,812,2.994,1073,4.617,1074,2.994,1075,5.02,1076,4.066]],["title/interfaces/IUserEntity.html",[143,0.825,1077,2.548]],["body/interfaces/IUserEntity.html",[0,0.132,3,0.099,4,0.099,5,0.087,8,0.203,19,0.013,20,0.371,21,0.456,22,0.809,40,0.32,54,0.214,57,2.558,78,0.008,79,0.008,82,1.133,87,2.335,89,1.912,91,1.079,94,1.178,105,1.079,106,3.29,126,1.042,143,0.716,147,2.085,155,1.541,160,1.505,183,2.085,191,2.211,314,4.25,404,1.244,420,2.978,440,1.862,480,1.29,483,1.709,499,4.533,515,3.751,516,1.709,539,4.008,604,3.796,718,2.98,719,3.158,765,4.533,1077,3.684,1078,2.757,1079,4.872,1080,5.867,1081,4.872,1082,5.867,1083,4.018,1084,4.961,1085,3.621,1086,3.937,1087,2.211,1088,3.158,1089,2.535,1090,5.509,1091,3.937,1092,3.053,1093,3.053,1094,3.053]],["title/interfaces/IUserSettingsEntity.html",[143,0.825,1083,2.548]],["body/interfaces/IUserSettingsEntity.html",[0,0.164,3,0.122,4,0.122,5,0.107,8,0.252,19,0.013,20,0.614,21,0.444,22,0.757,40,0.332,54,0.248,58,3.107,59,3.333,78,0.009,79,0.009,82,1.314,87,2.707,89,2.216,91,1.336,94,0.615,105,1.336,106,3.683,126,1.29,143,0.886,147,2.581,155,2.304,160,2.49,171,3.412,172,2.581,180,3.412,404,1.539,420,3.452,440,2.084,480,2.406,483,2.115,537,2.324,718,2.214,731,5.261,732,5.261,1077,4.403,1083,4.124,1084,4.696,1085,4.197,1087,2.737,1088,3.66,1089,3.138,1095,3.138,1096,3.412,1097,5.054,1098,3.66,1099,3.412]],["title/injectables/JwtStrategy.html",[196,0.914,557,2.718]],["body/injectables/JwtStrategy.html",[0,0.159,3,0.119,4,0.119,5,0.104,8,0.245,9,1.123,11,2.054,13,1.203,16,0.576,18,0.905,19,0.013,20,0.603,21,0.44,22,0.576,28,4.117,34,0.861,35,1.948,40,0.329,54,0.18,61,0.923,63,1.496,66,3.207,67,2.258,76,0.748,78,0.009,79,0.009,84,2.509,94,0.598,107,2.095,155,1.984,196,1.289,197,3.363,198,1.74,217,3.317,218,3.207,253,0.861,382,3.05,383,2.661,440,1.345,480,1.552,515,3.048,516,2.775,522,3.317,523,4.063,524,3.317,537,2.258,539,3.386,557,3.83,566,3.05,573,3.05,576,3.673,594,4.477,601,3.673,603,3.673,771,3.83,778,2.838,1100,3.673,1101,4.215,1102,5.689,1103,4.215,1104,6.44,1105,3.673,1106,4.215,1107,3.673,1108,3.317,1109,3.673,1110,3.317,1111,4.215,1112,4.215,1113,4.215,1114,4.215,1115,4.215,1116,4.215]],["title/classes/LoginPayloadDto.html",[0,0.153,489,2.922]],["body/classes/LoginPayloadDto.html",[0,0.187,2,1.198,3,0.14,4,0.14,5,0.122,8,0.287,13,1.045,16,0.704,18,0.786,19,0.013,20,0.523,21,0.44,22,0.5,40,0.297,54,0.211,78,0.01,79,0.01,82,1.431,91,1.946,92,3.396,96,2.123,155,2.335,483,3.893,489,4.571,521,4.307,534,6.202,595,5.426,1117,4.307,1118,5.505,1119,6.316,1120,6.316,1121,4.942,1122,4.942,1123,4.942]],["title/classes/PageDto.html",[0,0.153,49,2.163]],["body/classes/PageDto.html",[0,0.188,2,1.205,3,0.14,4,0.14,5,0.123,8,0.289,13,1.051,16,0.706,18,0.79,19,0.013,20,0.526,21,0.405,22,0.503,26,5.496,40,0.271,49,3.396,54,0.212,57,2.25,78,0.01,79,0.01,82,1.436,91,1.953,92,3.586,96,2.134,409,4.069,412,4.16,424,3.596,632,2.659,929,3.346,1056,2.802,1124,4.331,1125,7.891,1126,5.524,1127,6.338,1128,4.969,1129,4.969,1130,4.969,1131,4.969]],["title/classes/PageMetaDto.html",[0,0.153,412,2.163]],["body/classes/PageMetaDto.html",[0,0.152,2,0.972,3,0.113,4,0.113,5,0.099,8,0.233,13,1.163,16,0.757,18,0.638,19,0.013,20,0.425,21,0.443,22,0.406,40,0.235,54,0.171,59,2.9,78,0.009,79,0.009,82,1.245,91,2.251,92,3.912,96,1.722,143,0.819,226,3.949,412,2.946,425,3.294,426,2.26,457,4.92,632,2.811,989,2.26,1053,4.887,1054,5.516,1055,3.155,1056,3.807,1057,4.542,1058,5.469,1059,5.469,1060,5.469,1061,4.938,1062,3.494,1063,4.327,1064,3.494,1065,3.494,1066,3.494,1067,3.494,1068,3.494,1069,3.494,1132,4.009,1133,5.498,1134,4.009,1135,4.009,1136,4.009,1137,4.009,1138,4.009]],["title/classes/PageOptionsDto.html",[0,0.153,425,1.969]],["body/classes/PageOptionsDto.html",[0,0.154,2,0.99,3,0.115,4,0.115,5,0.101,8,0.237,16,0.72,19,0.013,21,0.395,22,0.563,40,0.238,54,0.174,57,2.415,70,2.301,76,0.724,78,0.009,79,0.009,82,1.261,91,2.193,94,0.79,160,3.334,161,2.834,204,4.851,226,3.636,425,2.715,448,4.265,516,1.991,632,2.735,940,4.924,942,4.028,943,4.38,989,4.376,1000,4.584,1012,4.265,1035,4.028,1054,5.318,1056,3.571,1057,4.584,1061,3.212,1063,3.212,1139,3.212,1140,5.918,1141,6.334,1142,5.52,1143,3.557,1144,4.081,1145,4.851,1146,4.081,1147,4.081,1148,5.93,1149,4.851,1150,4.081,1151,4.081,1152,4.081]],["title/classes/PageTypeException.html",[0,0.153,51,2.922]],["body/classes/PageTypeException.html",[0,0.224,2,1.439,3,0.168,4,0.168,5,0.147,13,1.598,16,0.6,19,0.013,40,0.253,51,5.117,54,0.253,78,0.011,79,0.011,253,1.212,440,2.256,816,6.583,1153,6.163,1154,5.171,1155,5.933,1156,5.933]],["title/controllers/PostController.html",[470,2.062,1157,2.922]],["body/controllers/PostController.html",[0,0.206,3,0.154,4,0.154,5,0.135,8,0.317,9,1.325,13,1.153,15,5.285,16,0.551,19,0.013,22,0.679,23,4.749,34,1.113,40,0.287,42,3.669,54,0.233,76,0.967,78,0.011,79,0.011,91,1.679,107,2.007,149,5.499,253,1.113,268,4.288,394,3.44,470,2.783,472,2.92,474,3.944,1157,4.86,1158,4.749,1159,5.449,1160,6.716,1161,5.449,1162,5.449,1163,4.749,1164,5.449,1165,5.449]],["title/modules/PostModule.html",[346,1.666,353,2.718]],["body/modules/PostModule.html",[0,0.227,3,0.17,4,0.17,5,0.149,19,0.013,40,0.304,54,0.257,78,0.011,79,0.011,253,1.228,290,2.933,346,2.941,353,4.798,472,3.819,1157,5.497,1166,6.012,1167,6.012]],["title/injectables/PublicStrategy.html",[196,0.914,558,2.718]],["body/injectables/PublicStrategy.html",[0,0.205,3,0.153,4,0.153,5,0.134,8,0.316,9,1.323,10,2.076,13,1.538,16,0.678,19,0.013,34,1.11,40,0.311,54,0.232,57,1.929,60,3.99,76,0.964,78,0.011,79,0.011,196,1.518,198,2.242,253,1.11,440,1.733,558,4.513,566,3.932,1105,4.735,1107,4.735,1108,4.275,1109,4.735,1110,4.275,1168,4.735,1169,7.59,1170,5.433,1171,5.433,1172,5.433,1173,5.433]],["title/interfaces/QueryBuilder.html",[143,0.825,418,2.548]],["body/interfaces/QueryBuilder.html",[3,0.095,4,0.138,5,0.084,8,0.283,9,0.962,11,1.078,16,0.342,18,0.537,19,0.014,20,0.516,21,0.386,22,0.342,35,1.157,38,2.181,40,0.318,49,2.612,61,1.598,63,1.73,67,2.27,76,1.227,78,0.008,79,0.008,80,2.378,87,1.577,89,2.186,94,0.981,121,2.547,122,3.61,126,1.451,133,1.81,143,1.168,150,2.923,258,1.725,346,1.394,403,2.275,404,1.199,405,2.445,407,2.659,408,2.659,409,2.612,412,3.984,414,3.282,415,2.659,416,3.836,417,2.659,418,3.61,419,3.85,420,2.011,421,2.133,422,2.275,423,3.528,424,2.445,425,3.374,426,1.905,427,2.275,428,2.659,429,2.659,430,3.836,431,2.445,432,2.445,433,2.445,434,2.659,435,2.659,436,3.836,437,5.224,438,2.659,439,2.659,440,1.078,441,2.659,442,4.5,443,2.659,444,2.659,445,2.659,446,2.659,447,2.659,448,4.469,449,2.659,450,2.659,451,2.659,452,2.659,453,2.659,454,2.659,455,2.659,456,2.659,457,3.282,458,2.659,459,2.659,460,2.659,461,3.528,462,2.659,463,2.659,464,2.659,465,2.659,466,2.659,467,2.659,468,2.659,469,2.659,1174,4.875,1175,3.378]],["title/classes/QueryFailedFilter.html",[0,0.153,1176,3.177]],["body/classes/QueryFailedFilter.html",[0,0.161,2,1.034,3,0.12,4,0.12,5,0.106,8,0.248,9,1.132,10,2.192,13,0.902,16,0.655,18,0.912,19,0.013,20,0.607,21,0.42,22,0.58,34,0.871,40,0.325,54,0.182,60,2.539,61,1.418,70,2.404,78,0.009,79,0.009,82,1.299,94,0.605,105,1.766,126,1.269,145,2.539,181,4.15,253,1.172,272,5.014,308,5.098,505,4.15,509,3.356,882,5.646,883,6.164,885,3.356,888,3.717,890,6.038,896,3.086,897,4.997,898,3.086,901,3.717,902,3.717,903,3.717,904,3.717,905,3.717,908,3.717,1176,4.512,1177,6.038,1178,3.717,1179,4.265,1180,4.265,1181,4.265,1182,4.265,1183,4.265,1184,5.734,1185,3.356,1186,4.265,1187,4.265,1188,4.512,1189,4.265,1190,4.265,1191,4.265,1192,4.265,1193,4.265,1194,4.265,1195,4.265]],["title/guards/RolesGuard.html",[1196,3.177,1197,3.177]],["body/guards/RolesGuard.html",[0,0.179,3,0.134,4,0.134,5,0.117,8,0.275,9,1.212,13,1.001,16,0.622,18,0.977,19,0.013,20,0.651,21,0.434,22,0.622,34,0.967,40,0.328,54,0.202,55,2.818,57,1.681,59,2.639,61,1.493,76,1.09,78,0.01,79,0.01,105,1.459,155,1.459,196,1.392,253,1.255,258,2.418,480,1.743,515,2.537,516,2.309,614,5.224,618,3.188,620,3.188,623,3.188,624,3.726,625,3.726,632,1.621,750,4.126,883,6.032,885,3.726,896,3.427,899,3.188,1197,4.835,1198,4.735,1199,4.126,1200,7.219,1201,4.735,1202,6.144,1203,4.735,1204,4.735,1205,4.735,1206,4.735,1207,4.735]],["title/interfaces/SelectQueryBuilder.html",[143,0.825,419,2.718]],["body/interfaces/SelectQueryBuilder.html",[3,0.094,4,0.136,5,0.083,8,0.28,9,0.953,11,1.064,16,0.337,18,0.53,19,0.014,20,0.511,21,0.384,22,0.337,33,1.787,34,0.681,35,1.653,38,2.784,40,0.317,49,2.587,61,1.592,63,1.714,67,2.254,76,1.222,78,0.008,79,0.008,80,2.355,87,1.557,89,2.17,94,0.685,121,2.678,122,3.583,126,1.437,133,1.787,143,1.16,150,2.905,258,1.703,346,1.376,403,2.245,404,1.184,405,2.413,407,2.624,408,2.624,409,2.587,412,3.971,414,3.251,415,2.624,416,3.8,417,2.624,418,3.048,419,4.636,420,1.985,421,2.105,422,2.245,423,3.495,424,2.413,425,3.671,426,1.88,427,2.245,428,2.624,429,2.624,430,3.8,431,2.413,432,2.413,433,2.413,434,2.624,435,2.624,436,2.624,437,4.467,438,4.467,439,2.624,440,1.064,441,2.624,442,4.467,443,2.624,444,2.624,445,2.624,446,2.624,447,2.624,448,4.19,449,2.624,450,2.624,451,2.624,452,2.624,453,2.624,454,2.624,455,2.624,456,2.624,457,3.251,458,2.624,459,2.624,460,2.624,461,3.495,462,2.624,463,2.624,464,2.624,465,2.624,466,2.624,467,2.624,468,2.624,469,2.624,1208,3.335,1209,3.335]],["title/injectables/ServiceHealthIndicator.html",[196,0.914,864,2.548]],["body/injectables/ServiceHealthIndicator.html",[0,0.16,3,0.12,4,0.12,5,0.105,8,0.246,9,1.126,11,2.059,13,1.207,15,5.846,16,0.577,18,0.908,19,0.013,20,0.604,21,0.375,22,0.699,34,0.865,35,1.954,40,0.317,42,2.851,46,4.974,47,3.065,54,0.181,57,1.503,61,0.927,63,1.503,66,2.387,67,1.681,69,3.691,70,2.387,76,1.013,78,0.009,79,0.009,94,0.916,107,1.559,145,3.397,158,3.332,196,1.293,198,1.748,253,0.865,270,3.332,272,3.065,378,4.346,394,2.673,440,1.82,632,1.45,853,4.672,856,3.332,860,4.13,864,3.602,871,3.691,1110,3.332,1163,3.691,1188,3.332,1210,3.691,1211,6.455,1212,5.707,1213,4.235,1214,4.235,1215,5.707,1216,4.235,1217,6.908,1218,4.235,1219,4.235,1220,3.691,1221,4.235,1222,5.707,1223,4.235,1224,4.235,1225,4.235,1226,4.235]],["title/modules/SharedModule.html",[346,1.666,384,2.718]],["body/modules/SharedModule.html",[0,0.144,3,0.108,4,0.108,5,0.094,19,0.013,20,0.404,40,0.322,42,2.568,54,0.163,61,1.163,76,0.677,78,0.008,79,0.008,121,1.404,197,3.881,214,3.001,218,2.15,253,0.779,290,1.86,346,2.192,348,2.846,355,3.353,356,2.408,357,2.15,359,2.568,383,2.408,384,5.515,392,2.76,394,2.408,431,3.845,560,4.173,561,4.18,628,4.66,631,4.66,1227,3.324,1228,3.324,1229,3.324,1230,4.413,1231,4.66,1232,3.001,1233,6.112,1234,3.324,1235,3.814,1236,4.63,1237,3.814,1238,3.814,1239,3.324,1240,3.814,1241,3.814,1242,3.814,1243,3.324,1244,4.63,1245,3.324,1246,3.324,1247,3.324,1248,3.324,1249,3.324]],["title/classes/SnakeNamingStrategy.html",[0,0.153,262,2.922]],["body/classes/SnakeNamingStrategy.html",[0,0.116,2,0.745,3,0.087,4,0.087,5,0.076,8,0.179,9,0.898,16,0.7,18,1.101,19,0.013,20,0.733,21,0.413,22,0.7,33,1.647,34,1.414,40,0.231,54,0.131,76,1.229,78,0.007,79,0.007,94,1.207,105,1.401,126,1.354,262,3.292,440,1.451,810,4.661,899,4.302,1250,6.195,1251,2.679,1252,5.415,1253,5.415,1254,5.415,1255,7.108,1256,4.549,1257,5.415,1258,5.415,1259,5.415,1260,6.389,1261,3.074,1262,5.415,1263,3.074,1264,4.549,1265,3.074,1266,7.385,1267,5.415,1268,3.074,1269,4.549,1270,5.986,1271,3.074,1272,3.074,1273,3.074,1274,3.074,1275,5.986,1276,5.415,1277,5.415,1278,3.074,1279,5.415,1280,4.549,1281,3.074,1282,4.549,1283,3.074,1284,3.074,1285,5.415,1286,3.074,1287,3.074,1288,3.074,1289,4.549,1290,3.074,1291,3.074,1292,3.074]],["title/classes/TokenPayloadDto.html",[0,0.153,595,2.718]],["body/classes/TokenPayloadDto.html",[0,0.196,2,1.257,3,0.146,4,0.146,5,0.128,8,0.301,13,1.096,16,0.72,18,0.824,19,0.013,20,0.549,21,0.447,22,0.524,26,3.751,28,4.711,40,0.221,54,0.221,78,0.01,79,0.01,82,1.475,91,2.005,92,3.751,94,1.01,96,2.226,226,3.634,580,5.874,595,4.383,598,6.506,1126,5.673,1293,4.517,1294,6.51,1295,5.183,1296,5.183,1297,5.183,1298,5.183,1299,5.183]],["title/injectables/TranslationInterceptor.html",[196,0.914,1300,3.177]],["body/injectables/TranslationInterceptor.html",[0,0.176,3,0.132,4,0.132,5,0.115,8,0.271,9,1.2,10,2.587,13,0.986,16,0.615,18,0.967,19,0.013,20,0.644,21,0.432,22,0.615,34,0.952,40,0.326,47,3.373,54,0.199,55,2.775,76,0.827,78,0.01,79,0.01,80,2.274,105,1.436,196,1.378,198,1.924,253,1.243,421,2.942,611,3.668,612,5.9,614,5.193,615,4.53,616,6.254,619,5.301,632,1.596,1220,4.062,1230,4.303,1300,4.786,1301,5.9,1302,4.661,1303,4.661,1304,4.661,1305,4.661,1306,6.082,1307,6.77,1308,4.661,1309,4.062,1310,4.661,1311,4.661,1312,4.661,1313,4.661]],["title/injectables/TranslationService.html",[196,0.914,1230,2.276]],["body/injectables/TranslationService.html",[0,0.143,3,0.107,4,0.107,5,0.093,8,0.219,9,1.041,11,2.349,13,0.798,16,0.615,18,1.047,19,0.013,20,0.644,21,0.417,22,0.615,34,1.077,35,2.253,40,0.321,54,0.161,55,2.247,61,0.826,63,2.336,76,1.229,78,0.008,79,0.008,80,2.965,94,0.863,121,2.423,122,3.837,160,1.621,161,2.72,186,3.917,196,1.195,198,1.558,253,0.771,258,1.927,371,3.816,372,4.399,404,1.34,409,3.526,414,2.541,421,2.382,621,2.541,622,3.289,632,1.292,929,2.541,957,2.541,1070,3.816,1230,2.973,1314,3.289,1315,5.297,1316,5.273,1317,3.774,1318,6.58,1319,3.774,1320,3.774,1321,6.58,1322,3.774,1323,5.273,1324,3.774,1325,3.774,1326,2.97,1327,3.774,1328,3.774,1329,5.273,1330,3.774,1331,3.774,1332,3.774,1333,3.774,1334,3.774,1335,3.774,1336,3.289,1337,3.774,1338,5.273,1339,3.774,1340,3.774,1341,3.774,1342,5.273,1343,3.774]],["title/injectables/UniqueValidator.html",[196,0.914,1076,2.922]],["body/injectables/UniqueValidator.html",[0,0.229,3,0.106,4,0.106,5,0.092,8,0.217,9,1.033,10,2.31,11,2.09,13,0.79,16,0.612,18,1.042,19,0.013,20,0.694,21,0.415,22,0.612,34,1.07,35,1.793,38,1.671,40,0.305,54,0.224,57,1.326,61,0.818,63,1.326,76,0.929,78,0.008,79,0.008,94,1.015,105,1.151,107,1.375,121,1.375,126,1.558,143,0.763,150,2.821,161,2.705,183,3.116,196,1.186,198,1.542,253,0.763,256,2.106,440,1.191,632,1.279,770,4.563,771,4.069,772,3.255,773,4.813,775,2.939,776,5.174,778,4.41,779,3.255,782,3.789,783,2.703,784,4.741,785,3.789,786,3.086,787,3.789,788,3.789,789,3.789,790,3.525,791,3.789,793,2.703,794,2.703,795,4.374,796,3.789,797,2.703,798,2.703,799,2.515,800,2.703,806,2.703,807,4.069,808,2.358,809,2.703,810,3.525,811,2.703,812,2.703,1073,4.741,1074,2.703,1075,2.939,1076,4.374,1344,3.735,1345,3.735,1346,3.735]],["title/controllers/UserController.html",[470,2.062,1347,2.922]],["body/controllers/UserController.html",[0,0.136,3,0.102,4,0.102,5,0.089,8,0.209,9,1.007,11,1.89,13,0.762,16,0.599,18,0.942,19,0.013,20,0.628,21,0.422,22,0.599,34,1.211,35,2.419,40,0.327,49,3.175,54,0.154,57,1.278,61,0.788,63,1.278,70,2.876,76,1.052,78,0.008,79,0.008,91,1.985,94,0.841,96,1.547,107,1.879,132,4.665,155,1.572,191,4.295,253,0.736,422,2.424,425,2.489,426,2.03,470,1.839,472,1.929,474,2.606,475,2.834,480,2.373,483,2.89,508,3.138,509,2.834,514,3.138,515,1.929,516,1.756,518,2.606,523,3.175,533,5.164,537,2.734,550,5.164,632,1.233,760,4.015,923,4.446,1056,2.03,1088,2.273,1098,2.273,1188,4.015,1230,3.341,1309,3.138,1336,3.138,1347,3.692,1348,3.138,1349,4.446,1350,5.164,1351,3.601,1352,3.601,1353,3.601,1354,3.138,1355,3.601,1356,6.445,1357,3.601,1358,3.138,1359,4.339,1360,3.601,1361,3.601,1362,3.601,1363,5.102,1364,5.925,1365,3.138,1366,3.138,1367,3.138,1368,3.601,1369,3.601,1370,3.601,1371,3.601,1372,3.601,1373,3.601,1374,3.138,1375,3.138,1376,5.102,1377,3.601,1378,3.601,1379,3.601,1380,3.601,1381,3.601,1382,3.601]],["title/classes/UserDto.html",[0,0.153,483,1.969]],["body/classes/UserDto.html",[0,0.186,2,0.827,3,0.096,4,0.096,5,0.084,8,0.198,13,0.721,16,0.783,18,0.542,19,0.013,20,0.361,21,0.46,22,0.79,33,1.827,38,1.526,40,0.269,54,0.21,59,2.108,78,0.008,79,0.008,80,3.384,82,1.112,83,3.552,84,2.921,85,3.552,90,2.767,91,2.359,92,3.384,94,1.108,96,1.465,121,2.117,142,2.153,155,1.051,312,4.524,421,2.153,440,1.566,480,2.315,483,2.394,499,3.871,515,3.57,516,1.664,539,3.422,547,5.01,604,3.241,765,3.871,1079,4.161,1081,4.161,1087,3.969,1091,2.684,1098,2.153,1118,4.277,1375,2.972,1383,2.684,1384,4.908,1385,7.869,1386,3.41,1387,3.41,1388,3.41,1389,3.41,1390,3.41,1391,3.41,1392,3.41,1393,3.41,1394,5.01,1395,3.41,1396,3.41,1397,3.41,1398,3.41,1399,2.972,1400,3.41,1401,3.41,1402,3.41,1403,3.41,1404,3.41,1405,3.41,1406,3.41,1407,3.41,1408,3.41,1409,3.41,1410,3.41,1411,3.41,1412,2.972,1413,3.41,1414,3.41,1415,3.41,1416,3.41]],["title/entities/UserEntity.html",[89,1.543,480,1.487]],["body/entities/UserEntity.html",[0,0.123,3,0.092,4,0.092,5,0.08,8,0.188,16,0.745,19,0.013,20,0.344,21,0.45,22,0.8,40,0.315,54,0.202,57,2.77,70,1.829,78,0.007,79,0.007,82,1.072,87,2.21,89,1.809,91,2.304,94,1.149,105,1,106,2.669,126,0.966,133,1.739,143,0.663,147,1.932,155,1.458,160,2.033,183,1.932,191,2.048,314,3.878,420,2.818,440,1.51,480,1.743,483,1.583,499,4.136,515,3.655,516,1.583,539,3.657,604,3.464,718,3.137,719,2.988,765,4.136,1077,2.988,1078,2.553,1079,4.446,1080,5.354,1081,4.446,1082,5.354,1083,2.988,1084,4.86,1085,3.426,1086,4.398,1087,2.048,1088,2.988,1089,2.348,1090,5.542,1091,4.834,1092,2.828,1093,4.126,1094,4.126,1417,6.532,1418,3.245,1419,3.245,1420,3.245,1421,3.245,1422,3.245,1423,3.245,1424,3.245,1425,3.245,1426,2.828,1427,3.245,1428,2.828,1429,3.245]],["title/classes/UserLoginDto.html",[0,0.153,487,2.718]],["body/classes/UserLoginDto.html",[0,0.252,2,1.306,3,0.152,4,0.152,5,0.133,8,0.313,16,0.674,19,0.013,21,0.387,40,0.285,54,0.23,78,0.011,79,0.011,82,1.51,91,2.054,92,3.532,94,1.074,96,2.313,314,4.571,487,4.488,604,4.082,632,2.713,786,2.75,951,4.824,957,4.875,1430,4.693,1431,5.384,1432,5.384,1433,5.384,1434,5.384]],["title/modules/UserModule.html",[346,1.666,354,2.548]],["body/modules/UserModule.html",[0,0.182,3,0.136,4,0.136,5,0.119,19,0.013,40,0.339,54,0.265,61,1.053,78,0.01,79,0.01,155,1.482,253,0.983,256,2.712,290,2.346,346,2.562,348,3.326,354,4.944,355,3.918,356,3.037,357,2.712,359,3.239,368,4.192,472,3.326,523,4.388,560,3.918,561,4.885,714,3.239,720,3.918,721,3.785,723,3.918,1347,4.974,1367,4.192,1435,4.192,1436,4.192,1437,4.192,1438,3.785,1439,6.207,1440,4.192,1441,4.192,1442,4.81,1443,3.239,1444,4.192,1445,4.885,1446,4.81]],["title/classes/UserNotFoundException.html",[0,0.153,519,2.548]],["body/classes/UserNotFoundException.html",[0,0.217,2,1.389,3,0.162,4,0.162,5,0.142,13,1.211,16,0.579,18,0.911,19,0.013,20,0.607,21,0.333,22,0.579,33,3.068,40,0.245,54,0.245,78,0.011,79,0.011,94,1.056,145,4.12,253,1.17,440,2.208,519,4.369,817,6.033,1447,6.033,1448,4.99,1449,7.439,1450,5.726,1451,5.726]],["title/classes/UserRegisterDto.html",[0,0.153,494,2.718]],["body/classes/UserRegisterDto.html",[0,0.221,2,1.067,3,0.124,4,0.124,5,0.109,8,0.256,16,0.739,19,0.013,21,0.424,40,0.3,54,0.188,78,0.009,79,0.009,82,1.326,91,2.25,92,3.664,94,1.13,96,1.89,126,1.309,314,4.154,494,3.942,604,3.71,632,2.768,765,4.43,786,2.247,951,4.237,954,5.52,956,4.607,957,4.918,963,4.607,974,5.077,977,4.237,1079,4.762,1081,4.762,1084,3.942,1452,3.835,1453,4.4,1454,4.4,1455,5.855,1456,4.4,1457,4.4,1458,4.4,1459,4.4,1460,4.4,1461,4.4,1462,4.4,1463,4.4,1464,3.835,1465,4.4]],["title/classes/UserRepository.html",[0,0.153,1443,2.718]],["body/classes/UserRepository.html",[0,0.227,2,1.458,3,0.17,4,0.17,5,0.149,19,0.013,40,0.304,54,0.257,78,0.011,79,0.011,126,1.789,440,2.273,480,2.214,1098,3.795,1443,4.798,1466,5.24,1467,5.978,1468,5.24,1469,6.012]],["title/injectables/UserService.html",[196,0.914,523,2.163]],["body/injectables/UserService.html",[0,0.147,3,0.071,4,0.071,5,0.153,8,0.146,9,0.769,11,2.393,13,0.824,16,0.653,18,1.026,19,0.013,20,0.683,21,0.431,22,0.675,34,1.263,35,2.481,38,2.139,40,0.33,44,1.687,48,1.492,49,1.343,54,0.107,58,2.088,61,1.353,63,2.073,66,2.196,67,1.897,76,1.097,78,0.006,79,0.006,91,0.772,94,0.877,107,1.985,121,1.435,126,1.159,155,1.799,196,0.883,198,1.034,253,0.512,312,3.066,404,0.89,412,1.343,418,3.017,422,1.687,425,1.9,426,1.413,461,1.814,480,1.76,483,1.222,494,4.162,495,3.403,519,2.459,520,1.972,523,2.088,537,3.129,604,2.196,628,3.841,704,1.687,708,4.211,714,1.687,716,1.972,717,1.972,718,1.28,719,1.582,731,1.814,732,1.814,790,3.63,813,2.82,1056,1.413,1088,1.582,1098,1.582,1099,1.972,1231,3.841,1239,2.184,1349,3.395,1350,4.166,1354,3.395,1358,2.184,1359,3.63,1366,2.184,1412,2.184,1440,2.184,1441,2.184,1443,4.162,1444,2.184,1470,2.184,1471,4.78,1472,4.78,1473,4.78,1474,3.896,1475,2.506,1476,6.452,1477,2.506,1478,2.506,1479,2.506,1480,2.506,1481,4.698,1482,2.506,1483,2.506,1484,2.506,1485,3.896,1486,2.506,1487,3.896,1488,3.896,1489,2.506,1490,2.506,1491,2.506,1492,2.506,1493,2.184,1494,2.184,1495,2.506,1496,2.506,1497,2.506,1498,2.506,1499,4.78,1500,3.896,1501,2.506,1502,3.896,1503,2.506,1504,3.896,1505,2.506,1506,2.506,1507,2.506,1508,2.506,1509,2.506,1510,2.506,1511,2.506,1512,2.506,1513,2.506,1514,2.506,1515,2.506,1516,2.506,1517,2.506]],["title/entities/UserSettingsEntity.html",[89,1.543,718,2.062]],["body/entities/UserSettingsEntity.html",[0,0.153,3,0.114,4,0.114,5,0.1,8,0.235,16,0.686,19,0.013,20,0.586,21,0.444,22,0.773,40,0.326,54,0.236,58,3.632,59,3.147,78,0.009,79,0.009,82,1.253,87,2.582,89,2.114,91,2.187,94,0.785,105,1.246,106,3.119,126,1.204,133,2.167,143,0.826,147,2.408,155,2.258,160,2.376,171,3.183,172,3.293,180,4.353,420,3.293,440,1.765,480,2.496,483,1.973,537,3.378,718,2.825,731,4.905,732,4.905,1077,3.492,1083,3.492,1084,4.563,1085,4.004,1087,2.553,1088,3.492,1089,2.927,1095,5.137,1096,3.183,1097,4.821,1098,3.492,1099,3.183,1426,3.525,1428,3.525,1518,5.532,1519,4.045,1520,4.045,1521,4.045,1522,4.045,1523,4.045]],["title/classes/UserSettingsRepository.html",[0,0.153,720,2.548]],["body/classes/UserSettingsRepository.html",[0,0.226,2,1.448,3,0.169,4,0.169,5,0.148,19,0.013,40,0.303,54,0.255,78,0.011,79,0.011,126,1.777,155,1.84,440,2.264,718,3.05,719,3.77,720,4.481,1095,4.322,1467,5.961,1468,5.205,1524,5.205,1525,5.972]],["title/classes/UserSubscriber.html",[0,0.153,259,2.922]],["body/classes/UserSubscriber.html",[0,0.17,2,1.091,3,0.127,4,0.127,5,0.111,8,0.261,9,1.173,16,0.673,18,0.945,19,0.013,20,0.629,21,0.386,22,0.601,34,1.214,40,0.302,54,0.192,60,4.213,61,0.985,76,0.798,78,0.009,79,0.009,89,1.719,105,1.83,126,1.768,259,4.3,260,5.569,432,3.256,480,2.606,593,3.921,620,3.029,799,3.029,856,3.54,1526,6.168,1527,3.921,1528,6.653,1529,5.942,1530,5.942,1531,7.077,1532,5.942,1533,7.077,1534,4.499,1535,5.178,1536,5.942,1537,7.077,1538,4.499,1539,4.499,1540,5.942,1541,3.921,1542,5.942,1543,4.499,1544,5.942,1545,4.499,1546,5.942,1547,4.499]],["title/classes/UsersPageOptionsDto.html",[0,0.153,1359,2.718]],["body/classes/UsersPageOptionsDto.html",[0,0.178,2,1.142,3,0.133,4,0.133,5,0.117,8,0.274,16,0.729,19,0.013,21,0.418,22,0.62,40,0.201,54,0.201,57,2.174,70,2.655,78,0.01,79,0.01,82,1.387,91,2.219,94,0.668,160,3.288,161,3.044,226,3.127,423,3.409,425,3.802,426,2.655,440,1.953,448,4.123,632,2.706,940,4.432,942,3.409,989,4.062,1012,3.171,1056,3.836,1057,4.432,1139,3.706,1140,5.354,1142,4.105,1143,4.105,1145,5.337,1148,5.337,1149,4.105,1359,4.123,1394,6.279,1548,4.105,1549,4.71,1550,4.71,1551,4.71,1552,4.71]],["title/injectables/ValidatorService.html",[196,0.914,1231,2.403]],["body/injectables/ValidatorService.html",[0,0.21,3,0.157,4,0.157,5,0.137,8,0.322,9,1.34,10,2.805,16,0.562,18,0.883,19,0.013,20,0.588,21,0.322,22,0.562,34,1.134,40,0.237,54,0.237,59,2.917,61,1.215,76,0.985,78,0.011,79,0.011,94,1.041,196,1.538,198,2.291,253,1.134,934,4.837,1231,4.043,1553,4.837,1554,6.791,1555,6.791,1556,5.55,1557,5.55,1558,5.55,1559,5.55,1560,5.55]],["title/coverage.html",[1561,4.815]],["body/coverage.html",[0,0.288,1,1.224,5,0.039,6,1.356,7,1.356,19,0.013,21,0.09,49,0.833,51,1.126,67,0.618,78,0.004,79,0.004,80,0.759,81,1.356,87,0.726,89,1.01,104,2.079,106,0.877,143,1.344,147,0.926,150,3.8,152,1.224,153,1.356,154,1.224,155,0.814,156,1.356,169,1.126,170,1.224,183,0.926,191,0.982,196,1.49,197,0.759,199,1.356,200,1.356,259,1.126,260,1.224,262,1.126,275,5.214,374,1.224,378,1.778,403,1.047,405,2.491,412,0.833,418,0.982,419,1.047,425,0.759,427,1.047,470,2.072,471,1.126,473,1.356,475,1.224,480,0.973,483,0.759,487,1.047,489,1.126,494,1.047,495,0.982,517,1.356,518,1.126,519,0.982,523,0.833,525,0.982,557,1.047,558,1.047,560,0.982,582,1.356,592,1.356,595,1.047,609,1.224,610,1.356,611,2.079,621,1.047,628,0.926,629,1.356,630,1.356,631,0.926,663,1.356,704,1.047,705,2.079,706,2.079,708,0.982,718,1.349,720,0.982,723,0.982,729,1.356,730,1.356,733,1.126,741,1.224,742,1.356,752,1.224,753,1.356,754,1.356,768,1.126,769,2.491,780,1.126,792,1.224,801,6.653,813,1.126,814,1.356,815,1.356,820,1.224,821,1.356,848,1.356,852,1.126,853,1.912,854,1.356,864,0.982,879,1.224,880,1.356,881,1.356,927,1.224,928,1.356,930,1.356,937,1.126,938,5.375,965,1.126,966,1.224,967,1.224,969,1.224,970,1.224,971,1.224,972,1.224,973,1.224,974,1.126,976,1.224,977,1.126,978,1.224,982,1.126,983,1.224,1000,1.126,1001,1.224,1012,1.047,1013,1.224,1018,1.224,1019,1.224,1020,1.224,1025,1.224,1026,1.224,1027,1.224,1028,1.224,1035,1.126,1037,1.224,1038,1.224,1039,1.224,1040,1.224,1041,1.224,1046,1.224,1047,1.224,1049,1.224,1050,1.224,1052,1.224,1053,1.126,1054,2.491,1055,2.079,1056,1.489,1070,1.126,1071,1.356,1073,1.126,1074,2.491,1076,1.126,1077,0.982,1078,2.709,1083,0.982,1086,1.224,1095,2.937,1096,2.709,1100,1.356,1117,1.356,1124,1.356,1139,2.079,1153,1.356,1154,1.356,1157,1.126,1158,1.356,1168,1.356,1176,1.224,1177,1.356,1178,1.356,1185,1.224,1196,1.224,1197,1.224,1199,1.356,1210,1.356,1230,0.877,1231,0.926,1232,1.224,1250,1.356,1251,1.356,1293,1.356,1300,1.224,1301,1.356,1314,1.356,1315,1.356,1326,1.224,1347,1.126,1348,1.356,1359,1.047,1365,1.356,1383,1.224,1430,1.356,1438,1.224,1443,1.047,1445,1.224,1447,1.356,1448,1.356,1452,1.356,1466,1.356,1470,1.356,1524,1.356,1526,1.356,1527,1.356,1541,1.356,1548,1.356,1553,1.356,1561,1.356,1562,1.224,1563,1.556,1564,1.556,1565,6.315,1566,6.453,1567,4.941,1568,1.556,1569,1.556,1570,4.058,1571,2.641,1572,6.687,1573,3.442,1574,2.641,1575,2.641,1576,1.556,1577,8.234,1578,1.224,1579,1.224,1580,1.556,1581,1.556,1582,1.556,1583,1.556,1584,1.356,1585,1.356,1586,2.641,1587,2.641,1588,4.941,1589,1.556,1590,1.556,1591,1.556,1592,1.556,1593,2.302,1594,2.302,1595,1.356,1596,1.356,1597,4.058,1598,1.556,1599,1.556,1600,1.556,1601,5.544,1602,1.556,1603,1.556,1604,2.302,1605,1.556,1606,1.556,1607,4.545,1608,1.556,1609,1.556,1610,2.302,1611,2.302,1612,1.356,1613,1.356,1614,1.556,1615,1.556,1616,1.556,1617,1.556,1618,1.356,1619,1.556,1620,2.641,1621,1.556,1622,2.641,1623,2.641,1624,1.556,1625,1.556,1626,1.556,1627,1.556,1628,1.556,1629,1.556,1630,1.556,1631,1.556]],["title/dependencies.html",[348,2.604,1632,3.364]],["body/dependencies.html",[0,0.219,4,0.122,19,0.013,42,2.913,44,2.913,47,3.131,48,2.575,78,0.009,79,0.009,96,1.858,126,1.723,172,2.575,253,0.884,254,3.404,256,2.439,258,2.209,348,2.318,371,3.131,372,3.131,414,2.913,502,3.77,503,3.898,504,3.131,505,3.131,506,3.77,564,3.404,566,3.131,573,3.131,618,2.913,623,2.913,641,3.77,642,3.77,643,3.77,714,2.913,786,2.209,860,3.131,896,3.131,898,5.043,1108,4.556,1234,3.77,1481,3.77,1493,3.77,1494,3.77,1633,4.326,1634,4.326,1635,6.968,1636,4.326,1637,6.525,1638,4.326,1639,4.326,1640,4.326,1641,4.326,1642,4.326,1643,4.326,1644,4.326,1645,4.326,1646,4.326,1647,4.326,1648,4.326,1649,5.789,1650,4.326,1651,4.326,1652,4.326,1653,4.326,1654,4.326,1655,4.326,1656,4.326,1657,4.326,1658,4.326,1659,4.326,1660,4.326,1661,4.326,1662,4.326,1663,4.326,1664,4.326,1665,4.326,1666,4.326,1667,4.326,1668,4.326,1669,4.326,1670,4.326,1671,4.326,1672,4.326,1673,4.326,1674,4.326,1675,4.326,1676,4.326,1677,3.77,1678,4.326,1679,4.326,1680,4.326,1681,4.326,1682,4.326,1683,4.326]],["title/miscellaneous/enumerations.html",[1684,2.124,1685,4.235]],["body/miscellaneous/enumerations.html",[8,0.307,19,0.013,78,0.01,79,0.01,155,2.031,161,3.649,515,3.533,594,5.188,760,5.188,1140,5.188,1374,5.746,1578,4.163,1579,5.188,1684,3.339,1685,4.61,1686,6.593,1687,5.29,1688,6.593,1689,6.593,1690,4.61,1691,5.29,1692,5.29,1693,7.519,1694,5.29,1695,5.29,1696,6.593,1697,6.593,1698,6.593,1699,5.29,1700,6.593,1701,6.593,1702,5.29,1703,5.29,1704,6.593]],["title/index.html",[8,0.195,1705,2.647,1706,2.647]],["body/index.html",[3,0.13,5,0.135,19,0.012,20,0.331,67,1.241,78,0.007,79,0.007,90,1.763,121,1.696,129,2.461,134,2.461,137,2.461,139,3.625,142,2.908,154,2.461,159,3.625,169,3.334,176,2.461,193,2.725,266,5.26,267,2.725,270,2.461,274,5.26,277,3.625,290,1.525,348,1.675,357,3.628,371,3.959,433,2.263,470,1.597,503,2.105,504,3.334,512,2.725,573,3.334,577,2.725,615,1.974,662,2.725,692,2.263,695,3.334,744,4.767,989,1.763,1399,2.725,1467,2.461,1562,4.75,1705,2.461,1706,2.461,1707,4.607,1708,5.47,1709,3.127,1710,3.127,1711,3.127,1712,3.127,1713,3.127,1714,3.127,1715,3.127,1716,3.127,1717,4.607,1718,3.127,1719,3.127,1720,3.127,1721,3.127,1722,3.127,1723,4.607,1724,3.127,1725,6.731,1726,3.127,1727,3.127,1728,5.47,1729,6.036,1730,2.725,1731,3.127,1732,3.127,1733,3.127,1734,5.47,1735,3.127,1736,4.607,1737,2.461,1738,3.127,1739,3.127,1740,3.127,1741,3.127,1742,5.47,1743,4.607,1744,3.127,1745,3.127,1746,3.127,1747,3.127,1748,3.127,1749,4.607,1750,2.461,1751,4.607,1752,4.607,1753,3.127,1754,3.127,1755,3.127,1756,3.127,1757,4.607,1758,2.725,1759,3.127,1760,3.127,1761,3.127,1762,3.127,1763,3.127,1764,3.127,1765,3.127,1766,4.607,1767,3.127,1768,3.127,1769,3.127,1770,4.607,1771,3.127,1772,3.127,1773,3.127,1774,3.127,1775,3.127,1776,3.127,1777,3.127,1778,3.127,1779,3.127,1780,3.127,1781,3.127,1782,4.607,1783,3.127,1784,3.127,1785,3.127,1786,3.127,1787,3.127,1788,3.127,1789,3.127,1790,3.127,1791,3.127,1792,3.127,1793,4.607,1794,3.127,1795,3.127,1796,3.127,1797,3.127,1798,3.127,1799,4.607,1800,3.127,1801,3.127,1802,3.127,1803,3.127,1804,3.127,1805,3.127,1806,3.127,1807,3.127,1808,3.127,1809,3.127,1810,2.725,1811,3.127,1812,3.127,1813,3.127,1814,3.127,1815,3.127,1816,3.127,1817,3.127,1818,6.961,1819,3.127,1820,3.127,1821,3.127,1822,3.127,1823,3.127,1824,3.127,1825,3.127,1826,3.127,1827,3.127,1828,3.127,1829,3.127,1830,3.127,1831,3.127,1832,3.127,1833,7.686,1834,4.607,1835,4.607,1836,4.607,1837,3.127,1838,7.415,1839,6.435,1840,6.036,1841,6.036,1842,6.036,1843,6.036,1844,6.435,1845,3.127]],["title/license.html",[1705,2.647,1706,2.647,1750,2.647]],["body/license.html",[19,0.01,78,0.01,79,0.01,130,3.868,131,3.868,140,3.868,142,3.973,192,4.284,357,2.771,773,3.309,898,3.557,1535,4.284,1562,3.868,1750,3.868,1846,4.915,1847,6.943,1848,4.915,1849,4.915,1850,6.294,1851,4.915,1852,4.915,1853,4.915,1854,4.915,1855,4.915,1856,4.915,1857,6.294,1858,8.051,1859,4.915,1860,4.915,1861,4.915,1862,6.943,1863,4.915,1864,6.294,1865,4.915,1866,4.915,1867,4.915,1868,4.915,1869,4.915,1870,4.915,1871,4.915,1872,4.915,1873,4.915,1874,6.294,1875,4.915,1876,4.915,1877,4.915,1878,4.915,1879,4.915,1880,4.915,1881,4.915,1882,6.294,1883,6.294,1884,4.915,1885,4.915,1886,4.915,1887,4.915,1888,4.915,1889,4.915,1890,4.915,1891,4.915,1892,4.915,1893,4.915,1894,4.915,1895,4.915,1896,4.915,1897,4.915,1898,4.915,1899,4.915,1900,4.915,1901,4.915,1902,4.915,1903,4.915,1904,4.915,1905,4.915,1906,4.915,1907,4.915,1908,4.915]],["title/modules.html",[290,2.695]],["body/modules.html",[19,0.011,78,0.011,79,0.011,290,2.894,347,4.294,351,3.995,352,3.995,353,3.995,354,3.745,384,3.995,1677,6.964,1810,5.171,1909,7.99,1910,7.99,1911,8.107,1912,5.933]],["title/overview.html",[1913,4.815]],["body/overview.html",[2,0.999,19,0.013,78,0.009,79,0.009,133,2.207,197,3.677,198,1.7,290,2.009,347,5.692,348,3.001,349,3.59,350,3.59,351,5.295,352,4.809,353,4.285,354,4.651,355,3.535,356,2.6,357,2.322,384,5.525,404,1.462,472,2.207,523,4.039,525,4.758,554,3.59,555,3.59,556,3.59,557,4.285,558,4.285,628,4.487,631,4.487,864,4.017,874,3.59,875,3.59,989,2.322,1196,3.241,1227,3.59,1228,3.59,1229,3.59,1230,4.25,1231,4.487,1435,3.59,1436,3.59,1437,3.59,1464,3.59,1730,3.59,1758,3.59,1913,3.59,1914,5.601,1915,4.119]],["title/miscellaneous/typealiases.html",[1684,2.124,1916,4.859]],["body/miscellaneous/typealiases.html",[8,0.328,13,1.453,19,0.013,21,0.328,22,0.695,38,2.53,70,3.188,78,0.011,79,0.011,173,4.449,409,3.964,769,4.092,805,5.405,938,4.092,980,5.405,1074,4.092,1075,5.405,1087,4.336,1090,5.405,1383,4.449,1684,3.569,1917,5.654,1918,7.696,1919,5.654,1920,6.869,1921,5.654,1922,5.654,1923,5.654,1924,5.654]],["title/miscellaneous/variables.html",[1684,2.124,1737,3.824]],["body/miscellaneous/variables.html",[8,0.227,19,0.013,20,0.415,21,0.407,58,2.097,61,1.356,76,1.1,78,0.009,79,0.009,94,0.767,121,1.441,155,1.666,160,3.344,161,3.484,197,3.022,214,3.079,218,2.206,374,4.255,392,2.832,394,2.47,427,3.641,518,3.914,560,3.414,614,2.832,618,2.635,623,2.635,624,3.079,625,3.079,628,2.329,631,2.329,723,2.47,740,3.411,766,3.411,965,3.914,1185,4.255,1230,2.206,1231,2.329,1232,3.079,1236,3.411,1243,3.411,1244,4.713,1245,3.411,1246,3.411,1247,3.411,1248,3.411,1249,3.411,1326,4.255,1438,3.079,1445,4.255,1578,3.079,1579,4.255,1584,3.411,1585,4.713,1593,3.411,1594,5.4,1595,4.713,1596,4.713,1604,3.411,1610,3.411,1611,4.713,1612,3.411,1613,4.713,1618,3.411,1684,2.47,1690,3.411,1737,3.079,1925,3.913,1926,3.913,1927,3.913,1928,3.913,1929,3.913,1930,5.408,1931,3.913,1932,3.913,1933,3.913,1934,3.913,1935,3.913,1936,3.913,1937,3.913,1938,3.913,1939,3.913,1940,5.408,1941,3.913,1942,3.913,1943,3.913,1944,3.913,1945,3.913]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":801,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"coverage.html":{}}}],["0.0.3",{"_index":1634,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["0.1.21",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["0.5.21",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":989,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{},"index.html":{},"overview.html":{}}}],["1.1.5",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":990,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["1.6.0",{"_index":1633,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1148,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["100",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1914,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":872,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["2",{"_index":1730,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["2.1.34",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["2.1047.0",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":1849,"title":{},"body":{"license.html":{}}}],["3",{"_index":1736,"title":{},"body":{"index.html":{}}}],["31",{"_index":1915,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1758,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.0.0",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["4.17.2",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1763,"title":{},"body":{"index.html":{}}}],["5.0.1",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1149,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["6",{"_index":1464,"title":{},"body":{"classes/UserRegisterDto.html":{},"overview.html":{}}}],["6})@isstring()@minlength(6",{"_index":1459,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["7.4.0",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":1635,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["8.7.1",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":899,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"guards/RolesGuard.html":{},"classes/SnakeNamingStrategy.html":{}}}],["_.isempty(children",{"_index":914,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["_.isempty(roles",{"_index":1206,"title":{},"body":{"guards/RolesGuard.html":{}}}],["_.isnumber(maximum",{"_index":996,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["_.isnumber(minimum",{"_index":994,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["__dirname",{"_index":283,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["_context",{"_index":1306,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["_data",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_secondpropertyname",{"_index":1277,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["above",{"_index":1881,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":128,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["abstract.entity",{"_index":97,"title":{},"body":{"classes/AbstractDto.html":{}}}],["abstractclientservice",{"_index":1,"title":{"classes/AbstractClientService.html":{}},"body":{"classes/AbstractClientService.html":{},"coverage.html":{}}}],["abstractdto",{"_index":80,"title":{"classes/AbstractDto.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["abstractdto:10",{"_index":1395,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractdto:13",{"_index":1397,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractdto:7",{"_index":1396,"title":{},"body":{"classes/UserDto.html":{}}}],["abstractentity",{"_index":87,"title":{"classes/AbstractEntity.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["access",{"_index":490,"title":{},"body":{"controllers/AuthController.html":{}}}],["access_token",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":204,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/PageOptionsDto.html":{}}}],["accesstoken",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenPayloadDto.html":{}}}],["acl",{"_index":661,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["action",{"_index":192,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"license.html":{}}}],["actiontype",{"_index":25,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["add",{"_index":154,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"coverage.html":{},"index.html":{}}}],["addusersettings1639940635548",{"_index":152,"title":{"classes/AddUserSettings1639940635548.html":{}},"body":{"classes/AddUserSettings1639940635548.html":{},"coverage.html":{}}}],["admin",{"_index":760,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["admin(@authuser",{"_index":1371,"title":{},"body":{"controllers/UserController.html":{}}}],["admin(user",{"_index":1351,"title":{},"body":{"controllers/UserController.html":{}}}],["aliases",{"_index":1917,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":1808,"title":{},"body":{"index.html":{}}}],["always",{"_index":1796,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1872,"title":{},"body":{"license.html":{}}}],["android",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":504,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AwsS3Service.html":{},"dependencies.html":{},"index.html":{}}}],["apibooleanproperty",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["apibooleanpropertyoptional",{"_index":1590,"title":{},"body":{"coverage.html":{}}}],["apiconfigservice",{"_index":197,"title":{"injectables/ApiConfigService.html":{}},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/JwtStrategy.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apienumproperty",{"_index":966,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["apienumpropertyoptional",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["apiexception",{"_index":501,"title":{},"body":{"controllers/AuthController.html":{}}}],["apifile",{"_index":517,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apifiledecorator",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["apiokresponse",{"_index":513,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipageokresponse",{"_index":1583,"title":{},"body":{"coverage.html":{}}}],["apiproperty",{"_index":92,"title":{},"body":{"classes/AbstractDto.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{}}}],["apiproperty()@column()@isphonenumber()@isoptional",{"_index":1461,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["apiproperty()@isstring()@isemail()@isnotempty()@trim",{"_index":1453,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@trim",{"_index":1455,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["apiproperty({isarray",{"_index":1128,"title":{},"body":{"classes/PageDto.html":{}}}],["apiproperty({minlength",{"_index":1458,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["apiproperty({type",{"_index":1120,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["apipropertyoptional",{"_index":1385,"title":{},"body":{"classes/UserDto.html":{}}}],["apipropertyoptional({enum",{"_index":1391,"title":{},"body":{"classes/UserDto.html":{}}}],["apipropertyoptions",{"_index":945,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["apiresponse",{"_index":1364,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":514,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":531,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":1369,"title":{},"body":{"controllers/UserController.html":{}}}],["apiuuidproperty",{"_index":967,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["apiuuidpropertyoptional",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["apiversion",{"_index":647,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["app",{"_index":1729,"title":{},"body":{"index.html":{}}}],["appconfig",{"_index":216,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["application",{"_index":1803,"title":{},"body":{"index.html":{}}}],["applydecorators",{"_index":944,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["applydecorators(...decorators",{"_index":999,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["applydecorators(stringfield(options",{"_index":1048,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["appmodule",{"_index":347,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":139,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"index.html":{}}}],["args",{"_index":778,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"injectables/UniqueValidator.html":{}}}],["args.constraints",{"_index":797,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["args.property",{"_index":796,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["args.role",{"_index":1116,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["args.type",{"_index":1114,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["args.userid",{"_index":1115,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["argument's",{"_index":1402,"title":{},"body":{"classes/UserDto.html":{}}}],["argumentshost",{"_index":890,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["arising",{"_index":1907,"title":{},"body":{"license.html":{}}}],["array",{"_index":403,"title":{"interfaces/Array.html":{}},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"coverage.html":{}}}],["array.prototype.todtos",{"_index":439,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["array.prototype.topagedto",{"_index":445,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["arraymaxsize",{"_index":946,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["arraymaxsize(supportedlanguagecount",{"_index":1022,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["arrayminsize",{"_index":947,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["arrayminsize(supportedlanguagecount",{"_index":1021,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["arraynotempty",{"_index":948,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["as.validator.ts",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["asc",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":1859,"title":{},"body":{"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"controllers/HealthCheckerController.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":475,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["auth([roletype.user",{"_index":550,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.controller",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":526,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/dto/userregisterdto",{"_index":1497,"title":{},"body":{"injectables/UserService.html":{}}}],["authconfig",{"_index":215,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["authcontroller",{"_index":471,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1169,"title":{},"body":{"injectables/PublicStrategy.html":{}}}],["authentication",{"_index":1793,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["authmodule",{"_index":351,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":129,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"index.html":{}}}],["authors",{"_index":1898,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":525,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authuser",{"_index":518,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authuserinterceptor",{"_index":609,"title":{"injectables/AuthUserInterceptor.html":{}},"body":{"injectables/AuthUserInterceptor.html":{},"coverage.html":{}}}],["authuserkey",{"_index":665,"title":{},"body":{"classes/ContextProvider.html":{}}}],["available",{"_index":1810,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avatar",{"_index":499,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["avoid",{"_index":343,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["await",{"_index":63,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["awesome",{"_index":1707,"title":{},"body":{"index.html":{}}}],["aws",{"_index":641,"title":{},"body":{"injectables/AwsS3Service.html":{},"dependencies.html":{}}}],["aws.s3",{"_index":640,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["aws.s3(options",{"_index":652,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["aws.s3.types.clientconfiguration",{"_index":646,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3config",{"_index":211,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/AwsS3Service.html":{}}}],["awss3config.bucketapiversion",{"_index":648,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3config.bucketregion",{"_index":650,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["awss3service",{"_index":628,"title":{"injectables/AwsS3Service.html":{}},"body":{"injectables/AwsS3Service.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":816,"title":{},"body":{"classes/FileNotImageException.html":{},"classes/PageTypeException.html":{}}}],["bcrypt",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["beforeinsert",{"_index":1529,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":1532,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":1530,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":1536,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["being",{"_index":1829,"title":{},"body":{"index.html":{}}}],["below",{"_index":1765,"title":{},"body":{"index.html":{}}}],["benefit",{"_index":1828,"title":{},"body":{"index.html":{}}}],["best",{"_index":1782,"title":{},"body":{"index.html":{}}}],["bikeshedding",{"_index":1719,"title":{},"body":{"index.html":{}}}],["body",{"_index":507,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AwsS3Service.html":{}}}],["boilerplate",{"_index":1708,"title":{},"body":{"index.html":{}}}],["boilerplate.polyfill",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":59,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"classes/CreateSettingsDto.html":{},"interfaces/IApiFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/PageMetaDto.html":{},"guards/RolesGuard.html":{},"classes/UserDto.html":{},"entities/UserSettingsEntity.html":{},"injectables/ValidatorService.html":{}}}],["boolean(json.parse(value",{"_index":276,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["booleanfield",{"_index":1019,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["booleanfieldoptional",{"_index":733,"title":{},"body":{"classes/CreateSettingsDto.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["bootstrap",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["brackets",{"_index":417,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["brackets((qb",{"_index":450,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["browse",{"_index":1911,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1909,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":658,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["bucketapiversion",{"_index":325,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["bucketname",{"_index":327,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["bucketregion",{"_index":323,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["buffer",{"_index":931,"title":{},"body":{"interfaces/IFile.html":{}}}],["build",{"_index":1768,"title":{},"body":{"index.html":{}}}],["build:prodand",{"_index":1769,"title":{},"body":{"index.html":{}}}],["button",{"_index":1724,"title":{},"body":{"index.html":{}}}],["c",{"_index":1848,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["call",{"_index":149,"title":{},"body":{"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/IAbstractEntity.html":{},"controllers/PostController.html":{}}}],["callhandler",{"_index":616,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"injectables/TranslationInterceptor.html":{}}}],["canactivate",{"_index":1200,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1202,"title":{},"body":{"guards/RolesGuard.html":{}}}],["catch",{"_index":272,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["catch(exception",{"_index":888,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["catch(queryfailederror",{"_index":1187,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["catch(unprocessableentityexception",{"_index":900,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":45,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["cd",{"_index":1735,"title":{},"body":{"index.html":{}}}],["change",{"_index":1749,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1790,"title":{},"body":{"index.html":{}}}],["character",{"_index":762,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["charge",{"_index":1854,"title":{},"body":{"license.html":{}}}],["cheatsheet",{"_index":1822,"title":{},"body":{"index.html":{}}}],["check",{"_index":856,"title":{},"body":{"controllers/HealthCheckerController.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/UserSubscriber.html":{}}}],["checker.controller",{"_index":878,"title":{},"body":{"modules/HealthCheckerModule.html":{}}}],["checker.controller.ts",{"_index":854,"title":{},"body":{"controllers/HealthCheckerController.html":{},"coverage.html":{}}}],["checker.controller.ts:21",{"_index":858,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["checker.module",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["checker.module.ts",{"_index":876,"title":{},"body":{"modules/HealthCheckerModule.html":{}}}],["checker/health",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"injectables/ServiceHealthIndicator.html":{},"coverage.html":{}}}],["checklist",{"_index":1747,"title":{},"body":{"index.html":{}}}],["children",{"_index":912,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["claim",{"_index":1901,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{}},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"classes/QueryFailedFilter.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"overview.html":{}}}],["classname",{"_index":1284,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["classtableinheritanceparentcolumnname",{"_index":1254,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["classtableinheritanceparentcolumnname(parenttablename",{"_index":1261,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["clean",{"_index":1755,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1780,"title":{},"body":{"index.html":{}}}],["click",{"_index":1722,"title":{},"body":{"index.html":{}}}],["client",{"_index":23,"title":{},"body":{"classes/AbstractClientService.html":{},"controllers/PostController.html":{}}}],["client.service.ts",{"_index":7,"title":{},"body":{"classes/AbstractClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":30,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["client.service.ts:19",{"_index":36,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["client.service.ts:27",{"_index":37,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["client.service.ts:29",{"_index":39,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["client.service.ts:9",{"_index":17,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["clientproxy",{"_index":15,"title":{},"body":{"classes/AbstractClientService.html":{},"controllers/PostController.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["clientproxyfactory",{"_index":1235,"title":{},"body":{"modules/SharedModule.html":{}}}],["clientproxyfactory.create",{"_index":1246,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":1721,"title":{},"body":{"index.html":{}}}],["cloned",{"_index":1733,"title":{},"body":{"index.html":{}}}],["cls",{"_index":1493,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cluster_appmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":554,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":555,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":556,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_healthcheckermodule",{"_index":874,"title":{},"body":{"modules/HealthCheckerModule.html":{},"overview.html":{}}}],["cluster_healthcheckermodule_providers",{"_index":875,"title":{},"body":{"modules/HealthCheckerModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1227,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1229,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1228,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1435,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1436,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1437,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1786,"title":{},"body":{"index.html":{}}}],["code.enum.ts",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":1084,"title":{},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"classes/UserRegisterDto.html":{},"entities/UserSettingsEntity.html":{}}}],["column({default",{"_index":1518,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["column({nullable",{"_index":1417,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({type",{"_index":1426,"title":{},"body":{"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["column({unique",{"_index":1419,"title":{},"body":{"entities/UserEntity.html":{}}}],["column.decorator",{"_index":429,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["column.decorator.ts",{"_index":1611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnname",{"_index":1255,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["columnname(propertyname",{"_index":1265,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["columnnames",{"_index":437,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["command",{"_index":725,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["commandbus",{"_index":1476,"title":{},"body":{"injectables/UserService.html":{}}}],["commandhandler",{"_index":715,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["commandhandler(createsettingscommand",{"_index":722,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["commands/create",{"_index":1440,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["common/abstract.entity",{"_index":420,"title":{},"body":{"interfaces/Array.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["common/dto/abstract.dto",{"_index":421,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"classes/UserDto.html":{}}}],["common/dto/page",{"_index":423,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"classes/UsersPageOptionsDto.html":{}}}],["common/dto/page.dto",{"_index":422,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["common/utils",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserSubscriber.html":{}}}],["community",{"_index":1823,"title":{},"body":{"index.html":{}}}],["compact",{"_index":416,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["compression",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1880,"title":{},"body":{"license.html":{}}}],["config.service",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/JwtStrategy.html":{},"modules/SharedModule.html":{}}}],["config.service.ts",{"_index":200,"title":{},"body":{"injectables/ApiConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":219,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:108",{"_index":242,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:116",{"_index":244,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:120",{"_index":246,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:124",{"_index":248,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:13",{"_index":230,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:131",{"_index":250,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:138",{"_index":252,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:144",{"_index":221,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:17",{"_index":232,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:21",{"_index":234,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:25",{"_index":225,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:35",{"_index":223,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:45",{"_index":228,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:51",{"_index":236,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:55",{"_index":238,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["config.service.ts:59",{"_index":240,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["configmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":218,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"injectables/JwtStrategy.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.authconfig.jwtsecret",{"_index":576,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.awss3config",{"_index":645,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["configservice.fallbacklanguage",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.getnumber('jwt_expiration_time",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.isdevelopment",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.natsconfig",{"_index":1245,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.postgresconfig",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1806,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":1751,"title":{},"body":{"index.html":{}}}],["configure",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":1794,"title":{},"body":{"index.html":{}}}],["connection",{"_index":773,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"license.html":{}}}],["const",{"_index":61,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/ExistsValidator.html":{},"classes/GeneratorProvider.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":516,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUserEntity.html":{},"injectables/JwtStrategy.html":{},"classes/PageOptionsDto.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["constraint",{"_index":181,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constrainterrors",{"_index":1185,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["constrainterrors[exception.constraint",{"_index":1195,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["constraintkey",{"_index":917,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constraints",{"_index":807,"title":{},"body":{"injectables/ExistsValidator.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["constraints[constraintkey",{"_index":924,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IPageMetaDtoParameters.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["constructor's",{"_index":1400,"title":{},"body":{"classes/UserDto.html":{}}}],["constructor(@injectconnection",{"_index":793,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["constructor(client",{"_index":14,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["constructor(clientproxy",{"_index":1213,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["constructor(configservice",{"_index":217,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/AwsS3Service.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":772,"title":{},"body":{"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["constructor(data",{"_index":1126,"title":{},"body":{"classes/PageDto.html":{},"classes/TokenPayloadDto.html":{}}}],["constructor(entity",{"_index":86,"title":{},"body":{"classes/AbstractDto.html":{}}}],["constructor(error",{"_index":817,"title":{},"body":{"classes/FileNotImageException.html":{},"classes/UserNotFoundException.html":{}}}],["constructor(i18n",{"_index":1317,"title":{},"body":{"injectables/TranslationService.html":{}}}],["constructor(jwtservice",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":55,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/ApiConfigService.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"guards/RolesGuard.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{}}}],["constructor(public",{"_index":901,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["constructor(reflector",{"_index":885,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{}}}],["constructor(translationservice",{"_index":1302,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["constructor(undefined",{"_index":1132,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["constructor(user",{"_index":1118,"title":{},"body":{"classes/LoginPayloadDto.html":{},"classes/UserDto.html":{}}}],["constructor(userid",{"_index":709,"title":{},"body":{"classes/CreateSettingsCommand.html":{}}}],["constructor(userrepository",{"_index":1475,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersettingsrepository",{"_index":737,"title":{},"body":{"classes/CreateSettingsHandler.html":{}}}],["consumer",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(contextmiddleware).forroutes",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["contains",{"_index":1753,"title":{},"body":{"index.html":{}}}],["context",{"_index":618,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":1205,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":624,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["contextmiddleware",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextprovider",{"_index":621,"title":{"classes/ContextProvider.html":{}},"body":{"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"injectables/TranslationService.html":{},"coverage.html":{}}}],["contextprovider.get(contextprovider.authuserkey",{"_index":703,"title":{},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.get(contextprovider.languagekey",{"_index":702,"title":{},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.getlanguage",{"_index":1337,"title":{},"body":{"injectables/TranslationService.html":{}}}],["contextprovider.namespace}.${key",{"_index":699,"title":{},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.set(contextprovider.authuserkey",{"_index":700,"title":{},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.set(contextprovider.languagekey",{"_index":701,"title":{},"body":{"classes/ContextProvider.html":{}}}],["contextprovider.setauthuser(user",{"_index":626,"title":{},"body":{"injectables/AuthUserInterceptor.html":{}}}],["contract",{"_index":1905,"title":{},"body":{"license.html":{}}}],["controller",{"_index":470,"title":{"controllers/AuthController.html":{},"controllers/HealthCheckerController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthCheckerController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{},"coverage.html":{},"index.html":{}}}],["controller('auth",{"_index":530,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('health",{"_index":866,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["controller('posts",{"_index":1162,"title":{},"body":{"controllers/PostController.html":{}}}],["controller('users",{"_index":1368,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":472,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["convention",{"_index":986,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["conversation",{"_index":1827,"title":{},"body":{"index.html":{}}}],["convert",{"_index":919,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["copies",{"_index":1874,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1857,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1847,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1561,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1738,"title":{},"body":{"index.html":{}}}],["cqrsmodule",{"_index":1439,"title":{},"body":{"modules/UserModule.html":{}}}],["create",{"_index":169,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"coverage.html":{},"index.html":{}}}],["createaccesstoken",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["createaccesstoken(data",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["created_at",{"_index":175,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["createdat",{"_index":83,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"classes/UserDto.html":{}}}],["createdatecolumn",{"_index":123,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["createdatecolumn({type",{"_index":110,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["createduser",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{}}}],["createduser.todto",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{}}}],["createmany(1",{"_index":751,"title":{},"body":{"classes/CreateUsers.html":{}}}],["createparamdecorator",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsettings",{"_index":1471,"title":{},"body":{"injectables/UserService.html":{}}}],["createsettings(userid",{"_index":1478,"title":{},"body":{"injectables/UserService.html":{}}}],["createsettingscommand",{"_index":704,"title":{"classes/CreateSettingsCommand.html":{}},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createsettingscommand(userid",{"_index":1517,"title":{},"body":{"injectables/UserService.html":{}}}],["createsettingsdto",{"_index":708,"title":{"classes/CreateSettingsDto.html":{}},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createsettingshandler",{"_index":723,"title":{"classes/CreateSettingsHandler.html":{}},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":1472,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(userregisterdto",{"_index":1480,"title":{},"body":{"injectables/UserService.html":{}}}],["createusers",{"_index":741,"title":{"classes/CreateUsers.html":{}},"body":{"classes/CreateUsers.html":{},"coverage.html":{}}}],["createuserstable1622299665807",{"_index":752,"title":{"classes/CreateUsersTable1622299665807.html":{}},"body":{"classes/CreateUsersTable1622299665807.html":{},"coverage.html":{}}}],["ctx",{"_index":902,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["ctx.getresponse",{"_index":904,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["current",{"_index":484,"title":{},"body":{"controllers/AuthController.html":{}}}],["custom:translate",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customdecorator",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1266,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["d!#$%&*@a",{"_index":1015,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["damages",{"_index":1902,"title":{},"body":{"license.html":{}}}],["data",{"_index":26,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/AuthService.html":{},"classes/PageDto.html":{},"classes/TokenPayloadDto.html":{}}}],["data).pipe(catcherror((err",{"_index":65,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["data.accesstoken",{"_index":1299,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["data.expiresin",{"_index":1297,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["data.role",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.userid",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":316,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["database/migrations",{"_index":297,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["database/migrations/*{.ts,.js",{"_index":286,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["date",{"_index":90,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"modules/AuthModule.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserDto.html":{},"index.html":{}}}],["datefield",{"_index":1050,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["datefieldoptional",{"_index":1052,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["deal",{"_index":1861,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1908,"title":{},"body":{"license.html":{}}}],["declare",{"_index":430,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["decorator",{"_index":506,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["decorators",{"_index":91,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"controllers/AuthController.html":{},"classes/CreateSettingsDto.html":{},"controllers/HealthCheckerController.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PostController.html":{},"classes/TokenPayloadDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UsersPageOptionsDto.html":{}}}],["decorators.push",{"_index":987,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apienumproperty(getenum",{"_index":1034,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apiproperty",{"_index":1003,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apiproperty(options",{"_index":1051,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(apiuuidproperty(options",{"_index":1044,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(arraynotempty",{"_index":1045,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isint",{"_index":992,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(isnumber",{"_index":993,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(ispositive",{"_index":998,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(max(maximum",{"_index":997,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(maxlength(options.maxlength",{"_index":1007,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(min(minimum",{"_index":995,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(minlength(options.minlength",{"_index":1005,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(toarray",{"_index":991,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(tolowercase",{"_index":1009,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators.push(touppercase",{"_index":1011,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["decorators/transform.decorators",{"_index":1463,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["decorators/translate.decorator",{"_index":1327,"title":{},"body":{"injectables/TranslationService.html":{}}}],["decorators/virtual",{"_index":428,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["default",{"_index":160,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"classes/ContextProvider.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/PageOptionsDto.html":{},"injectables/TranslationService.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"classes/UsersPageOptionsDto.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":770,"title":{},"body":{"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["defaultmessage(args",{"_index":775,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["defaultnamingstrategy",{"_index":1252,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["defaultstrategy",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{}}}],["defaultvalue",{"_index":69,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{}}}],["degit",{"_index":1726,"title":{},"body":{"index.html":{}}}],["delete",{"_index":141,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{}}}],["dependencies",{"_index":348,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["desc",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":132,"title":{},"body":{"classes/AbstractEntity.html":{},"controllers/AuthController.html":{},"interfaces/IAbstractEntity.html":{},"controllers/UserController.html":{}}}],["details",{"_index":1820,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1713,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1784,"title":{},"body":{"index.html":{}}}],["development",{"_index":266,"title":{},"body":{"injectables/ApiConfigService.html":{},"index.html":{}}}],["development\".build",{"_index":1767,"title":{},"body":{"index.html":{}}}],["devicetypeenum",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disable",{"_index":693,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["discuss",{"_index":1831,"title":{},"body":{"index.html":{}}}],["discussion",{"_index":1825,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1772,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1870,"title":{},"body":{"license.html":{}}}],["docs",{"_index":1818,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1562,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentationenabled",{"_index":212,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["down",{"_index":158,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["down(queryrunner",{"_index":163,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["drop",{"_index":194,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["dropschema",{"_index":306,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["dto",{"_index":122,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationService.html":{}}}],["dto.decorator.ts",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["dto/abstract.dto",{"_index":127,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["dto/create",{"_index":716,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/UserService.html":{}}}],["dto/loginpayloaddto",{"_index":527,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/page.dto",{"_index":50,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["dto/tokenpayloaddto",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/user.dto",{"_index":1088,"title":{},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["dto/userlogindto",{"_index":528,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/userregisterdto",{"_index":529,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/users",{"_index":1366,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtoclass",{"_index":108,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["dx",{"_index":1783,"title":{},"body":{"index.html":{}}}],["e",{"_index":782,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["e.g",{"_index":1802,"title":{},"body":{"index.html":{}}}],["each",{"_index":939,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["email",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{}}}],["emailfield",{"_index":1037,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["emailfieldoptional",{"_index":1038,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["embeddedprefixes",{"_index":1267,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["en",{"_index":1374,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["encoding",{"_index":932,"title":{},"body":{"interfaces/IFile.html":{}}}],["endpoints",{"_index":1811,"title":{},"body":{"index.html":{}}}],["enjoy",{"_index":1757,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1731,"title":{},"body":{"index.html":{}}}],["entities",{"_index":133,"title":{},"body":{"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"overview.html":{}}}],["entities.map((entity",{"_index":462,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["entity",{"_index":89,"title":{"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"injectables/ExistsValidator.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["entity.createdat",{"_index":101,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entity.id",{"_index":99,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entity.password",{"_index":1546,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["entity.updatedat",{"_index":103,"title":{},"body":{"classes/AbstractDto.html":{}}}],["entity[propertykey",{"_index":468,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["entity\\.ts",{"_index":291,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["entityclass",{"_index":794,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["entityclass.name",{"_index":802,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{}}}],["entitycontext",{"_index":288,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["entitycontext.keys().map((id",{"_index":292,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["entitycontext>(id",{"_index":294,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["entitymodule",{"_index":293,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["entityrepository",{"_index":1468,"title":{},"body":{"classes/UserRepository.html":{},"classes/UserSettingsRepository.html":{}}}],["entityrepository(userentity",{"_index":1469,"title":{},"body":{"classes/UserRepository.html":{}}}],["entityrepository(usersettingsentity",{"_index":1525,"title":{},"body":{"classes/UserSettingsRepository.html":{}}}],["entityschema",{"_index":789,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["entitysubscriberinterface",{"_index":1528,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["entrypoints",{"_index":1845,"title":{},"body":{"index.html":{}}}],["entrypointstrategy",{"_index":1842,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1091,"title":{},"body":{"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["enum('user",{"_index":759,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["enumerations",{"_index":1685,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfield",{"_index":1028,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["enumfield(getenum",{"_index":1036,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["enumfieldoptional",{"_index":1035,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["enumfieldoptional(undefined",{"_index":1143,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["enumvalue",{"_index":1031,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["env",{"_index":277,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"index.html":{}}}],["env.example",{"_index":1739,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":274,"title":{},"body":{"injectables/ApiConfigService.html":{},"index.html":{}}}],["error",{"_index":145,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/FileNotImageException.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"classes/QueryFailedFilter.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/UserNotFoundException.html":{}}}],["error(key",{"_index":273,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["error.fields.${_.snakecase",{"_index":925,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.fields.{key",{"_index":921,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.unique.email",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":1186,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["errors.ts",{"_index":1613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":692,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"index.html":{}}}],["eslint/naming",{"_index":985,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["eslint/no",{"_index":696,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["even",{"_index":1718,"title":{},"body":{"index.html":{}}}],["event",{"_index":1535,"title":{},"body":{"classes/UserSubscriber.html":{},"license.html":{}}}],["event.databaseentity.password",{"_index":1544,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entity",{"_index":1545,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entity.password",{"_index":1542,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["eventname",{"_index":1217,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["eventsubscriber",{"_index":1540,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["evolving",{"_index":1710,"title":{},"body":{"index.html":{}}}],["example",{"_index":988,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["exception",{"_index":505,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{}}}],["exception.constraint",{"_index":1194,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.constraint?.startswith('uq",{"_index":1189,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["exception.getresponse",{"_index":907,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":906,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":882,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["exceptions",{"_index":520,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["exceptions/page",{"_index":52,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["exclude",{"_index":1835,"title":{},"body":{"index.html":{}}}],["exec",{"_index":846,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["execute",{"_index":736,"title":{},"body":{"classes/CreateSettingsHandler.html":{}}}],["execute(command",{"_index":724,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["executioncontext",{"_index":614,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/TranslationInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":804,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{}}}],["exists",{"_index":792,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"coverage.html":{}}}],["existsvalidationconstraints",{"_index":805,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"miscellaneous/typealiases.html":{}}}],["existsvalidator",{"_index":768,"title":{"injectables/ExistsValidator.html":{}},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"coverage.html":{}}}],["expand",{"_index":1843,"title":{},"body":{"index.html":{}}}],["experience",{"_index":1785,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":135,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["expiration",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresin",{"_index":580,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/TokenPayloadDto.html":{}}}],["explicit",{"_index":697,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["explore",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["export",{"_index":54,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{}}}],["exports",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":898,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"dependencies.html":{},"license.html":{}}}],["ext",{"_index":829,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["extends",{"_index":440,"title":{},"body":{"interfaces/Array.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/PageTypeException.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/UniqueValidator.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"classes/UserRepository.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UsersPageOptionsDto.html":{}}}],["extractjwt",{"_index":1106,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1112,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":746,"title":{},"body":{"classes/CreateUsers.html":{}}}],["factory(userentity",{"_index":749,"title":{},"body":{"classes/CreateUsers.html":{}}}],["failed",{"_index":1226,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["failed.filter.ts",{"_index":1178,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["failed.filter.ts:11",{"_index":1179,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:12",{"_index":1180,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["failed.filter.ts:14",{"_index":1181,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["fallbacklanguage",{"_index":209,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{}}}],["false",{"_index":58,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1775,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":1717,"title":{},"body":{"index.html":{}}}],["fieldname",{"_index":933,"title":{},"body":{"interfaces/IFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"index.html":{}}}],["file.buffer",{"_index":660,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["filename",{"_index":653,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["filename(ext",{"_index":827,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["filenotimageexception",{"_index":813,"title":{"classes/FileNotImageException.html":{}},"body":{"classes/FileNotImageException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1860,"title":{},"body":{"license.html":{}}}],["find",{"_index":1487,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail",{"_index":1473,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail(options",{"_index":1483,"title":{},"body":{"injectables/UserService.html":{}}}],["findcondition",{"_index":795,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["findcondition(args",{"_index":800,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["findconditions",{"_index":790,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"injectables/UserService.html":{}}}],["finddata",{"_index":1489,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":1474,"title":{},"body":{"injectables/UserService.html":{}}}],["findone(finddata",{"_index":1485,"title":{},"body":{"injectables/UserService.html":{}}}],["first_name",{"_index":761,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["firstname",{"_index":1079,"title":{},"body":{"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRegisterDto.html":{}}}],["firstpropertyname",{"_index":1276,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["firstpropertyname.replace(/\\./gi",{"_index":1291,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["firsttablename",{"_index":1279,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["firstvaluefrom",{"_index":46,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["firstvaluefrom(this.client.send(pattern",{"_index":64,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["fitness",{"_index":1894,"title":{},"body":{"license.html":{}}}],["fixme",{"_index":432,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"classes/UserSubscriber.html":{}}}],["fk_19f4e08665a1f4bbbb7d5631f35",{"_index":188,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["folder",{"_index":1734,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1746,"title":{},"body":{"index.html":{}}}],["following",{"_index":1879,"title":{},"body":{"license.html":{}}}],["foreign",{"_index":189,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["format",{"_index":1014,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["forwardref",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{}}}],["found.exception.ts",{"_index":1448,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":1450,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["free",{"_index":1853,"title":{},"body":{"license.html":{}}}],["fullname",{"_index":1080,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{}}}],["function",{"_index":150,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"injectables/ExistsValidator.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["functionconstructor",{"_index":1024,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["funding",{"_index":1754,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1877,"title":{},"body":{"license.html":{}}}],["generate",{"_index":833,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generated",{"_index":1771,"title":{},"body":{"index.html":{}}}],["generatehash",{"_index":1541,"title":{},"body":{"classes/UserSubscriber.html":{},"coverage.html":{}}}],["generatehash(entity.password",{"_index":1547,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["generatehash(event.entity.password",{"_index":1543,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["generatepassword",{"_index":822,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generaterandomstring",{"_index":823,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generaterandomstring(length",{"_index":831,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generateverificationcode",{"_index":824,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generation",{"_index":1795,"title":{},"body":{"index.html":{}}}],["generator.service",{"_index":644,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["generatorprovider",{"_index":820,"title":{"classes/GeneratorProvider.html":{}},"body":{"classes/GeneratorProvider.html":{},"coverage.html":{}}}],["generatorprovider.uuid",{"_index":844,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["generatorservice",{"_index":631,"title":{"injectables/GeneratorService.html":{}},"body":{"injectables/AwsS3Service.html":{},"injectables/GeneratorService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":1380,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id')@auth(['undefined'])@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1355,"title":{},"body":{"controllers/UserController.html":{}}}],["get('admin",{"_index":1370,"title":{},"body":{"controllers/UserController.html":{}}}],["get('admin')@auth(['undefined'])@httpcode(httpstatus.ok",{"_index":1352,"title":{},"body":{"controllers/UserController.html":{}}}],["get('me",{"_index":549,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('search",{"_index":1160,"title":{},"body":{"controllers/PostController.html":{}}}],["get()@auth(['undefined'])@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1360,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@healthcheck",{"_index":857,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["get(key",{"_index":220,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/ContextProvider.html":{}}}],["getappconfig",{"_index":251,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getauthconfig",{"_index":249,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getauthuser",{"_index":668,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getawss3config",{"_index":241,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getboolean",{"_index":201,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getboolean(key",{"_index":222,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getcurrentuser",{"_index":476,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcurrentuser(@authuser",{"_index":552,"title":{},"body":{"controllers/AuthController.html":{}}}],["getcurrentuser(user",{"_index":479,"title":{},"body":{"controllers/AuthController.html":{}}}],["getdocumentationenabled",{"_index":243,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getenum",{"_index":1029,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["getfallbacklanguage",{"_index":237,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getisdevelopment",{"_index":229,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getisproduction",{"_index":231,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getistest",{"_index":233,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getkeywithnamespace",{"_index":669,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getkeywithnamespace(key",{"_index":680,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getlanguage",{"_index":670,"title":{},"body":{"classes/ContextProvider.html":{}}}],["getnatsconfig",{"_index":247,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getnatsenabled",{"_index":245,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getnodeenv",{"_index":235,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getnumber",{"_index":202,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getnumber(key",{"_index":224,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getpostgresconfig",{"_index":239,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["gets3key",{"_index":825,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3key(publicurl",{"_index":837,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3publicurl",{"_index":826,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["gets3publicurl(key",{"_index":840,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["getskip",{"_index":1151,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getstring",{"_index":203,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getstring(key",{"_index":227,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["getting",{"_index":1705,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":1349,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@uuidparam('id",{"_index":1381,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(userid",{"_index":1354,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":1350,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers(pageoptionsdto",{"_index":1358,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getvariablename",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["github",{"_index":1752,"title":{},"body":{"index.html":{}}}],["global",{"_index":431,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"modules/SharedModule.html":{}}}],["granted",{"_index":1852,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1912,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1196,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1198,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hakobyan",{"_index":131,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"license.html":{}}}],["handle",{"_index":1310,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["handlers",{"_index":1445,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasnextpage",{"_index":1060,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":1059,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["health",{"_index":855,"title":{},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{}}}],["healthcheck",{"_index":861,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["healthcheckercontroller",{"_index":852,"title":{"controllers/HealthCheckerController.html":{}},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"coverage.html":{}}}],["healthcheckermodule",{"_index":352,"title":{"modules/HealthCheckerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthCheckerModule.html":{},"modules.html":{},"overview.html":{}}}],["healthcheckerror",{"_index":1219,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["healthcheckerror(`${eventname",{"_index":1225,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["healthcheckresult",{"_index":859,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["healthcheckservice",{"_index":862,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["healthindicator",{"_index":1211,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["healthindicatorresult",{"_index":1218,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["helmet",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1824,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1851,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1899,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":1494,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["host",{"_index":308,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["host.switchtohttp",{"_index":903,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["http",{"_index":1183,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["http://localhost:3000",{"_index":1761,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/documentation",{"_index":1813,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":508,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":533,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter",{"_index":879,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpmodule",{"_index":1233,"title":{},"body":{"modules/SharedModule.html":{}}}],["https://s3.${process.env.aws_s3_bucket_name_region}.amazonaws.com/${process.env.aws_s3_bucket_name}/${key",{"_index":845,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["https://yarnpkg.com/lang/en/docs/install",{"_index":1744,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":509,"title":{},"body":{"controllers/AuthController.html":{},"classes/QueryFailedFilter.html":{},"controllers/UserController.html":{}}}],["httpstatus.conflict",{"_index":1190,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":1191,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["httpstatus.ok",{"_index":1376,"title":{},"body":{"controllers/UserController.html":{}}}],["i18n",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["i18n/dist/services/i18n.service",{"_index":1325,"title":{},"body":{"injectables/TranslationService.html":{}}}],["i18njsonparser",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forrootasync",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nservice",{"_index":1318,"title":{},"body":{"injectables/TranslationService.html":{}}}],["iabstractentity",{"_index":106,"title":{"interfaces/IAbstractEntity.html":{}},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["iapifile",{"_index":927,"title":{"interfaces/IApiFile.html":{}},"body":{"interfaces/IApiFile.html":{},"coverage.html":{}}}],["icommand",{"_index":707,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["icommandhandler",{"_index":713,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["id",{"_index":84,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["iexistsvalidationarguments",{"_index":780,"title":{"interfaces/IExistsValidationArguments.html":{}},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"coverage.html":{}}}],["ifile",{"_index":495,"title":{"interfaces/IFile.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AwsS3Service.html":{},"interfaces/IFile.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ilike",{"_index":452,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["image.exception.ts",{"_index":815,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["image.exception.ts:3",{"_index":818,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["image/jpeg",{"_index":1558,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["image/png",{"_index":1559,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["imagemimetypes",{"_index":1557,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["imagemimetypes.includes(mimetype",{"_index":1560,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["images",{"_index":656,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["implements",{"_index":105,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"modules/AppModule.html":{},"injectables/AuthUserInterceptor.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TranslationInterceptor.html":{},"injectables/UniqueValidator.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{}}}],["implied",{"_index":1890,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{}}}],["imports",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["included",{"_index":1884,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1817,"title":{},"body":{"index.html":{}}}],["including",{"_index":1864,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicators/service.indicator",{"_index":865,"title":{},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{}}}],["indicators/service.indicator.ts",{"_index":1210,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{},"coverage.html":{}}}],["indicators/service.indicator.ts:18",{"_index":1216,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["indicators/service.indicator.ts:9",{"_index":1214,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["industry",{"_index":1797,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"index.html":{}}}],["inherited",{"_index":1394,"title":{},"body":{"classes/UserDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["inject",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/PostController.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["inject('nats_service",{"_index":1163,"title":{},"body":{"controllers/PostController.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["injectable",{"_index":196,"title":{"injectables/ApiConfigService.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"injectables/ExistsValidator.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{}},"body":{"injectables/ApiConfigService.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"injectables/ExistsValidator.html":{},"injectables/GeneratorService.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{}}}],["injectables",{"_index":198,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"injectables/ExistsValidator.html":{},"injectables/GeneratorService.html":{},"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"overview.html":{}}}],["injectconnection",{"_index":783,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["insertevent",{"_index":1533,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["install",{"_index":1740,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1743,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1338,"title":{},"body":{"injectables/TranslationService.html":{}}}],["instant",{"_index":1781,"title":{},"body":{"index.html":{}}}],["instantaneously",{"_index":1792,"title":{},"body":{"index.html":{}}}],["int",{"_index":940,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["integrated",{"_index":1809,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":612,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"injectables/TranslationInterceptor.html":{}}}],["intercept(_context",{"_index":1304,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["intercept(context",{"_index":613,"title":{},"body":{"injectables/AuthUserInterceptor.html":{}}}],["interceptor.service.ts",{"_index":611,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"injectables/TranslationInterceptor.html":{},"coverage.html":{}}}],["interceptor.service.ts:13",{"_index":617,"title":{},"body":{"injectables/AuthUserInterceptor.html":{}}}],["interceptor.service.ts:14",{"_index":1303,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["interceptor.service.ts:17",{"_index":1305,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["interface",{"_index":143,"title":{"interfaces/Array.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}},"body":{"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"injectables/ExistsValidator.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UniqueValidator.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["interfaces",{"_index":404,"title":{},"body":{"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AwsS3Service.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inumberfieldoptions",{"_index":937,"title":{"interfaces/INumberFieldOptions.html":{}},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["ios",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ipagemetadtoparameters",{"_index":1053,"title":{"interfaces/IPageMetaDtoParameters.html":{}},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["is_email_verified",{"_index":178,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["is_phone_verified",{"_index":179,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["isactive",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserDto.html":{}}}],["isarray",{"_index":929,"title":{},"body":{"interfaces/IApiFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageDto.html":{},"injectables/TranslationService.html":{}}}],["isarray(value",{"_index":1340,"title":{},"body":{"injectables/TranslationService.html":{}}}],["isboolean",{"_index":949,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isdate",{"_index":950,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isdevelopment",{"_index":205,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["isemail",{"_index":951,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{}}}],["isemailverified",{"_index":731,"title":{},"body":{"classes/CreateSettingsDto.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["isenum",{"_index":952,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isenum(enumvalue",{"_index":1032,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isglobal",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["ishealthy",{"_index":1212,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["ishealthy(eventname",{"_index":1215,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["isimage",{"_index":1554,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isimage(mimetype",{"_index":1555,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["isint",{"_index":953,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isnil",{"_index":257,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["isnil(value",{"_index":339,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["isnotempty",{"_index":954,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserRegisterDto.html":{}}}],["isnullable",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["isnumber",{"_index":955,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isoptional",{"_index":956,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserRegisterDto.html":{}}}],["ispage",{"_index":56,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["ispassword",{"_index":976,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["ispasswordvalid",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["isphonenumber",{"_index":977,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserRegisterDto.html":{},"coverage.html":{}}}],["isphoneverified",{"_index":732,"title":{},"body":{"classes/CreateSettingsDto.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["ispositive",{"_index":941,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isproduction",{"_index":206,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["ispublic",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":957,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/TranslationService.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{}}}],["isstring()@apiproperty",{"_index":1433,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isstring()@isemail()@apiproperty",{"_index":1431,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isstring(value",{"_index":1331,"title":{},"body":{"injectables/TranslationService.html":{}}}],["istest",{"_index":207,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["istmpkey",{"_index":978,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["istringfieldoptions",{"_index":982,"title":{"interfaces/IStringFieldOptions.html":{}},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["istype",{"_index":29,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["isundefinable",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["isurl",{"_index":958,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isuuid",{"_index":959,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["isuuid('4",{"_index":1042,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["it's",{"_index":134,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"index.html":{}}}],["item",{"_index":442,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["item.todto(options",{"_index":443,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["item[name",{"_index":469,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["itemcount",{"_index":457,"title":{},"body":{"interfaces/Array.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["items",{"_index":461,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UserService.html":{}}}],["items.topagedto(pagemetadto",{"_index":1513,"title":{},"body":{"injectables/UserService.html":{}}}],["itranslationdecoratorinterface",{"_index":1070,"title":{"interfaces/ITranslationDecoratorInterface.html":{}},"body":{"interfaces/ITranslationDecoratorInterface.html":{},"injectables/TranslationService.html":{},"coverage.html":{}}}],["iuniquevalidationarguments",{"_index":1073,"title":{"interfaces/IUniqueValidationArguments.html":{}},"body":{"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["iuserentity",{"_index":1077,"title":{"interfaces/IUserEntity.html":{}},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["iusersettingsentity",{"_index":1083,"title":{"interfaces/IUserSettingsEntity.html":{}},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["joincolumn",{"_index":1097,"title":{},"body":{"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["joincolumnname",{"_index":1256,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["joincolumnname(relationname",{"_index":1269,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablecolumnname",{"_index":1257,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablecolumnname(tablename",{"_index":1272,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablename",{"_index":1258,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jointablename(firsttablename",{"_index":1274,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["jsonwebtoken",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":569,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtexpirationtime",{"_index":335,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["jwtfromrequest",{"_index":1111,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecret",{"_index":333,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["jwtservice",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":557,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keepconnectionalive",{"_index":304,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["key",{"_index":186,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/GeneratorProvider.html":{},"injectables/TranslationService.html":{}}}],["keyof",{"_index":806,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["keywords.admin",{"_index":1373,"title":{},"body":{"controllers/UserController.html":{}}}],["kind",{"_index":1889,"title":{},"body":{"license.html":{}}}],["lang",{"_index":1336,"title":{},"body":{"injectables/TranslationService.html":{},"controllers/UserController.html":{}}}],["language",{"_index":689,"title":{},"body":{"classes/ContextProvider.html":{}}}],["language_key",{"_index":675,"title":{},"body":{"classes/ContextProvider.html":{}}}],["languagecodeenum",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["languagekey",{"_index":666,"title":{},"body":{"classes/ContextProvider.html":{}}}],["last_name",{"_index":764,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["lastname",{"_index":1081,"title":{},"body":{"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRegisterDto.html":{}}}],["length",{"_index":835,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["liability",{"_index":1903,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1900,"title":{},"body":{"license.html":{}}}],["license",{"_index":1750,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["limitation",{"_index":1865,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1891,"title":{},"body":{"license.html":{}}}],["line",{"_index":694,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["linked",{"_index":1764,"title":{},"body":{"index.html":{}}}],["linter",{"_index":1814,"title":{},"body":{"index.html":{}}}],["list",{"_index":1356,"title":{},"body":{"controllers/UserController.html":{}}}],["listento",{"_index":1531,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["literal",{"_index":28,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/TokenPayloadDto.html":{}}}],["locking",{"_index":344,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["lodash",{"_index":258,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/QueryBuilder.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["logging",{"_index":320,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["loginpayloaddto",{"_index":489,"title":{"classes/LoginPayloadDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["loginpayloaddto(userentity.todto",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{}}}],["make",{"_index":433,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"index.html":{}}}],["makes",{"_index":1804,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":414,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["map(dto",{"_index":1330,"title":{},"body":{"injectables/TranslationService.html":{}}}],["map(this",{"_index":441,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["map(value",{"_index":1341,"title":{},"body":{"injectables/TranslationService.html":{}}}],["markdown",{"_index":1839,"title":{},"body":{"index.html":{}}}],["matching",{"_index":79,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":1067,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["max",{"_index":960,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["maximum",{"_index":942,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["maxlength",{"_index":961,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["merchantability",{"_index":1893,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1868,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1308,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["mergemap((data",{"_index":1312,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["message",{"_index":908,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["messages",{"_index":920,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["meta",{"_index":1125,"title":{},"body":{"classes/PageDto.html":{}}}],["meta.dto",{"_index":424,"title":{},"body":{"interfaces/Array.html":{},"classes/PageDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["meta.dto.ts",{"_index":1055,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":1136,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":1138,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":1135,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":1137,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:24",{"_index":1134,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:27",{"_index":1133,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["metainfo",{"_index":463,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["methods",{"_index":9,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{}}}],["microservice",{"_index":138,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["middlewareconsumer",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":302,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrationcontext",{"_index":296,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrationcontext.keys().map((id",{"_index":299,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrationcontext>(id",{"_index":301,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrationinterface",{"_index":157,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["migrationmodule",{"_index":300,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrations",{"_index":285,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["migrationsrun",{"_index":319,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["mime",{"_index":643,"title":{},"body":{"injectables/AwsS3Service.html":{},"dependencies.html":{}}}],["mime.extension(file.mimetype",{"_index":655,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["mimetype",{"_index":934,"title":{},"body":{"interfaces/IFile.html":{},"injectables/ValidatorService.html":{}}}],["min",{"_index":962,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["minimum",{"_index":943,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{}}}],["minlength",{"_index":963,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserRegisterDto.html":{}}}],["minlength(6",{"_index":1465,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["miscellaneous",{"_index":1684,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1846,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1867,"title":{},"body":{"license.html":{}}}],["module",{"_index":346,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/PostModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Array.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/PostModule.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["module.hot",{"_index":287,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["modules",{"_index":290,"title":{"modules.html":{}},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/PostModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/**/*.entity{.ts,.js",{"_index":284,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["modules/auth/auth.module",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/health",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/post/post.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.entity",{"_index":620,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"classes/CreateUsers.html":{},"guards/RolesGuard.html":{},"classes/UserSubscriber.html":{}}}],["modules/user/user.module",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1819,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":280,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":667,"title":{},"body":{"classes/ContextProvider.html":{}}}],["naming",{"_index":1821,"title":{},"body":{"index.html":{}}}],["naming.strategy",{"_index":264,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["naming.strategy.ts",{"_index":1251,"title":{},"body":{"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["naming.strategy.ts:13",{"_index":1268,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:24",{"_index":1281,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:28",{"_index":1271,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:32",{"_index":1278,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:47",{"_index":1273,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:57",{"_index":1263,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["naming.strategy.ts:9",{"_index":1283,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["namingstrategy",{"_index":322,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["namingstrategyinterface",{"_index":1253,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["nanogiants/nestjs",{"_index":502,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["narek",{"_index":130,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"license.html":{}}}],["narhakobyan/awesome",{"_index":1727,"title":{},"body":{"index.html":{}}}],["nats",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["nats://${natsconfig.host}:${natsconfig.port",{"_index":1249,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["nats_service",{"_index":1244,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["natsconfig",{"_index":214,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["natsenabled",{"_index":213,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["natural",{"_index":1800,"title":{},"body":{"index.html":{}}}],["need",{"_index":146,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["nest",{"_index":1728,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":619,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"injectables/TranslationInterceptor.html":{}}}],["nestjs",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":1234,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":253,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":254,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":896,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/cqrs",{"_index":714,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":42,"title":{},"body":{"classes/AbstractClientService.html":{},"controllers/PostController.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":96,"title":{},"body":{"classes/AbstractDto.html":{},"controllers/AuthController.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/TokenPayloadDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":860,"title":{},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"injectables/ServiceHealthIndicator.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":256,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":444,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["new",{"_index":67,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/GeneratorProvider.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":1732,"title":{},"body":{"index.html":{}}}],["next",{"_index":615,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/TranslationInterceptor.html":{},"index.html":{}}}],["next.handle",{"_index":627,"title":{},"body":{"injectables/AuthUserInterceptor.html":{}}}],["node",{"_index":1714,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":208,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["noninfringement",{"_index":1897,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":1449,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["notice",{"_index":1882,"title":{},"body":{"license.html":{}}}],["now",{"_index":176,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"index.html":{}}}],["npm",{"_index":1832,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1725,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"miscellaneous/typealiases.html":{}}}],["nullable",{"_index":1090,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":226,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/GeneratorProvider.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["number(value",{"_index":271,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["numberfield",{"_index":983,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["numberfieldoptional",{"_index":1000,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["numberfieldoptional({minimum",{"_index":1145,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["o",{"_index":119,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["object",{"_index":809,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["object.constructor",{"_index":812,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["object.entries(constraints",{"_index":918,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["object.entries(metainfo",{"_index":467,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["object.values(entitymodule",{"_index":295,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["object.values(languagecodeenum).length",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(migrationmodule",{"_index":303,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["objecttype",{"_index":791,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["observable",{"_index":1307,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["obtaining",{"_index":1856,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1581,"title":{},"body":{"coverage.html":{}}}],["omit",{"_index":984,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["onetoone",{"_index":1085,"title":{},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["onetoone(undefined",{"_index":1428,"title":{},"body":{"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["open",{"_index":1760,"title":{},"body":{"index.html":{}}}],["opinionated",{"_index":1712,"title":{},"body":{"index.html":{}}}],["option",{"_index":434,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PostController.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"miscellaneous/typealiases.html":{}}}],["options",{"_index":121,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"injectables/AwsS3Service.html":{},"injectables/ExistsValidator.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options.dto",{"_index":426,"title":{},"body":{"interfaces/Array.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersPageOptionsDto.html":{}}}],["options.dto.ts",{"_index":1139,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:12",{"_index":1144,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:19",{"_index":1146,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:27",{"_index":1150,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:29",{"_index":1152,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":1147,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.each",{"_index":1033,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.email",{"_index":1500,"title":{},"body":{"injectables/UserService.html":{}}}],["options.type",{"_index":1023,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options.username",{"_index":1502,"title":{},"body":{"injectables/UserService.html":{}}}],["options?.each",{"_index":1043,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options?.isactive",{"_index":1416,"title":{},"body":{"classes/UserDto.html":{}}}],["options?.maxlength",{"_index":1006,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options?.minlength",{"_index":1004,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options?.swagger",{"_index":1002,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options?.takeall",{"_index":455,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["options?.tolowercase",{"_index":1008,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["options?.touppercase",{"_index":1010,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["order",{"_index":1140,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["order.asc",{"_index":1142,"title":{},"body":{"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["originalname",{"_index":935,"title":{},"body":{"interfaces/IFile.html":{}}}],["ormindicator",{"_index":867,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["otherwise",{"_index":140,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"license.html":{}}}],["out",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1913,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1632,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1056,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["pagecount",{"_index":1058,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":49,"title":{"classes/PageDto.html":{}},"body":{"classes/AbstractClientService.html":{},"interfaces/Array.html":{},"classes/PageDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pagedto(this.todtos(options",{"_index":446,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["pagemetadto",{"_index":412,"title":{"classes/PageMetaDto.html":{}},"body":{"interfaces/Array.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":425,"title":{"classes/PageOptionsDto.html":{}},"body":{"interfaces/Array.html":{},"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["pageoptionsdto.page",{"_index":1062,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":1064,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["pageoptionsdto:12",{"_index":1549,"title":{},"body":{"classes/UsersPageOptionsDto.html":{}}}],["pageoptionsdto:19",{"_index":1550,"title":{},"body":{"classes/UsersPageOptionsDto.html":{}}}],["pageoptionsdto:27",{"_index":1552,"title":{},"body":{"classes/UsersPageOptionsDto.html":{}}}],["pageoptionsdto:34",{"_index":1551,"title":{},"body":{"classes/UsersPageOptionsDto.html":{}}}],["pages",{"_index":1801,"title":{},"body":{"index.html":{}}}],["pagetypeexception",{"_index":51,"title":{"classes/PageTypeException.html":{}},"body":{"classes/AbstractClientService.html":{},"classes/PageTypeException.html":{},"coverage.html":{}}}],["paginate",{"_index":438,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["paginate(this",{"_index":1208,"title":{},"body":{"interfaces/SelectQueryBuilder.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{}}}],["parenttableidpropertyname",{"_index":1262,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["parenttablename",{"_index":1264,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["parser",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["parseroptions",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["partial",{"_index":38,"title":{},"body":{"classes/AbstractClientService.html":{},"interfaces/Array.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UniqueValidator.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["particular",{"_index":1895,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1108,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":565,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1105,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1109,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{}}}],["password",{"_index":314,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{}}}],["passwordfield",{"_index":1013,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["passwordfieldoptional",{"_index":1018,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["path",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["pattern",{"_index":32,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["permission",{"_index":1850,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1875,"title":{},"body":{"license.html":{}}}],["person",{"_index":1855,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1876,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":765,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRegisterDto.html":{}}}],["phonefield",{"_index":1039,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["phonefieldoptional",{"_index":1040,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["phonenumberserializer",{"_index":969,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["pipe",{"_index":1311,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["pipe(timeout(10_000",{"_index":1224,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["pk_0fbe28c9f064a04d90aca6b3514",{"_index":184,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["pk_a3ffb1c0c8416b9fc6f907b7433",{"_index":767,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["plain",{"_index":1920,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["plaintoclass",{"_index":1492,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoclass(createsettingsdto",{"_index":1511,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoinstance",{"_index":43,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["plaintoinstance(returndataoptions.class",{"_index":77,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["plugin",{"_index":1838,"title":{},"body":{"index.html":{}}}],["port",{"_index":310,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["portions",{"_index":1886,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1805,"title":{},"body":{"index.html":{}}}],["post",{"_index":510,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":532,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":488,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":496,"title":{},"body":{"controllers/AuthController.html":{}}}],["post.controller",{"_index":1167,"title":{},"body":{"modules/PostModule.html":{}}}],["postcontroller",{"_index":1157,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostModule.html":{},"coverage.html":{}}}],["postgres",{"_index":307,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["postgresconfig",{"_index":210,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["postmodule",{"_index":353,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":1159,"title":{},"body":{"controllers/PostController.html":{}}}],["practices",{"_index":1826,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":474,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthCheckerController.html":{},"controllers/PostController.html":{},"controllers/UserController.html":{}}}],["prettier",{"_index":1815,"title":{},"body":{"index.html":{}}}],["primary",{"_index":185,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["primarygeneratedcolumn",{"_index":124,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":114,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["private",{"_index":107,"title":{},"body":{"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"injectables/ExistsValidator.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"controllers/PostController.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["probably",{"_index":341,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["process.env.node_env",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["process.exit",{"_index":342,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["production",{"_index":267,"title":{},"body":{"injectables/ApiConfigService.html":{},"index.html":{}}}],["project",{"_index":1816,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1715,"title":{},"body":{"index.html":{}}}],["promise",{"_index":35,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AwsS3Service.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"controllers/HealthCheckerController.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promise.all",{"_index":1329,"title":{},"body":{"injectables/TranslationService.html":{}}}],["properly",{"_index":1748,"title":{},"body":{"index.html":{}}}],["properties",{"_index":82,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/QueryFailedFilter.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"entities/UserSettingsEntity.html":{},"classes/UsersPageOptionsDto.html":{}}}],["property.decorators",{"_index":968,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["propertydecorator",{"_index":808,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["propertykey",{"_index":466,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["propertyname",{"_index":810,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/UniqueValidator.html":{}}}],["provide",{"_index":1243,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1887,"title":{},"body":{"license.html":{}}}],["providers",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers/context.provider",{"_index":622,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"injectables/TranslationService.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/AwsS3Service.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"injectables/GeneratorService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"injectables/TranslationInterceptor.html":{},"injectables/UniqueValidator.html":{},"injectables/ValidatorService.html":{}}}],["public.strategy",{"_index":570,"title":{},"body":{"modules/AuthModule.html":{}}}],["public_route",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public_route_key",{"_index":1595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["publicroute",{"_index":1596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["publicstrategy",{"_index":558,"title":{"injectables/PublicStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/PublicStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["publicurl",{"_index":839,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["publish",{"_index":1869,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1896,"title":{},"body":{"license.html":{}}}],["putobject",{"_index":657,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["q",{"_index":448,"title":{},"body":{"interfaces/Array.html":{},"classes/PageOptionsDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"classes/UsersPageOptionsDto.html":{}}}],["qb.orwhere(`${item",{"_index":451,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["query",{"_index":1362,"title":{},"body":{"controllers/UserController.html":{}}}],["query(new",{"_index":1377,"title":{},"body":{"controllers/UserController.html":{}}}],["querybuilder",{"_index":418,"title":{"interfaces/QueryBuilder.html":{}},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["querybuilder.getone",{"_index":1504,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.orwhere('user.email",{"_index":1501,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.orwhere('user.username",{"_index":1503,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.paginate(pageoptionsdto",{"_index":1512,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder.prototype.searchbystring",{"_index":447,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["querybuilder.where('user.id",{"_index":1514,"title":{},"body":{"injectables/UserService.html":{}}}],["queryfailederror",{"_index":1184,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["queryfailedfilter",{"_index":1176,"title":{"classes/QueryFailedFilter.html":{}},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["queryrunner",{"_index":164,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["queryrunner.query",{"_index":168,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["queryrunner.query('drop",{"_index":195,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["queryrunner.query(`alter",{"_index":187,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["questions",{"_index":1716,"title":{},"body":{"index.html":{}}}],["quick",{"_index":1776,"title":{},"body":{"index.html":{}}}],["r",{"_index":31,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/HttpExceptionFilter.html":{}}}],["r.message",{"_index":909,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["random",{"_index":834,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["rate",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["raw",{"_index":459,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["raw[index",{"_index":465,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["read",{"_index":662,"title":{},"body":{"injectables/AwsS3Service.html":{},"index.html":{}}}],["readme.md",{"_index":1756,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":632,"title":{},"body":{"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IUniqueValidationArguments.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["ready",{"_index":1773,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":136,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["record",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["referencedcolumnname",{"_index":1270,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["references",{"_index":190,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["reflect",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata(translation_decorator_key",{"_index":1333,"title":{},"body":{"injectables/TranslationService.html":{}}}],["reflect.getmetadata(virtual_column_key",{"_index":464,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["reflected",{"_index":1791,"title":{},"body":{"index.html":{}}}],["reflector",{"_index":883,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{}}}],["regexp",{"_index":847,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["region",{"_index":649,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["registerdecorator",{"_index":787,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["registered",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{}}}],["registered'})@apifile({name",{"_index":498,"title":{},"body":{"controllers/AuthController.html":{}}}],["registermodels",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["rel_19f4e08665a1f4bbbb7d5631f3",{"_index":182,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["relationname",{"_index":1259,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["relationname(propertyname",{"_index":1280,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["remove",{"_index":1399,"title":{},"body":{"classes/UserDto.html":{},"index.html":{}}}],["repository",{"_index":1467,"title":{},"body":{"classes/UserRepository.html":{},"classes/UserSettingsRepository.html":{},"index.html":{}}}],["request",{"_index":623,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["request.filter.ts",{"_index":881,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["request.filter.ts:11",{"_index":886,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:12",{"_index":887,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:14",{"_index":891,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.filter.ts:26",{"_index":894,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":625,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":690,"title":{},"body":{"classes/ContextProvider.html":{}}}],["requestcontext.get(contextprovider.getkeywithnamespace(key",{"_index":691,"title":{},"body":{"classes/ContextProvider.html":{}}}],["requestcontext.middleware('request",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestcontext.set(contextprovider.getkeywithnamespace(key",{"_index":698,"title":{},"body":{"classes/ContextProvider.html":{}}}],["require.context",{"_index":289,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["required",{"_index":981,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["requirefield",{"_index":980,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":897,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["response.decorator.ts",{"_index":1582,"title":{},"body":{"coverage.html":{}}}],["response.status(status).json",{"_index":1192,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["response.status(statuscode).json(r",{"_index":911,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restriction",{"_index":1863,"title":{},"body":{"license.html":{}}}],["result",{"_index":1222,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["results",{"_index":78,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":76,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/ExistsValidator.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"classes/PageOptionsDto.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["returndata",{"_index":62,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndata.data",{"_index":72,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndata.meta",{"_index":73,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndataoptions",{"_index":27,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndataoptions?.class",{"_index":74,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndataoptions?.ispage",{"_index":71,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returndataoptions?.istype",{"_index":75,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["returns",{"_index":34,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/PostController.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/ValidatorService.html":{}}}],["right",{"_index":1779,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1866,"title":{},"body":{"license.html":{}}}],["role",{"_index":539,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"injectables/JwtStrategy.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["roles",{"_index":750,"title":{},"body":{"classes/CreateUsers.html":{},"guards/RolesGuard.html":{}}}],["roles.includes(user.role",{"_index":1207,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":1197,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["roletype",{"_index":515,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IUserEntity.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{}}}],["roletype.admin",{"_index":551,"title":{},"body":{"controllers/AuthController.html":{}}}],["roletype.user",{"_index":1092,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{}}}],["route.decorator.ts",{"_index":1594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1799,"title":{},"body":{"index.html":{}}}],["rpcexception",{"_index":41,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["rpcexception(err",{"_index":68,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["ru",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":744,"title":{},"body":{"classes/CreateUsers.html":{},"index.html":{}}}],["run(factory",{"_index":745,"title":{},"body":{"classes/CreateUsers.html":{}}}],["rxjs",{"_index":47,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1220,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{},"injectables/TranslationInterceptor.html":{}}}],["s3",{"_index":633,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service",{"_index":1239,"title":{},"body":{"modules/SharedModule.html":{},"injectables/UserService.html":{}}}],["s3.service.ts",{"_index":630,"title":{},"body":{"injectables/AwsS3Service.html":{},"coverage.html":{}}}],["s3.service.ts:11",{"_index":635,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:14",{"_index":638,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:15",{"_index":639,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3.service.ts:27",{"_index":637,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["s3urlparser",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["sameas",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["saved",{"_index":1789,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1777,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":642,"title":{},"body":{"injectables/AwsS3Service.html":{},"dependencies.html":{}}}],["searchable",{"_index":1830,"title":{},"body":{"index.html":{}}}],["searchbystring",{"_index":1174,"title":{},"body":{"interfaces/QueryBuilder.html":{}}}],["searchbystring(q",{"_index":436,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["second",{"_index":1401,"title":{},"body":{"classes/UserDto.html":{}}}],["secondtablename",{"_index":1275,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["secretorkey",{"_index":1113,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorprivatekey",{"_index":575,"title":{},"body":{"modules/AuthModule.html":{}}}],["see",{"_index":1770,"title":{},"body":{"index.html":{}}}],["seeder",{"_index":743,"title":{},"body":{"classes/CreateUsers.html":{}}}],["seeding",{"_index":748,"title":{},"body":{"classes/CreateUsers.html":{}}}],["selected",{"_index":803,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{}}}],["selectquerybuilder",{"_index":419,"title":{"interfaces/SelectQueryBuilder.html":{}},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"coverage.html":{}}}],["selectquerybuilder.prototype.paginate",{"_index":454,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["sell",{"_index":1873,"title":{},"body":{"license.html":{}}}],["send",{"_index":12,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["send(pattern",{"_index":24,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["served",{"_index":1774,"title":{},"body":{"index.html":{}}}],["server",{"_index":1759,"title":{},"body":{"index.html":{}}}],["service",{"_index":345,"title":{},"body":{"injectables/ApiConfigService.html":{},"controllers/HealthCheckerController.html":{}}}],["servicehealthindicator",{"_index":864,"title":{"injectables/ServiceHealthIndicator.html":{}},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"injectables/ServiceHealthIndicator.html":{},"coverage.html":{},"overview.html":{}}}],["serviceindicator",{"_index":868,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["services",{"_index":1778,"title":{},"body":{"index.html":{}}}],["services/api",{"_index":1237,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/aws",{"_index":1238,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/generator.service",{"_index":1240,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/translation.service",{"_index":1241,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/validator.service",{"_index":1242,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":340,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/ContextProvider.html":{}}}],["set(key",{"_index":683,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setauthuser",{"_index":671,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setauthuser(user",{"_index":685,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setlanguage",{"_index":672,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setlanguage(language",{"_index":687,"title":{},"body":{"classes/ContextProvider.html":{}}}],["setmetadata(public_route_key",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":1082,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{}}}],["settings.command",{"_index":1441,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["settings.command.ts",{"_index":706,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"coverage.html":{}}}],["settings.command.ts:10",{"_index":712,"title":{},"body":{"classes/CreateSettingsCommand.html":{}}}],["settings.command.ts:11",{"_index":711,"title":{},"body":{"classes/CreateSettingsCommand.html":{}}}],["settings.command.ts:18",{"_index":738,"title":{},"body":{"classes/CreateSettingsHandler.html":{}}}],["settings.command.ts:21",{"_index":739,"title":{},"body":{"classes/CreateSettingsHandler.html":{}}}],["settings.command.ts:8",{"_index":710,"title":{},"body":{"classes/CreateSettingsCommand.html":{}}}],["settings.dto",{"_index":717,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"injectables/UserService.html":{}}}],["settings.dto.ts",{"_index":730,"title":{},"body":{"classes/CreateSettingsDto.html":{},"coverage.html":{}}}],["settings.dto.ts:5",{"_index":734,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.dto.ts:8",{"_index":735,"title":{},"body":{"classes/CreateSettingsDto.html":{}}}],["settings.entity",{"_index":719,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"classes/UserSettingsRepository.html":{}}}],["settings.entity.ts",{"_index":1096,"title":{},"body":{"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["settings.entity.ts:26",{"_index":1519,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["settings.entity.ts:29",{"_index":1520,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["settings.entity.ts:32",{"_index":1523,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["settings.entity.ts:36",{"_index":1522,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["settings.repository",{"_index":721,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"modules/UserModule.html":{}}}],["settings.repository.ts",{"_index":1524,"title":{},"body":{"classes/UserSettingsRepository.html":{},"coverage.html":{}}}],["settings.ts",{"_index":156,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"coverage.html":{}}}],["settings.ts:23",{"_index":165,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["settings.ts:4",{"_index":162,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["settings.ts:6",{"_index":167,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{}}}],["setup",{"_index":1766,"title":{},"body":{"index.html":{}}}],["setupswagger",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["shall",{"_index":1883,"title":{},"body":{"license.html":{}}}],["shared/services/api",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["shared/services/aws",{"_index":1495,"title":{},"body":{"injectables/UserService.html":{}}}],["shared/services/translation.service",{"_index":1309,"title":{},"body":{"injectables/TranslationInterceptor.html":{},"controllers/UserController.html":{}}}],["shared/services/validator.service",{"_index":1496,"title":{},"body":{"injectables/UserService.html":{}}}],["shared/shared.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":384,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["signoptions",{"_index":579,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":1488,"title":{},"body":{"injectables/UserService.html":{}}}],["size",{"_index":936,"title":{},"body":{"interfaces/IFile.html":{}}}],["skip",{"_index":1141,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["snake",{"_index":263,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["snakecase",{"_index":1285,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(`${parenttablename}_${parenttableidpropertyname",{"_index":1292,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(classname",{"_index":1287,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(embeddedprefixes.join('_",{"_index":1288,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(propertyname",{"_index":1289,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakecase(relationname",{"_index":1290,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["snakenamingstrategy",{"_index":262,"title":{"classes/SnakeNamingStrategy.html":{}},"body":{"injectables/ApiConfigService.html":{},"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["software",{"_index":1858,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PageTypeException.html":{},"controllers/PostController.html":{},"modules/PostModule.html":{},"injectables/PublicStrategy.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"modules/SharedModule.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"dependencies.html":{}}}],["spec.ts",{"_index":1836,"title":{},"body":{"index.html":{}}}],["speed",{"_index":1787,"title":{},"body":{"index.html":{}}}],["src",{"_index":1844,"title":{},"body":{"index.html":{}}}],["src/.../auth",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constraint",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../context.middelware.ts",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../device",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../exists.validator.ts",{"_index":1919,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../field.decorators.ts",{"_index":1921,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../language",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../order.ts",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../public",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../translate.decorator.ts",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":1918,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../unique.validator.ts",{"_index":1922,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.dto.ts",{"_index":1923,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.module.ts",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../virtual",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app",{"_index":1837,"title":{},"body":{"index.html":{}}}],["src/app.module.ts",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:49",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["src/boilerplate.polyfill.ts",{"_index":405,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"coverage.html":{}}}],["src/boilerplate.polyfill.ts:16",{"_index":410,"title":{},"body":{"interfaces/Array.html":{}}}],["src/boilerplate.polyfill.ts:18",{"_index":413,"title":{},"body":{"interfaces/Array.html":{}}}],["src/boilerplate.polyfill.ts:29",{"_index":1175,"title":{},"body":{"interfaces/QueryBuilder.html":{}}}],["src/boilerplate.polyfill.ts:33",{"_index":1209,"title":{},"body":{"interfaces/SelectQueryBuilder.html":{}}}],["src/common/abstract",{"_index":6,"title":{},"body":{"classes/AbstractClientService.html":{},"coverage.html":{}}}],["src/common/abstract.entity.ts",{"_index":104,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"coverage.html":{}}}],["src/common/abstract.entity.ts:23",{"_index":926,"title":{},"body":{"interfaces/IAbstractEntity.html":{}}}],["src/common/abstract.entity.ts:32",{"_index":115,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/common/abstract.entity.ts:37",{"_index":112,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/common/abstract.entity.ts:42",{"_index":117,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/common/abstract.entity.ts:44",{"_index":113,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/common/abstract.entity.ts:46",{"_index":120,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["src/common/dto/abstract.dto.ts",{"_index":81,"title":{},"body":{"classes/AbstractDto.html":{},"coverage.html":{}}}],["src/common/dto/abstract.dto.ts:10",{"_index":93,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/common/dto/abstract.dto.ts:13",{"_index":88,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/common/dto/abstract.dto.ts:7",{"_index":95,"title":{},"body":{"classes/AbstractDto.html":{}}}],["src/common/dto/page",{"_index":1054,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["src/common/dto/page.dto.ts",{"_index":1124,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/common/dto/page.dto.ts:10",{"_index":1127,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/dto/page.dto.ts:7",{"_index":1129,"title":{},"body":{"classes/PageDto.html":{}}}],["src/common/utils.ts",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["src/constants/device",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/language",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/constants/order.ts",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/role",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/constants/token",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/database/migrations/1622299665807",{"_index":753,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{},"coverage.html":{}}}],["src/database/migrations/1639940635548",{"_index":153,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"coverage.html":{}}}],["src/database/seeds/users.seed.ts",{"_index":742,"title":{},"body":{"classes/CreateUsers.html":{},"coverage.html":{}}}],["src/database/seeds/users.seed.ts:7",{"_index":747,"title":{},"body":{"classes/CreateUsers.html":{}}}],["src/decorators/api",{"_index":1580,"title":{},"body":{"coverage.html":{}}}],["src/decorators/auth",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/field.decorators.ts",{"_index":938,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/decorators/http.decorators.ts",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["src/decorators/property.decorators.ts",{"_index":1588,"title":{},"body":{"coverage.html":{}}}],["src/decorators/public",{"_index":1593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/swagger.schema.ts",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["src/decorators/transform.decorators.ts",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["src/decorators/translate.decorator.ts",{"_index":1604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/use",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["src/decorators/validator.decorators.ts",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["src/decorators/virtual",{"_index":1610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/entity",{"_index":1526,"title":{},"body":{"classes/UserSubscriber.html":{},"coverage.html":{}}}],["src/exceptions/file",{"_index":814,"title":{},"body":{"classes/FileNotImageException.html":{},"coverage.html":{}}}],["src/exceptions/page",{"_index":1153,"title":{},"body":{"classes/PageTypeException.html":{},"coverage.html":{}}}],["src/exceptions/user",{"_index":1447,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["src/filters/bad",{"_index":880,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/filters/constraint",{"_index":1612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filters/query",{"_index":1177,"title":{},"body":{"classes/QueryFailedFilter.html":{},"coverage.html":{}}}],["src/guards/auth.guard.ts",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["src/guards/roles.guard.ts",{"_index":1199,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/guards/roles.guard.ts:10",{"_index":1201,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/guards/roles.guard.ts:13",{"_index":1203,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/interceptors/auth",{"_index":610,"title":{},"body":{"injectables/AuthUserInterceptor.html":{},"coverage.html":{}}}],["src/interceptors/translation",{"_index":1301,"title":{},"body":{"injectables/TranslationInterceptor.html":{},"coverage.html":{}}}],["src/interfaces/iapifile.ts",{"_index":928,"title":{},"body":{"interfaces/IApiFile.html":{},"coverage.html":{}}}],["src/interfaces/ifile.ts",{"_index":930,"title":{},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["src/interfaces/itranslationdecoratorinterface.ts",{"_index":1071,"title":{},"body":{"interfaces/ITranslationDecoratorInterface.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["src/middlewares/context.middelware.ts",{"_index":1618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":473,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:41",{"_index":492,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:58",{"_index":500,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:77",{"_index":485,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:15",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:22",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:36",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/loginpayloaddto.ts",{"_index":1117,"title":{},"body":{"classes/LoginPayloadDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/loginpayloaddto.ts:11",{"_index":1119,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["src/modules/auth/dto/loginpayloaddto.ts:8",{"_index":1121,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["src/modules/auth/dto/tokenpayloaddto.ts",{"_index":1293,"title":{},"body":{"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/tokenpayloaddto.ts:5",{"_index":1295,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["src/modules/auth/dto/tokenpayloaddto.ts:8",{"_index":1294,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["src/modules/auth/dto/userlogindto.ts",{"_index":1430,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/userlogindto.ts:12",{"_index":1434,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["src/modules/auth/dto/userlogindto.ts:8",{"_index":1432,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["src/modules/auth/dto/userregisterdto.ts",{"_index":1452,"title":{},"body":{"classes/UserRegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/userregisterdto.ts:19",{"_index":1456,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/auth/dto/userregisterdto.ts:25",{"_index":1457,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/auth/dto/userregisterdto.ts:32",{"_index":1454,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/auth/dto/userregisterdto.ts:37",{"_index":1460,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/auth/dto/userregisterdto.ts:43",{"_index":1462,"title":{},"body":{"classes/UserRegisterDto.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":1100,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:12",{"_index":1101,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:23",{"_index":1103,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/public.strategy.ts",{"_index":1168,"title":{},"body":{"injectables/PublicStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/public.strategy.ts:11",{"_index":1171,"title":{},"body":{"injectables/PublicStrategy.html":{}}}],["src/modules/auth/public.strategy.ts:6",{"_index":1170,"title":{},"body":{"injectables/PublicStrategy.html":{}}}],["src/modules/health",{"_index":853,"title":{},"body":{"controllers/HealthCheckerController.html":{},"modules/HealthCheckerModule.html":{},"injectables/ServiceHealthIndicator.html":{},"coverage.html":{}}}],["src/modules/post/post.controller.ts",{"_index":1158,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/modules/post/post.controller.ts:11",{"_index":1161,"title":{},"body":{"controllers/PostController.html":{}}}],["src/modules/post/post.module.ts",{"_index":1166,"title":{},"body":{"modules/PostModule.html":{}}}],["src/modules/user/commands/create",{"_index":705,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"coverage.html":{}}}],["src/modules/user/dto/create",{"_index":729,"title":{},"body":{"classes/CreateSettingsDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.ts",{"_index":1383,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/user/dto/user.dto.ts:12",{"_index":1388,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:15",{"_index":1389,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:18",{"_index":1393,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:21",{"_index":1392,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:24",{"_index":1387,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:27",{"_index":1386,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:30",{"_index":1390,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:33",{"_index":1384,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/users",{"_index":1548,"title":{},"body":{"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["src/modules/user/user",{"_index":1095,"title":{},"body":{"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1348,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:31",{"_index":1353,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:50",{"_index":1361,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:65",{"_index":1357,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.entity.ts",{"_index":1078,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:39",{"_index":1421,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:42",{"_index":1423,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:45",{"_index":1427,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:48",{"_index":1420,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:51",{"_index":1424,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:54",{"_index":1425,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:57",{"_index":1418,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:60",{"_index":1422,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.entity.ts:63",{"_index":1429,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/user/user.module.ts",{"_index":1438,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/user.repository.ts",{"_index":1466,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts",{"_index":1470,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:109",{"_index":1479,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:23",{"_index":1477,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:34",{"_index":1486,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:38",{"_index":1484,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:59",{"_index":1482,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:86",{"_index":1491,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:95",{"_index":1490,"title":{},"body":{"injectables/UserService.html":{}}}],["src/providers/context.provider.ts",{"_index":663,"title":{},"body":{"classes/ContextProvider.html":{},"coverage.html":{}}}],["src/providers/context.provider.ts:10",{"_index":676,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:12",{"_index":678,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:17",{"_index":684,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:21",{"_index":681,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:25",{"_index":686,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:29",{"_index":688,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:33",{"_index":682,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:37",{"_index":679,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:6",{"_index":677,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/context.provider.ts:8",{"_index":674,"title":{},"body":{"classes/ContextProvider.html":{}}}],["src/providers/generator.provider.ts",{"_index":821,"title":{},"body":{"classes/GeneratorProvider.html":{},"coverage.html":{}}}],["src/providers/generator.provider.ts:10",{"_index":828,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:14",{"_index":841,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:22",{"_index":838,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:34",{"_index":836,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:38",{"_index":830,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:58",{"_index":832,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/providers/generator.provider.ts:6",{"_index":842,"title":{},"body":{"classes/GeneratorProvider.html":{}}}],["src/setup",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/api",{"_index":199,"title":{},"body":{"injectables/ApiConfigService.html":{},"coverage.html":{}}}],["src/shared/services/aws",{"_index":629,"title":{},"body":{"injectables/AwsS3Service.html":{},"coverage.html":{}}}],["src/shared/services/generator.service.ts",{"_index":848,"title":{},"body":{"injectables/GeneratorService.html":{},"coverage.html":{}}}],["src/shared/services/generator.service.ts:10",{"_index":849,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["src/shared/services/generator.service.ts:6",{"_index":850,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["src/shared/services/translation.service.ts",{"_index":1314,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["src/shared/services/translation.service.ts:12",{"_index":1319,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/shared/services/translation.service.ts:15",{"_index":1322,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/shared/services/translation.service.ts:22",{"_index":1324,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/shared/services/validator.service.ts",{"_index":1553,"title":{},"body":{"injectables/ValidatorService.html":{},"coverage.html":{}}}],["src/shared/services/validator.service.ts:5",{"_index":1556,"title":{},"body":{"injectables/ValidatorService.html":{}}}],["src/shared/shared.module.ts",{"_index":1232,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/snake",{"_index":1250,"title":{},"body":{"classes/SnakeNamingStrategy.html":{},"coverage.html":{}}}],["src/types.ts",{"_index":1924,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/validators/exists.validator.ts",{"_index":769,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/validators/exists.validator.ts:14",{"_index":774,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/validators/exists.validator.ts:17",{"_index":781,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/validators/exists.validator.ts:35",{"_index":777,"title":{},"body":{"injectables/ExistsValidator.html":{}}}],["src/validators/same",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["src/validators/unique.validator.ts",{"_index":1074,"title":{},"body":{"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/validators/unique.validator.ts:14",{"_index":1344,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["src/validators/unique.validator.ts:17",{"_index":1346,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["src/validators/unique.validator.ts:35",{"_index":1345,"title":{},"body":{"injectables/UniqueValidator.html":{}}}],["staging",{"_index":1807,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1798,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1762,"title":{},"body":{"index.html":{}}}],["started",{"_index":1706,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":664,"title":{},"body":{"classes/ContextProvider.html":{},"classes/GeneratorProvider.html":{}}}],["status",{"_index":1188,"title":{},"body":{"classes/QueryFailedFilter.html":{},"injectables/ServiceHealthIndicator.html":{},"controllers/UserController.html":{}}}],["status_codes",{"_index":1182,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["status_codes[status",{"_index":1193,"title":{},"body":{"classes/QueryFailedFilter.html":{}}}],["statuscode",{"_index":905,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/QueryFailedFilter.html":{}}}],["store",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["strategy",{"_index":1107,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{}}}],["string",{"_index":94,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"interfaces/Array.html":{},"injectables/AuthService.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/PageOptionsDto.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"miscellaneous/variables.html":{}}}],["stringfield",{"_index":1001,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["stringfieldoptional",{"_index":1012,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["subject",{"_index":1878,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1871,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":261,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["subscriber.ts",{"_index":1527,"title":{},"body":{"classes/UserSubscriber.html":{},"coverage.html":{}}}],["subscriber.ts:13",{"_index":1539,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts:17",{"_index":1534,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts:23",{"_index":1538,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscribers",{"_index":318,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["subscribers/user",{"_index":260,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["substantial",{"_index":1885,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":497,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":1110,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PublicStrategy.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["super('error.file.not_image",{"_index":819,"title":{},"body":{"classes/FileNotImageException.html":{}}}],["super('error.pagetype",{"_index":1156,"title":{},"body":{"classes/PageTypeException.html":{}}}],["super('error.user_not_found",{"_index":1451,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super(user",{"_index":1403,"title":{},"body":{"classes/UserDto.html":{}}}],["support",{"_index":1677,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["support/register",{"_index":415,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["supportedlanguagecount",{"_index":965,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sure",{"_index":1741,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1910,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":503,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"dependencies.html":{},"index.html":{}}}],["swagger.ts",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["symbol('virtual_column_key",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol.for('ispublic",{"_index":1173,"title":{},"body":{"injectables/PublicStrategy.html":{}}}],["syntax",{"_index":922,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["t",{"_index":409,"title":{},"body":{"interfaces/Array.html":{},"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/PageDto.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/TranslationService.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":170,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"coverage.html":{}}}],["table.ts",{"_index":754,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{},"coverage.html":{}}}],["table.ts:28",{"_index":756,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["table.ts:4",{"_index":755,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["table.ts:6",{"_index":757,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["tablename",{"_index":1260,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["tablename(classname",{"_index":1282,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1057,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/UsersPageOptionsDto.html":{}}}],["target",{"_index":811,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["template",{"_index":1723,"title":{},"body":{"index.html":{}}}],["tenum",{"_index":1030,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["terminusmodule",{"_index":877,"title":{},"body":{"modules/HealthCheckerModule.html":{}}}],["test",{"_index":268,"title":{},"body":{"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/PostController.html":{}}}],["test.env",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["text",{"_index":1165,"title":{},"body":{"controllers/PostController.html":{}}}],["this.accesstoken",{"_index":1298,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["this.andwhere",{"_index":449,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["this.authservice.createaccesstoken",{"_index":536,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(userlogindto",{"_index":535,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.avatar",{"_index":1411,"title":{},"body":{"classes/UserDto.html":{}}}],["this.awss3service.uploadimage(file",{"_index":1507,"title":{},"body":{"injectables/UserService.html":{}}}],["this.client.send('search",{"_index":1164,"title":{},"body":{"controllers/PostController.html":{}}}],["this.clientproxy",{"_index":1221,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["this.clientproxy.send(eventname",{"_index":1223,"title":{},"body":{"injectables/ServiceHealthIndicator.html":{}}}],["this.commandbus.execute",{"_index":1516,"title":{},"body":{"injectables/UserService.html":{}}}],["this.configservice.authconfig.jwtexpirationtime",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.awss3config.bucketname",{"_index":659,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this.configservice.get(key",{"_index":338,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.connection.getrepository(entityclass).count",{"_index":798,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["this.constructor.name",{"_index":148,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["this.createdat",{"_index":100,"title":{},"body":{"classes/AbstractDto.html":{}}}],["this.createsettings",{"_index":1509,"title":{},"body":{"injectables/UserService.html":{}}}],["this.data",{"_index":1130,"title":{},"body":{"classes/PageDto.html":{}}}],["this.dtoclass",{"_index":144,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["this.dtoclass(this",{"_index":151,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["this.email",{"_index":1409,"title":{},"body":{"classes/UserDto.html":{}}}],["this.expiresin",{"_index":1296,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["this.firstname",{"_index":1404,"title":{},"body":{"classes/UserDto.html":{}}}],["this.generatorservice.filename",{"_index":654,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this.get(key",{"_index":269,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getboolean('enable_documentation",{"_index":329,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getboolean('enable_orm_logs",{"_index":321,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getboolean('nats_enabled",{"_index":330,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getcount",{"_index":458,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["this.getnumber('db_port",{"_index":311,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getnumber('jwt_expiration_time",{"_index":336,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getnumber('nats_port",{"_index":332,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getrawandentities",{"_index":460,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["this.getstring('aws_s3_api_version",{"_index":326,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('aws_s3_bucket_name",{"_index":328,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('aws_s3_bucket_region",{"_index":324,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('db_database",{"_index":317,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('db_host",{"_index":309,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('db_password",{"_index":315,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('db_username",{"_index":313,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('fallback_language').tolowercase",{"_index":282,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('jwt_secret_key",{"_index":334,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('nats_host",{"_index":331,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('node_env",{"_index":281,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.getstring('port",{"_index":337,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.hasnextpage",{"_index":1069,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":1068,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.healthcheckservice.check",{"_index":869,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["this.i18n.translate(`translations.${key",{"_index":1328,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.id",{"_index":98,"title":{},"body":{"classes/AbstractDto.html":{}}}],["this.isactive",{"_index":1415,"title":{},"body":{"classes/UserDto.html":{}}}],["this.istest",{"_index":305,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.itemcount",{"_index":1065,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.jwtservice.signasync",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastname",{"_index":1405,"title":{},"body":{"classes/UserDto.html":{}}}],["this.meta",{"_index":1131,"title":{},"body":{"classes/PageDto.html":{}}}],["this.nodeenv",{"_index":265,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.ormindicator.pingcheck('database",{"_index":870,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["this.page",{"_index":1061,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":1066,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{}}}],["this.phone",{"_index":1413,"title":{},"body":{"classes/UserDto.html":{}}}],["this.reflector.get('roles",{"_index":1204,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.role",{"_index":1407,"title":{},"body":{"classes/UserDto.html":{}}}],["this.s3",{"_index":651,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["this.serviceindicator.ishealthy('search",{"_index":873,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["this.setparameter('q",{"_index":453,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["this.skip(pageoptionsdto.skip).take(pageoptionsdto.take",{"_index":456,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["this.success",{"_index":1172,"title":{},"body":{"injectables/PublicStrategy.html":{}}}],["this.take",{"_index":1063,"title":{},"body":{"interfaces/IPageMetaDtoParameters.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.token",{"_index":1123,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["this.translate(`${translatedec.translationkey}.${value",{"_index":1335,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatenecessarykeys(v",{"_index":1343,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatenecessarykeys(value",{"_index":1339,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translationservice.translate",{"_index":1372,"title":{},"body":{"controllers/UserController.html":{}}}],["this.translationservice.translatenecessarykeys(data",{"_index":1313,"title":{},"body":{"injectables/TranslationInterceptor.html":{}}}],["this.updatedat",{"_index":102,"title":{},"body":{"classes/AbstractDto.html":{}}}],["this.user",{"_index":1122,"title":{},"body":{"classes/LoginPayloadDto.html":{}}}],["this.userrepository.create(userregisterdto",{"_index":1505,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.createquerybuilder('user",{"_index":1499,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone(finddata",{"_index":1498,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1508,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser",{"_index":545,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.findone",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.userservice.getuser(userid",{"_index":1382,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers(pageoptionsdto",{"_index":1379,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersettingsrepository.create(createsettingsdto",{"_index":726,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["this.usersettingsrepository.save(usersettingsentity",{"_index":728,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["this.uuid",{"_index":851,"title":{},"body":{"injectables/GeneratorService.html":{}}}],["this.validationfilter(children",{"_index":915,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.validationfilter(validationerrors",{"_index":910,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.validatorservice.isimage(file.mimetype",{"_index":1506,"title":{},"body":{"injectables/UserService.html":{}}}],["thought",{"_index":1788,"title":{},"body":{"index.html":{}}}],["throw",{"_index":66,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"injectables/ApiConfigService.html":{},"injectables/AuthService.html":{},"interfaces/IAbstractEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/UserService.html":{}}}],["timeout",{"_index":871,"title":{},"body":{"controllers/HealthCheckerController.html":{},"injectables/ServiceHealthIndicator.html":{}}}],["timestamp",{"_index":111,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IAbstractEntity.html":{}}}],["tmpkeyfield",{"_index":1026,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["tmpkeyfieldoptional",{"_index":1027,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["toarray",{"_index":970,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["toboolean",{"_index":971,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["todo",{"_index":1398,"title":{},"body":{"classes/UserDto.html":{}}}],["todto",{"_index":109,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["todto(options",{"_index":118,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["todtos",{"_index":406,"title":{},"body":{"interfaces/Array.html":{}}}],["todtos(this",{"_index":408,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["toint",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["token",{"_index":534,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/LoginPayloadDto.html":{}}}],["token'})@apiexception(undefined",{"_index":491,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenpayloaddto",{"_index":595,"title":{"classes/TokenPayloadDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginPayloadDto.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["tokentype",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.access_token",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["tolowercase",{"_index":972,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["topagedto",{"_index":407,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["topagedto(this",{"_index":411,"title":{},"body":{"interfaces/Array.html":{}}}],["tort",{"_index":1906,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":973,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["transactional",{"_index":1481,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["transform",{"_index":1378,"title":{},"body":{"controllers/UserController.html":{}}}],["transform.decorators",{"_index":975,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["transformer",{"_index":44,"title":{},"body":{"classes/AbstractClientService.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["translate",{"_index":1315,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["translate(key",{"_index":1320,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatedec",{"_index":1332,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatedec.translationkey",{"_index":1334,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatenecessarykeys",{"_index":1316,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatenecessarykeys(dto",{"_index":1323,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translateoptions",{"_index":1321,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translation",{"_index":923,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/UserController.html":{}}}],["translation_decorator_key",{"_index":1326,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translationinterceptor",{"_index":1300,"title":{"injectables/TranslationInterceptor.html":{}},"body":{"injectables/TranslationInterceptor.html":{},"coverage.html":{}}}],["translationkey",{"_index":1072,"title":{},"body":{"interfaces/ITranslationDecoratorInterface.html":{}}}],["translationservice",{"_index":1230,"title":{"injectables/TranslationService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["translationsfield",{"_index":1020,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["translationsfieldoptional",{"_index":1025,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["transport",{"_index":1236,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["transport.nats",{"_index":1247,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["trim",{"_index":974,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"classes/UserRegisterDto.html":{},"coverage.html":{}}}],["true",{"_index":57,"title":{},"body":{"classes/AbstractClientService.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"injectables/PublicStrategy.html":{},"guards/RolesGuard.html":{},"injectables/ServiceHealthIndicator.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UsersPageOptionsDto.html":{}}}],["try",{"_index":270,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/ServiceHealthIndicator.html":{},"index.html":{}}}],["ts",{"_index":298,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["tsconfig",{"_index":1840,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":1841,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"interfaces/Array.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"injectables/AwsS3Service.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsDto.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"classes/FileNotImageException.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"controllers/HealthCheckerController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IApiFile.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IFile.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IPageMetaDtoParameters.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/ITranslationDecoratorInterface.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"guards/RolesGuard.html":{},"interfaces/SelectQueryBuilder.html":{},"injectables/ServiceHealthIndicator.html":{},"classes/SnakeNamingStrategy.html":{},"classes/TokenPayloadDto.html":{},"injectables/TranslationInterceptor.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserLoginDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"classes/UsersPageOptionsDto.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum.ts",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.exception",{"_index":53,"title":{},"body":{"classes/AbstractClientService.html":{}}}],["type.exception.ts",{"_index":1154,"title":{},"body":{"classes/PageTypeException.html":{},"coverage.html":{}}}],["type.exception.ts:3",{"_index":1155,"title":{},"body":{"classes/PageTypeException.html":{}}}],["type.ts",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1916,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedoc",{"_index":1833,"title":{},"body":{"index.html":{}}}],["typedoc.json",{"_index":1834,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":799,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UserSubscriber.html":{}}}],["typeorm",{"_index":126,"title":{},"body":{"classes/AbstractEntity.html":{},"classes/AddUserSettings1639940635548.html":{},"interfaces/Array.html":{},"classes/CreateUsers.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"interfaces/QueryBuilder.html":{},"classes/QueryFailedFilter.html":{},"interfaces/SelectQueryBuilder.html":{},"classes/SnakeNamingStrategy.html":{},"injectables/UniqueValidator.html":{},"entities/UserEntity.html":{},"classes/UserRegisterDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"classes/UserSubscriber.html":{},"dependencies.html":{}}}],["typeorm/util/stringutils",{"_index":1286,"title":{},"body":{"classes/SnakeNamingStrategy.html":{}}}],["typeormhealthindicator",{"_index":863,"title":{},"body":{"controllers/HealthCheckerController.html":{}}}],["typeormmodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":1446,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":255,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["types",{"_index":48,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"injectables/AwsS3Service.html":{},"classes/GeneratorProvider.html":{},"interfaces/IAbstractEntity.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typescript",{"_index":695,"title":{},"body":{"classes/ContextProvider.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"index.html":{}}}],["ui",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":1104,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":70,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/PageOptionsDto.html":{},"classes/QueryFailedFilter.html":{},"injectables/ServiceHealthIndicator.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"classes/UsersPageOptionsDto.html":{},"miscellaneous/typealiases.html":{}}}],["undefined'])@apiokresponse({type",{"_index":482,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":183,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUniqueValidationArguments.html":{},"interfaces/IUserEntity.html":{},"injectables/UniqueValidator.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["uniquevalidationconstraints",{"_index":1075,"title":{},"body":{"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"miscellaneous/typealiases.html":{}}}],["uniquevalidator",{"_index":1076,"title":{"injectables/UniqueValidator.html":{}},"body":{"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"coverage.html":{}}}],["unknown",{"_index":740,"title":{},"body":{"classes/CreateSettingsHandler.html":{},"miscellaneous/variables.html":{}}}],["unprocessableentityexception",{"_index":889,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["up",{"_index":159,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"index.html":{}}}],["up(queryrunner",{"_index":166,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["update",{"_index":193,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"index.html":{}}}],["updated_at",{"_index":177,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["updatedat",{"_index":85,"title":{},"body":{"classes/AbstractDto.html":{},"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"classes/UserDto.html":{}}}],["updatedatecolumn",{"_index":125,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{}}}],["updatedatecolumn({type",{"_index":116,"title":{},"body":{"classes/AbstractEntity.html":{}}}],["updateevent",{"_index":1537,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["uploadedfile",{"_index":511,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadimage",{"_index":634,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["uploadimage(file",{"_index":636,"title":{},"body":{"injectables/AwsS3Service.html":{}}}],["uq_97672ac88f789774dd47f7c8be3",{"_index":766,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1248,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["urlfield",{"_index":1047,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["urlfieldoptional",{"_index":1049,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["use",{"_index":142,"title":{},"body":{"classes/AbstractEntity.html":{},"modules/AuthModule.html":{},"interfaces/IAbstractEntity.html":{},"classes/UserDto.html":{},"index.html":{},"license.html":{}}}],["usedto",{"_index":147,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["usedto(userdto",{"_index":1089,"title":{},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["usefactory",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":155,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginPayloadDto.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.avatar",{"_index":1412,"title":{},"body":{"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":1442,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator.ts",{"_index":1585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":1410,"title":{},"body":{"classes/UserDto.html":{}}}],["user.entity",{"_index":1098,"title":{},"body":{"interfaces/IUserSettingsEntity.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["user.firstname",{"_index":1375,"title":{},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{}}}],["user.id",{"_index":1510,"title":{},"body":{"injectables/UserService.html":{}}}],["user.lastname",{"_index":1406,"title":{},"body":{"classes/UserDto.html":{}}}],["user.phone",{"_index":1414,"title":{},"body":{"classes/UserDto.html":{}}}],["user.repository",{"_index":1444,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":1408,"title":{},"body":{"classes/UserDto.html":{}}}],["user.service",{"_index":1367,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.settings",{"_index":1099,"title":{},"body":{"interfaces/IUserSettingsEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["user.settings)@joincolumn({name",{"_index":1521,"title":{},"body":{"entities/UserSettingsEntity.html":{}}}],["user.todto",{"_index":553,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/dto/user.dto",{"_index":521,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginPayloadDto.html":{}}}],["user/user.entity",{"_index":522,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user/user.module",{"_index":567,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.service",{"_index":524,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user?.[symbol.for('ispublic",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.password",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":180,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["user_key",{"_index":673,"title":{},"body":{"classes/ContextProvider.html":{}}}],["user_settings",{"_index":171,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{}}}],["usercontroller",{"_index":1347,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":483,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/LoginPayloadDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"coverage.html":{}}}],["userdtooptions",{"_index":1087,"title":{},"body":{"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"entities/UserSettingsEntity.html":{},"miscellaneous/typealiases.html":{}}}],["userentity",{"_index":480,"title":{"entities/UserEntity.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthUserInterceptor.html":{},"classes/ContextProvider.html":{},"classes/CreateUsers.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["userentity.id",{"_index":538,"title":{},"body":{"controllers/AuthController.html":{}}}],["userentity.role",{"_index":540,"title":{},"body":{"controllers/AuthController.html":{}}}],["userentity.todto",{"_index":1515,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":537,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"interfaces/IUserSettingsEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{}}}],["userlogin",{"_index":477,"title":{},"body":{"controllers/AuthController.html":{}}}],["userlogin(userlogindto",{"_index":486,"title":{},"body":{"controllers/AuthController.html":{}}}],["userlogindto",{"_index":487,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto.email",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["userlogindto.password",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodule",{"_index":354,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":312,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["usernotfoundexception",{"_index":519,"title":{"classes/UserNotFoundException.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userregister",{"_index":478,"title":{},"body":{"controllers/AuthController.html":{}}}],["userregister(userregisterdto",{"_index":493,"title":{},"body":{"controllers/AuthController.html":{}}}],["userregisterdto",{"_index":494,"title":{"classes/UserRegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserRegisterDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrepository",{"_index":1443,"title":{"classes/UserRepository.html":{}},"body":{"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":191,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"interfaces/IUserEntity.html":{},"controllers/UserController.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["users_role_enum",{"_index":758,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["userservice",{"_index":523,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersettings",{"_index":1093,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{}}}],["usersettings.user",{"_index":1094,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{}}}],["usersettingsentity",{"_index":718,"title":{"entities/UserSettingsEntity.html":{}},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"interfaces/IUserEntity.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"entities/UserSettingsEntity.html":{},"classes/UserSettingsRepository.html":{},"coverage.html":{}}}],["usersettingsentity.userid",{"_index":727,"title":{},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{}}}],["usersettingsrepository",{"_index":720,"title":{"classes/UserSettingsRepository.html":{}},"body":{"classes/CreateSettingsCommand.html":{},"classes/CreateSettingsHandler.html":{},"modules/UserModule.html":{},"classes/UserSettingsRepository.html":{},"coverage.html":{}}}],["userspageoptionsdto",{"_index":1359,"title":{"classes/UsersPageOptionsDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/UsersPageOptionsDto.html":{},"coverage.html":{}}}],["usersubscriber",{"_index":259,"title":{"classes/UserSubscriber.html":{}},"body":{"injectables/ApiConfigService.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["using",{"_index":137,"title":{},"body":{"classes/AbstractEntity.html":{},"interfaces/IAbstractEntity.html":{},"index.html":{}}}],["uuid",{"_index":172,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{},"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{},"interfaces/IUserSettingsEntity.html":{},"entities/UserSettingsEntity.html":{},"dependencies.html":{}}}],["uuid_generate_v4",{"_index":174,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"classes/CreateUsersTable1622299665807.html":{}}}],["uuidfield",{"_index":1041,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["uuidfieldoptional",{"_index":1046,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"coverage.html":{}}}],["uuidparam",{"_index":1365,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["v",{"_index":1342,"title":{},"body":{"injectables/TranslationService.html":{}}}],["v1",{"_index":843,"title":{},"body":{"classes/GeneratorProvider.html":{},"injectables/GeneratorService.html":{}}}],["v8",{"_index":1709,"title":{},"body":{"index.html":{}}}],["validate",{"_index":771,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/JwtStrategy.html":{},"injectables/UniqueValidator.html":{}}}],["validate(args",{"_index":1102,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(value",{"_index":779,"title":{},"body":{"injectables/ExistsValidator.html":{},"injectables/UniqueValidator.html":{}}}],["validatehash",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["validatenested",{"_index":964,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["validateuser",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(userlogindto",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationarguments",{"_index":776,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validationerror",{"_index":893,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationerror.children",{"_index":913,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationerror.constraints",{"_index":916,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationerrors",{"_index":895,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationfilter",{"_index":884,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationfilter(validationerrors",{"_index":892,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationoptions",{"_index":784,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validationpipe",{"_index":1363,"title":{},"body":{"controllers/UserController.html":{}}}],["validator",{"_index":786,"title":{},"body":{"injectables/ExistsValidator.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{},"classes/UserLoginDto.html":{},"classes/UserRegisterDto.html":{},"dependencies.html":{}}}],["validator.decorators",{"_index":979,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["validatorconstraint",{"_index":788,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validatorconstraintinterface",{"_index":785,"title":{},"body":{"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"injectables/UniqueValidator.html":{}}}],["validatorservice",{"_index":1231,"title":{"injectables/ValidatorService.html":{}},"body":{"modules/SharedModule.html":{},"injectables/UserService.html":{},"injectables/ValidatorService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":161,"title":{},"body":{"classes/AddUserSettings1639940635548.html":{},"injectables/ApiConfigService.html":{},"classes/ContextProvider.html":{},"classes/CreateUsersTable1622299665807.html":{},"injectables/ExistsValidator.html":{},"interfaces/IExistsValidationArguments.html":{},"interfaces/IUniqueValidationArguments.html":{},"classes/PageOptionsDto.html":{},"injectables/TranslationService.html":{},"injectables/UniqueValidator.html":{},"classes/UsersPageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.replace(/\\\\n/g",{"_index":279,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["var",{"_index":278,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["variable",{"_index":275,"title":{},"body":{"injectables/ApiConfigService.html":{},"coverage.html":{}}}],["variables",{"_index":1737,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["varying",{"_index":763,"title":{},"body":{"classes/CreateUsersTable1622299665807.html":{}}}],["version",{"_index":512,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["version('1",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{}}}],["version('1')@get('me')@httpcode(httpstatus.ok)@auth(['undefined",{"_index":481,"title":{},"body":{"controllers/AuthController.html":{}}}],["very",{"_index":1711,"title":{},"body":{"index.html":{}}}],["virtual_column_key",{"_index":427,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["virtualcolumn",{"_index":1086,"title":{},"body":{"interfaces/IUserEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["visible",{"_index":435,"title":{},"body":{"interfaces/Array.html":{},"interfaces/QueryBuilder.html":{},"interfaces/SelectQueryBuilder.html":{}}}],["visit",{"_index":1812,"title":{},"body":{"index.html":{}}}],["void",{"_index":60,"title":{},"body":{"classes/AbstractClientService.html":{},"modules/AppModule.html":{},"classes/ContextProvider.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PublicStrategy.html":{},"classes/QueryFailedFilter.html":{},"classes/UserSubscriber.html":{}}}],["want",{"_index":577,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["warranties",{"_index":1892,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1888,"title":{},"body":{"license.html":{}}}],["watch",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["welcome",{"_index":1720,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1904,"title":{},"body":{"license.html":{}}}],["without",{"_index":1862,"title":{},"body":{"license.html":{}}}],["yarn",{"_index":1742,"title":{},"body":{"index.html":{}}}],["yarnchecklist",{"_index":1745,"title":{},"body":{"index.html":{}}}],["yes",{"_index":33,"title":{},"body":{"classes/AbstractClientService.html":{},"classes/AbstractEntity.html":{},"interfaces/Array.html":{},"classes/FileNotImageException.html":{},"interfaces/IAbstractEntity.html":{},"interfaces/SelectQueryBuilder.html":{},"classes/SnakeNamingStrategy.html":{},"classes/UserDto.html":{},"classes/UserNotFoundException.html":{}}}],["z",{"_index":1017,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["z^a",{"_index":1016,"title":{},"body":{"interfaces/INumberFieldOptions.html":{},"interfaces/IStringFieldOptions.html":{}}}],["zoom",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthCheckerModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractClientService.html":{"url":"classes/AbstractClientService.html","title":"class - AbstractClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/abstract-client.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/common/abstract-client.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(pattern: ActionType, data: I, returnDataOptions: literal type, isType?)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract-client.service.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                        I\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                            ActionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            I\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnDataOptions\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isType\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(pattern: ActionType, data: I, returnDataOptions: literal type | literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract-client.service.ts:19\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                        I\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                            ActionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            I\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnDataOptions\n                                    \n                                            literal type | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(pattern: ActionType, data: I)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract-client.service.ts:27\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                        I\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                            ActionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            I\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(pattern: ActionType, data: I, returnDataOptions?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract-client.service.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                        I\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                            ActionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            I\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnDataOptions\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy, RpcException } from '@nestjs/microservices';\nimport { plainToInstance } from 'class-transformer';\nimport { catchError, firstValueFrom } from 'rxjs';\n\nimport type { Constructor } from '../types';\nimport { PageDto } from './dto/page.dto';\nimport { PageTypeException } from '../exceptions/page-type.exception';\n\nexport class AbstractClientService {\n  constructor(private client: ClientProxy) {}\n\n  public async send(\n    pattern: ActionType,\n    data: I,\n    returnDataOptions: { class: Constructor; isPage: true },\n    isType?: false,\n  ): Promise>;\n\n  public async send(\n    pattern: ActionType,\n    data: I,\n    returnDataOptions:\n      | { class: Constructor; isPage?: false }\n      | { isPage?: false; isType: true },\n  ): Promise;\n\n  public async send(pattern: ActionType, data: I): Promise;\n\n  public async send(\n    pattern: ActionType,\n    data: I,\n    returnDataOptions?: Partial;\n      isPage?: boolean;\n      isType?: boolean;\n    }>,\n  ): Promise | void> {\n    const returnData = await firstValueFrom(this.client.send(pattern, data).pipe(catchError((err) => {\n      throw new RpcException(err);\n    })), {\n      defaultValue: undefined,\n    });\n\n    if (returnDataOptions?.isPage && (!returnData.data || !returnData.meta)) {\n      throw new PageTypeException();\n    }\n\n    if (\n      !returnDataOptions?.class ||\n      returnDataOptions?.isType ||\n      returnDataOptions?.isPage\n    ) {\n      return returnData;\n    }\n\n    return plainToInstance(returnDataOptions.class, returnData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractDto.html":{"url":"classes/AbstractDto.html","title":"class - AbstractDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/abstract.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: AbstractEntity)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/abstract.dto.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        AbstractEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/abstract.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/abstract.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/abstract.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport type { AbstractEntity } from '../abstract.entity';\n\nexport class AbstractDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n\n  constructor(entity: AbstractEntity) {\n    this.id = entity.id;\n    this.createdAt = entity.createdAt;\n    this.updatedAt = entity.updatedAt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractEntity.html":{"url":"classes/AbstractEntity.html","title":"class - AbstractEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/abstract.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IAbstractEntity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                    Private\n                                dtoClass\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toDto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/abstract.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dtoClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Constructor\n\n                    \n                \n                    \n                        \n                                Defined in src/common/abstract.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/abstract.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/abstract.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toDto\n                        \n                    \n                \n            \n            \n                \ntoDto(options?: O)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract.entity.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            O\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nimport type { Constructor } from '../types';\nimport type { AbstractDto } from './dto/abstract.dto';\n\n/**\n * Abstract Entity\n * @author Narek Hakobyan \n *\n * @description This class is an abstract class for all entities.\n * It's experimental and recommended using it only in microservice architecture,\n * otherwise just delete and use your own entity.\n */\nexport interface IAbstractEntity {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n\n  toDto(options?: O): DTO;\n}\n\nexport abstract class AbstractEntity implements IAbstractEntity\n{\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n  })\n  updatedAt: Date;\n\n  private dtoClass: Constructor;\n\n  toDto(options?: O): DTO {\n    const dtoClass = this.dtoClass;\n\n    if (!dtoClass) {\n      throw new Error(\n        `You need to use @UseDto on class (${this.constructor.name}) be able to call toDto function`,\n      );\n    }\n\n    return new this.dtoClass(this, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserSettings1639940635548.html":{"url":"classes/AddUserSettings1639940635548.html","title":"class - AddUserSettings1639940635548","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserSettings1639940635548\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1639940635548-add-user-settings.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'addUserSettings1639940635548'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1639940635548-add-user-settings.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1639940635548-add-user-settings.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1639940635548-add-user-settings.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddUserSettings1639940635548 implements MigrationInterface {\n  name = 'addUserSettings1639940635548';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`\n      CREATE TABLE \"user_settings\"\n      (\n        \"id\"                uuid      NOT NULL DEFAULT uuid_generate_v4(),\n        \"created_at\"        TIMESTAMP NOT NULL DEFAULT now(),\n        \"updated_at\"        TIMESTAMP NOT NULL DEFAULT now(),\n        \"is_email_verified\" boolean   NOT NULL DEFAULT false,\n        \"is_phone_verified\" boolean   NOT NULL DEFAULT false,\n        \"user_id\"           uuid      NOT NULL,\n        CONSTRAINT \"REL_19f4e08665a1f4bbbb7d5631f3\" UNIQUE (\"user_id\"),\n        CONSTRAINT \"PK_0fbe28c9f064a04d90aca6b3514\" PRIMARY KEY (\"id\")\n      )`);\n    await queryRunner.query(`ALTER TABLE \"user_settings\"\n      ADD CONSTRAINT \"FK_19f4e08665a1f4bbbb7d5631f35\" FOREIGN KEY (\"user_id\") REFERENCES \"users\" (\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user_settings\"\n      DROP CONSTRAINT \"FK_19f4e08665a1f4bbbb7d5631f35\"`);\n    await queryRunner.query('DROP TABLE \"user_settings\"');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiConfigService.html":{"url":"injectables/ApiConfigService.html","title":"injectable - ApiConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/api-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                get\n                            \n                            \n                                    Private\n                                getBoolean\n                            \n                            \n                                    Private\n                                getNumber\n                            \n                            \n                                    Private\n                                getString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDevelopment\n                                \n                                \n                                    isProduction\n                                \n                                \n                                    isTest\n                                \n                                \n                                    nodeEnv\n                                \n                                \n                                    fallbackLanguage\n                                \n                                \n                                    postgresConfig\n                                \n                                \n                                    awsS3Config\n                                \n                                \n                                    documentationEnabled\n                                \n                                \n                                    natsEnabled\n                                \n                                \n                                    natsConfig\n                                \n                                \n                                    authConfig\n                                \n                                \n                                    appConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/api-config.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/api-config.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoolean(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/api-config.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumber(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/api-config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getString(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/api-config.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDevelopment\n                    \n                \n\n                \n                    \n                        getisDevelopment()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:13\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProduction\n                    \n                \n\n                \n                    \n                        getisProduction()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeEnv\n                    \n                \n\n                \n                    \n                        getnodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        fallbackLanguage\n                    \n                \n\n                \n                    \n                        getfallbackLanguage()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        postgresConfig\n                    \n                \n\n                \n                    \n                        getpostgresConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        awsS3Config\n                    \n                \n\n                \n                    \n                        getawsS3Config()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        documentationEnabled\n                    \n                \n\n                \n                    \n                        getdocumentationEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:116\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        natsEnabled\n                    \n                \n\n                \n                    \n                        getnatsEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:120\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        natsConfig\n                    \n                \n\n                \n                    \n                        getnatsConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:124\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authConfig\n                    \n                \n\n                \n                    \n                        getauthConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:131\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        appConfig\n                    \n                \n\n                \n                    \n                        getappConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/api-config.service.ts:138\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport type { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { isNil } from 'lodash';\n\nimport { UserSubscriber } from '../../entity-subscribers/user-subscriber';\nimport { SnakeNamingStrategy } from '../../snake-naming.strategy';\n\n@Injectable()\nexport class ApiConfigService {\n  constructor(private configService: ConfigService) {}\n\n  get isDevelopment(): boolean {\n    return this.nodeEnv === 'development';\n  }\n\n  get isProduction(): boolean {\n    return this.nodeEnv === 'production';\n  }\n\n  get isTest(): boolean {\n    return this.nodeEnv === 'test';\n  }\n\n  private getNumber(key: string): number {\n    const value = this.get(key);\n\n    try {\n      return Number(value);\n    } catch {\n      throw new Error(key + ' environment variable is not a number');\n    }\n  }\n\n  private getBoolean(key: string): boolean {\n    const value = this.get(key);\n\n    try {\n      return Boolean(JSON.parse(value));\n    } catch {\n      throw new Error(key + ' env var is not a boolean');\n    }\n  }\n\n  private getString(key: string): string {\n    const value = this.get(key);\n\n    return value.replace(/\\\\n/g, '\\n');\n  }\n\n  get nodeEnv(): string {\n    return this.getString('NODE_ENV');\n  }\n\n  get fallbackLanguage(): string {\n    return this.getString('FALLBACK_LANGUAGE').toLowerCase();\n  }\n\n  get postgresConfig(): TypeOrmModuleOptions {\n    let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}'];\n    let migrations = [__dirname + '/../../database/migrations/*{.ts,.js}'];\n\n    if (module.hot) {\n      const entityContext = require.context(\n        './../../modules',\n        true,\n        /\\.entity\\.ts$/,\n      );\n      entities = entityContext.keys().map((id) => {\n        const entityModule = entityContext>(id);\n        const [entity] = Object.values(entityModule);\n\n        return entity as string;\n      });\n      const migrationContext = require.context(\n        './../../database/migrations',\n        false,\n        /\\.ts$/,\n      );\n\n      migrations = migrationContext.keys().map((id) => {\n        const migrationModule = migrationContext>(id);\n        const [migration] = Object.values(migrationModule);\n\n        return migration as string;\n      });\n    }\n\n    return {\n      entities,\n      migrations,\n      keepConnectionAlive: !this.isTest,\n      dropSchema: this.isTest,\n      type: 'postgres',\n      name: 'default',\n      host: this.getString('DB_HOST'),\n      port: this.getNumber('DB_PORT'),\n      username: this.getString('DB_USERNAME'),\n      password: this.getString('DB_PASSWORD'),\n      database: this.getString('DB_DATABASE'),\n      subscribers: [UserSubscriber],\n      migrationsRun: true,\n      logging: this.getBoolean('ENABLE_ORM_LOGS'),\n      namingStrategy: new SnakeNamingStrategy(),\n    };\n  }\n\n  get awsS3Config() {\n    return {\n      bucketRegion: this.getString('AWS_S3_BUCKET_REGION'),\n      bucketApiVersion: this.getString('AWS_S3_API_VERSION'),\n      bucketName: this.getString('AWS_S3_BUCKET_NAME'),\n    };\n  }\n\n  get documentationEnabled(): boolean {\n    return this.getBoolean('ENABLE_DOCUMENTATION');\n  }\n\n  get natsEnabled(): boolean {\n    return this.getBoolean('NATS_ENABLED');\n  }\n\n  get natsConfig() {\n    return {\n      host: this.getString('NATS_HOST'),\n      port: this.getNumber('NATS_PORT'),\n    };\n  }\n\n  get authConfig() {\n    return {\n      jwtSecret: this.getString('JWT_SECRET_KEY'),\n      jwtExpirationTime: this.getNumber('JWT_EXPIRATION_TIME'),\n    };\n  }\n\n  get appConfig() {\n    return {\n      port: this.getString('PORT'),\n    };\n  }\n\n  private get(key: string): string {\n    const value = this.configService.get(key);\n\n    if (isNil(value)) {\n      throw new Error(key + ' environment variable does not set'); // probably we should call process.exit() too to avoid locking the service\n    }\n\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthCheckerModule\n\nHealthCheckerModule\n\nAppModule -->\n\nHealthCheckerModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthCheckerModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MiddlewareConsumer | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import './boilerplate.polyfill';\n\nimport type { MiddlewareConsumer, NestModule } from '@nestjs/common';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { I18nJsonParser, I18nModule } from 'nestjs-i18n';\nimport path from 'path';\n\nimport { contextMiddleware } from './middlewares';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { HealthCheckerModule } from './modules/health-checker/health-checker.module';\nimport { PostModule } from './modules/post/post.module';\nimport { UserModule } from './modules/user/user.module';\nimport { ApiConfigService } from './shared/services/api-config.service';\nimport { SharedModule } from './shared/shared.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    UserModule,\n    PostModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: process.env.NODE_ENV === 'test' ? '.test.env' : '.env',\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [SharedModule],\n      useFactory: (configService: ApiConfigService) =>\n        configService.postgresConfig,\n      inject: [ApiConfigService],\n    }),\n    I18nModule.forRootAsync({\n      useFactory: (configService: ApiConfigService) => ({\n        fallbackLanguage: configService.fallbackLanguage,\n        parserOptions: {\n          path: path.join(__dirname, '/i18n/'),\n          watch: configService.isDevelopment,\n        },\n      }),\n      imports: [SharedModule],\n      parser: I18nJsonParser,\n      inject: [ApiConfigService],\n    }),\n    HealthCheckerModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer): MiddlewareConsumer | void {\n    consumer.apply(contextMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Array.html":{"url":"interfaces/Array.html","title":"interface - Array","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Array\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boilerplate.polyfill.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toDtos\n                                    \n                                \n                                \n                                    \n                                        toPageDto\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toDtos\n                        \n                    \n                \n            \n            \n                \ntoDtos(this: T[], options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/boilerplate.polyfill.ts:16\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        Dto\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Dto[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toPageDto\n                        \n                    \n                \n            \n            \n                \ntoPageDto(this: T[], pageMetaDto: PageMetaDto, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/boilerplate.polyfill.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        Dto\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageMetaDto\n                                    \n                                                PageMetaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register';\n\nimport { compact, map } from 'lodash';\nimport { Brackets, QueryBuilder, SelectQueryBuilder } from 'typeorm';\n\nimport type { AbstractEntity } from './common/abstract.entity';\nimport type { AbstractDto } from './common/dto/abstract.dto';\nimport { PageDto } from './common/dto/page.dto';\nimport { PageMetaDto } from './common/dto/page-meta.dto';\nimport type { PageOptionsDto } from './common/dto/page-options.dto';\nimport { VIRTUAL_COLUMN_KEY } from './decorators/virtual-column.decorator';\n\ndeclare global {\n  interface Array {\n    toDtos(this: T[], options?: any): Dto[];\n\n    toPageDto(\n      this: T[],\n      pageMetaDto: PageMetaDto,\n      // FIXME make option type visible from entity\n      options?: any,\n    ): PageDto;\n  }\n}\n\ndeclare module 'typeorm' {\n  interface QueryBuilder {\n    searchByString(q: string, columnNames: string[]): this;\n  }\n\n  interface SelectQueryBuilder {\n    paginate(\n      this: SelectQueryBuilder,\n      pageOptionsDto: PageOptionsDto,\n      options?: Partial,\n    ): Promise;\n  }\n}\n\nArray.prototype.toDtos = function ,\n  Dto extends AbstractDto,\n>(options?: any): Dto[] {\n  return compact(\n    map(this, (item) => item.toDto(options as never)),\n  );\n};\n\nArray.prototype.toPageDto = function (pageMetaDto: PageMetaDto, options?: any) {\n  return new PageDto(this.toDtos(options), pageMetaDto);\n};\n\nQueryBuilder.prototype.searchByString = function (q, columnNames) {\n  if (!q) {\n    return this;\n  }\n\n  this.andWhere(\n    new Brackets((qb) => {\n      for (const item of columnNames) {\n        qb.orWhere(`${item} ILIKE :q`);\n      }\n    }),\n  );\n\n  this.setParameter('q', `%${q}%`);\n\n  return this;\n};\n\nSelectQueryBuilder.prototype.paginate = async function (\n  pageOptionsDto: PageOptionsDto,\n  options?: Partial,\n) {\n  if (options?.takeAll) {\n    this.skip(pageOptionsDto.skip).take(pageOptionsDto.take);\n  }\n\n  const itemCount = await this.getCount();\n\n  const { entities, raw } = await this.getRawAndEntities();\n\n  const items = entities.map((entity, index) => {\n    const metaInfo = Reflect.getMetadata(VIRTUAL_COLUMN_KEY, entity) ?? {};\n    const item = raw[index];\n\n    for (const [propertyKey, name] of Object.entries(metaInfo)) {\n      entity[propertyKey] = item[name];\n    }\n\n    return entity;\n  });\n\n  const pageMetaDto = new PageMetaDto({\n    itemCount,\n    pageOptionsDto,\n  });\n\n  return [items, pageMetaDto];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                userLogin\n                            \n                            \n                                    Async\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Get('me')@HttpCode(HttpStatus.OK)@Auth(['undefined', 'undefined'])@ApiOkResponse({type: UserDto, description: 'current user info'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userLoginDto: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginPayloadDto, description: 'User info with access token'})@ApiException(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userRegister\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(userRegisterDto: UserRegisterDto, file: IFile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: UserDto, description: 'Successfully Registered'})@ApiFile({name: 'avatar'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRegisterDto\n                                    \n                                                UserRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiException } from '@nanogiants/nestjs-swagger-api-exception-decorator';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UploadedFile,\n  Version,\n} from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\nimport { RoleType } from '../../constants';\nimport { ApiFile, Auth, AuthUser } from '../../decorators';\nimport { UserNotFoundException } from '../../exceptions';\nimport { IFile } from '../../interfaces';\nimport { UserDto } from '../user/dto/user.dto';\nimport { UserEntity } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { AuthService } from './auth.service';\nimport { LoginPayloadDto } from './dto/LoginPayloadDto';\nimport { UserLoginDto } from './dto/UserLoginDto';\nimport { UserRegisterDto } from './dto/UserRegisterDto';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({\n    type: LoginPayloadDto,\n    description: 'User info with access token',\n  })\n  @ApiException(() => [UserNotFoundException])\n  async userLogin(\n    @Body() userLoginDto: UserLoginDto,\n  ): Promise {\n    const userEntity = await this.authService.validateUser(userLoginDto);\n\n    const token = await this.authService.createAccessToken({\n      userId: userEntity.id,\n      role: userEntity.role,\n    });\n\n    return new LoginPayloadDto(userEntity.toDto(), token);\n  }\n\n  @Post('register')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: UserDto, description: 'Successfully Registered' })\n  @ApiFile({ name: 'avatar' })\n  async userRegister(\n    @Body() userRegisterDto: UserRegisterDto,\n    @UploadedFile() file: IFile,\n  ): Promise {\n    const createdUser = await this.userService.createUser(\n      userRegisterDto,\n      file,\n    );\n\n    return createdUser.toDto({\n      isActive: true,\n    });\n  }\n\n  @Version('1')\n  @Get('me')\n  @HttpCode(HttpStatus.OK)\n  @Auth([RoleType.USER, RoleType.ADMIN])\n  @ApiOkResponse({ type: UserDto, description: 'current user info' })\n  getCurrentUser(@AuthUser() user: UserEntity): UserDto {\n    return user.toDto();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPublicStrategy\n\nPublicStrategy\n\nAuthModule -->\n\nPublicStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PublicStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { ApiConfigService } from '../../shared/services/api-config.service';\nimport { UserModule } from '../user/user.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { PublicStrategy } from './public.strategy';\n\n@Module({\n  imports: [\n    forwardRef(() => UserModule),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: (configService: ApiConfigService) => ({\n        secretOrPrivateKey: configService.authConfig.jwtSecret,\n        // if you want to use token with expiration date\n        // signOptions: {\n        //     expiresIn: configService.getNumber('JWT_EXPIRATION_TIME'),\n        // },\n      }),\n      inject: [ApiConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, PublicStrategy],\n  exports: [JwtModule, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccessToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ApiConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ApiConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccessToken(data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userLoginDto: UserLoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginDto\n                                    \n                                                UserLoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { validateHash } from '../../common/utils';\nimport type { RoleType } from '../../constants';\nimport { TokenType } from '../../constants';\nimport { UserNotFoundException } from '../../exceptions';\nimport { ApiConfigService } from '../../shared/services/api-config.service';\nimport type { UserEntity } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { TokenPayloadDto } from './dto/TokenPayloadDto';\nimport type { UserLoginDto } from './dto/UserLoginDto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ApiConfigService,\n    private userService: UserService,\n  ) {}\n\n  async createAccessToken(data: {\n    role: RoleType;\n    userId: string;\n  }): Promise {\n    return new TokenPayloadDto({\n      expiresIn: this.configService.authConfig.jwtExpirationTime,\n      accessToken: await this.jwtService.signAsync({\n        userId: data.userId,\n        type: TokenType.ACCESS_TOKEN,\n        role: data.role,\n      }),\n    });\n  }\n\n  async validateUser(userLoginDto: UserLoginDto): Promise {\n    const user = await this.userService.findOne({\n      email: userLoginDto.email,\n    });\n\n    const isPasswordValid = await validateHash(\n      userLoginDto.password,\n      user?.password,\n    );\n\n    if (!isPasswordValid) {\n      throw new UserNotFoundException();\n    }\n\n    return user!;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthUserInterceptor.html":{"url":"injectables/AuthUserInterceptor.html","title":"injectable - AuthUserInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthUserInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/auth-user-interceptor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/auth-user-interceptor.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type {\n  CallHandler,\n  ExecutionContext,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Injectable } from '@nestjs/common';\n\nimport type { UserEntity } from '../modules/user/user.entity';\nimport { ContextProvider } from '../providers/context.provider';\n\n@Injectable()\nexport class AuthUserInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler) {\n    const request = context.switchToHttp().getRequest();\n\n    const user = request.user;\n    ContextProvider.setAuthUser(user);\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsS3Service.html":{"url":"injectables/AwsS3Service.html","title":"injectable - AwsS3Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsS3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/aws-s3.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                generatorService\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ApiConfigService, generatorService: GeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/aws-s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ApiConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generatorService\n                                                  \n                                                        \n                                                                        GeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadImage(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/aws-s3.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/services/aws-s3.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generatorService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GeneratorService\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/services/aws-s3.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AWS.S3\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/services/aws-s3.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport AWS from 'aws-sdk';\nimport mime from 'mime-types';\n\nimport type { IFile } from '../../interfaces';\nimport { ApiConfigService } from './api-config.service';\nimport { GeneratorService } from './generator.service';\n\n@Injectable()\nexport class AwsS3Service {\n  private readonly s3: AWS.S3;\n\n  constructor(\n    public configService: ApiConfigService,\n    public generatorService: GeneratorService,\n  ) {\n    const awsS3Config = configService.awsS3Config;\n\n    const options: AWS.S3.Types.ClientConfiguration = {\n      apiVersion: awsS3Config.bucketApiVersion,\n      region: awsS3Config.bucketRegion,\n    };\n\n    this.s3 = new AWS.S3(options);\n  }\n\n  async uploadImage(file: IFile): Promise {\n    const fileName = this.generatorService.fileName(\n      mime.extension(file.mimetype),\n    );\n    const key = 'images/' + fileName;\n    await this.s3\n      .putObject({\n        Bucket: this.configService.awsS3Config.bucketName,\n        Body: file.buffer,\n        ACL: 'public-read',\n        Key: key,\n      })\n      .promise();\n\n    return key;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextProvider.html":{"url":"classes/ContextProvider.html","title":"class - ContextProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/context.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                authUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                languageKey\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                nameSpace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                getAuthUser\n                            \n                            \n                                    Private\n                                    Static\n                                getKeyWithNamespace\n                            \n                            \n                                    Static\n                                getLanguage\n                            \n                            \n                                    Private\n                                    Static\n                                set\n                            \n                            \n                                    Static\n                                setAuthUser\n                            \n                            \n                                    Static\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        authUserKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user_key'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        languageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'language_key'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        nameSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'request'\n                    \n                \n                    \n                        \n                                Defined in src/providers/context.provider.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getAuthUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthUser()\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getKeyWithNamespace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getKeyWithNamespace(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getLanguage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLanguage()\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        setAuthUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAuthUser(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                    \n                    setLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/context.provider.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import requestContext from 'request-context';\n\nimport type { UserEntity } from '../modules/user/user.entity';\n\nexport class ContextProvider {\n  private static readonly nameSpace = 'request';\n\n  private static readonly authUserKey = 'user_key';\n\n  private static readonly languageKey = 'language_key';\n\n  private static get(key: string): T {\n    return requestContext.get(ContextProvider.getKeyWithNamespace(key));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private static set(key: string, value: any): void {\n    requestContext.set(ContextProvider.getKeyWithNamespace(key), value);\n  }\n\n  private static getKeyWithNamespace(key: string): string {\n    return `${ContextProvider.nameSpace}.${key}`;\n  }\n\n  static setAuthUser(user: UserEntity): void {\n    ContextProvider.set(ContextProvider.authUserKey, user);\n  }\n\n  static setLanguage(language: string): void {\n    ContextProvider.set(ContextProvider.languageKey, language);\n  }\n\n  static getLanguage(): string {\n    return ContextProvider.get(ContextProvider.languageKey);\n  }\n\n  static getAuthUser(): UserEntity {\n    return ContextProvider.get(ContextProvider.authUserKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSettingsCommand.html":{"url":"classes/CreateSettingsCommand.html","title":"class - CreateSettingsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSettingsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/commands/create-settings.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommand\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                createSettingsDto\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, createSettingsDto: CreateSettingsDto)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/commands/create-settings.command.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSettingsDto\n                                                  \n                                                        \n                                                                        CreateSettingsDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        createSettingsDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateSettingsDto\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/commands/create-settings.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/commands/create-settings.command.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import type { ICommand, ICommandHandler } from '@nestjs/cqrs';\nimport { CommandHandler } from '@nestjs/cqrs';\n\nimport type { CreateSettingsDto } from '../dto/create-settings.dto';\nimport type { UserSettingsEntity } from '../user-settings.entity';\nimport { UserSettingsRepository } from '../user-settings.repository';\n\nexport class CreateSettingsCommand implements ICommand {\n  constructor(\n    public readonly userId: string,\n    public readonly createSettingsDto: CreateSettingsDto,\n  ) {}\n}\n\n@CommandHandler(CreateSettingsCommand)\nexport class CreateSettingsHandler\n  implements ICommandHandler\n{\n  constructor(private userSettingsRepository: UserSettingsRepository) {}\n\n  async execute(command: CreateSettingsCommand) {\n    const { userId, createSettingsDto } = command;\n    const userSettingsEntity =\n      this.userSettingsRepository.create(createSettingsDto);\n\n    userSettingsEntity.userId = userId;\n\n    return this.userSettingsRepository.save(userSettingsEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSettingsDto.html":{"url":"classes/CreateSettingsDto.html","title":"class - CreateSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailVerified\n                            \n                            \n                                isPhoneVerified\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BooleanFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-settings.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPhoneVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @BooleanFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-settings.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BooleanFieldOptional } from '../../../decorators';\n\nexport class CreateSettingsDto {\n  @BooleanFieldOptional()\n  isEmailVerified: boolean;\n\n  @BooleanFieldOptional()\n  isPhoneVerified: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSettingsHandler.html":{"url":"classes/CreateSettingsHandler.html","title":"class - CreateSettingsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSettingsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/commands/create-settings.command.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userSettingsRepository: UserSettingsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/commands/create-settings.command.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userSettingsRepository\n                                                  \n                                                        \n                                                                        UserSettingsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CreateSettingsCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/commands/create-settings.command.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CreateSettingsCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { ICommand, ICommandHandler } from '@nestjs/cqrs';\nimport { CommandHandler } from '@nestjs/cqrs';\n\nimport type { CreateSettingsDto } from '../dto/create-settings.dto';\nimport type { UserSettingsEntity } from '../user-settings.entity';\nimport { UserSettingsRepository } from '../user-settings.repository';\n\nexport class CreateSettingsCommand implements ICommand {\n  constructor(\n    public readonly userId: string,\n    public readonly createSettingsDto: CreateSettingsDto,\n  ) {}\n}\n\n@CommandHandler(CreateSettingsCommand)\nexport class CreateSettingsHandler\n  implements ICommandHandler\n{\n  constructor(private userSettingsRepository: UserSettingsRepository) {}\n\n  async execute(command: CreateSettingsCommand) {\n    const { userId, createSettingsDto } = command;\n    const userSettingsEntity =\n      this.userSettingsRepository.create(createSettingsDto);\n\n    userSettingsEntity.userId = userId;\n\n    return this.userSettingsRepository.save(userSettingsEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsers.html":{"url":"classes/CreateUsers.html","title":"class - CreateUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/seeds/users.seed.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Seeder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run(factory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in src/database/seeds/users.seed.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    factory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Factory, Seeder } from 'typeorm-seeding';\n\nimport { UserEntity } from '../../modules/user/user.entity';\n\nexport default class CreateUsers implements Seeder {\n  public async run(factory: Factory): Promise {\n    await factory(UserEntity)({ roles: [] }).createMany(1);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUsersTable1622299665807.html":{"url":"classes/CreateUsersTable1622299665807.html","title":"class - CreateUsersTable1622299665807","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUsersTable1622299665807\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622299665807-create-users-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'createUsersTable1622299665807'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1622299665807-create-users-table.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622299665807-create-users-table.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622299665807-create-users-table.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateUsersTable1622299665807 implements MigrationInterface {\n  name = 'createUsersTable1622299665807';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      \"CREATE TYPE \\\"users_role_enum\\\" AS ENUM('USER', 'ADMIN')\",\n    );\n    await queryRunner.query(`\n      CREATE TABLE \"users\"\n      (\n        \"id\"         uuid              NOT NULL DEFAULT uuid_generate_v4(),\n        \"created_at\" TIMESTAMP         NOT NULL DEFAULT now(),\n        \"updated_at\" TIMESTAMP         NOT NULL DEFAULT now(),\n        \"first_name\" character varying,\n        \"last_name\"  character varying,\n        \"role\"       \"users_role_enum\" NOT NULL DEFAULT 'USER',\n        \"email\"      character varying,\n        \"password\"   character varying,\n        \"phone\"      character varying,\n        \"avatar\"     character varying,\n        CONSTRAINT \"UQ_97672ac88f789774dd47f7c8be3\" UNIQUE (\"email\"),\n        CONSTRAINT \"PK_a3ffb1c0c8416b9fc6f907b7433\" PRIMARY KEY (\"id\")\n      )`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('DROP TABLE \"users\"');\n    await queryRunner.query('DROP TYPE \"users_role_enum\"');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExistsValidator.html":{"url":"injectables/ExistsValidator.html","title":"injectable - ExistsValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExistsValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/exists.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/validators/exists.validator.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/exists.validator.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: IExistsValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/exists.validator.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                IExistsValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport type {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { registerDecorator, ValidatorConstraint } from 'class-validator';\nimport type { EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { Connection } from 'typeorm';\n\n@Injectable()\n@ValidatorConstraint({ name: 'exists', async: true })\nexport class ExistsValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  public async validate(\n    value: string,\n    args: IExistsValidationArguments,\n  ): Promise {\n    const [entityClass, findCondition = args.property] = args.constraints;\n\n    return (\n      (await this.connection.getRepository(entityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      })) > 0\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const [entityClass] = args.constraints;\n    const entity = entityClass.name || 'Entity';\n\n    return `The selected ${args.property}  does not exist in ${entity} entity`;\n  }\n}\n\ntype ExistsValidationConstraints = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface IExistsValidationArguments extends ValidationArguments {\n  constraints: ExistsValidationConstraints;\n}\n\nexport function Exists(\n  constraints: Partial>,\n  validationOptions?: ValidationOptions,\n): PropertyDecorator {\n  return (object, propertyName: string) => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints,\n      validator: ExistsValidator,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileNotImageException.html":{"url":"classes/FileNotImageException.html","title":"class - FileNotImageException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileNotImageException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/file-not-image.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/file-not-image.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class FileNotImageException extends BadRequestException {\n  constructor(error?: string) {\n    super('error.file.not_image', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneratorProvider.html":{"url":"classes/GeneratorProvider.html","title":"class - GeneratorProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneratorProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/generator.provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fileName\n                            \n                            \n                                    Static\n                                generatePassword\n                            \n                            \n                                    Static\n                                generateRandomString\n                            \n                            \n                                    Static\n                                generateVerificationCode\n                            \n                            \n                                    Static\n                                getS3Key\n                            \n                            \n                                    Static\n                                getS3PublicUrl\n                            \n                            \n                                    Static\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileName(ext: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        generatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    generatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        generateRandomString\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRandomString(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:58\n                \n            \n\n\n            \n                \n                    generate random string\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        generateVerificationCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateVerificationCode()\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getS3Key\n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Key(publicUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publicUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Optional\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getS3PublicUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3PublicUrl(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Optional\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        uuid\n                        \n                    \n                \n            \n            \n                \n                    \n                    uuid()\n                \n            \n\n\n            \n                \n                    Defined in src/providers/generator.provider.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v1 as uuid } from 'uuid';\n\nimport type { Optional } from '../types';\n\nexport class GeneratorProvider {\n  static uuid(): string {\n    return uuid();\n  }\n\n  static fileName(ext: string): string {\n    return GeneratorProvider.uuid() + '.' + ext;\n  }\n\n  static getS3PublicUrl(key: string): Optional {\n    if (!key) {\n      return;\n    }\n\n    return `https://s3.${process.env.AWS_S3_BUCKET_NAME_REGION}.amazonaws.com/${process.env.AWS_S3_BUCKET_NAME}/${key}`;\n  }\n\n  static getS3Key(publicUrl: string): Optional {\n    if (!publicUrl) {\n      return;\n    }\n\n    const exec = new RegExp(\n      `(?\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneratorService.html":{"url":"injectables/GeneratorService.html","title":"injectable - GeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/generator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileName\n                            \n                            \n                                    Public\n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fileName\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileName(ext: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/generator.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ext\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        uuid\n                        \n                    \n                \n            \n            \n                \n                    \n                    uuid()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/generator.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { v1 as uuid } from 'uuid';\n\n@Injectable()\nexport class GeneratorService {\n  public uuid(): string {\n    return uuid();\n  }\n\n  public fileName(ext: string): string {\n    return this.uuid() + '.' + ext;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthCheckerController.html":{"url":"controllers/HealthCheckerController.html","title":"controller - HealthCheckerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthCheckerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health-checker/health-checker.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health-checker/health-checker.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport type { HealthCheckResult } from '@nestjs/terminus';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\nimport { ServiceHealthIndicator } from './health-indicators/service.indicator';\n\n@Controller('health')\nexport class HealthCheckerController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private ormIndicator: TypeOrmHealthIndicator,\n    private serviceIndicator: ServiceHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  async check(): Promise {\n    return this.healthCheckService.check([\n      () => this.ormIndicator.pingCheck('database', { timeout: 1500 }),\n      () => this.serviceIndicator.isHealthy('search-service-health'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthCheckerModule.html":{"url":"modules/HealthCheckerModule.html","title":"module - HealthCheckerModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthCheckerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthCheckerModule\n\n\n\ncluster_HealthCheckerModule_providers\n\n\n\n\nServiceHealthIndicator\n\nServiceHealthIndicator\n\n\n\nHealthCheckerModule\n\nHealthCheckerModule\n\nHealthCheckerModule -->\n\nServiceHealthIndicator->HealthCheckerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health-checker/health-checker.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServiceHealthIndicator\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthCheckerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HealthCheckerController } from './health-checker.controller';\nimport { ServiceHealthIndicator } from './health-indicators/service.indicator';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthCheckerController],\n  providers: [ServiceHealthIndicator],\n})\nexport class HealthCheckerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/bad-request.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                    Private\n                                validationFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/filters/bad-request.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reflector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Reflector\n\n                    \n                \n                    \n                        \n                                Defined in src/filters/bad-request.filter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: UnprocessableEntityException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/bad-request.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            UnprocessableEntityException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validationFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    validationFilter(validationErrors: ValidationError[])\n                \n            \n\n\n            \n                \n                    Defined in src/filters/bad-request.filter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationErrors\n                                    \n                                            ValidationError[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { ArgumentsHost, ExceptionFilter } from '@nestjs/common';\nimport { Catch, UnprocessableEntityException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport type { ValidationError } from 'class-validator';\nimport type { Response } from 'express';\nimport _ from 'lodash';\n\n@Catch(UnprocessableEntityException)\nexport class HttpExceptionFilter\n  implements ExceptionFilter\n{\n  constructor(public reflector: Reflector) {}\n\n  catch(exception: UnprocessableEntityException, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const statusCode = exception.getStatus();\n    const r = exception.getResponse() as { message: ValidationError[] };\n\n    const validationErrors = r.message;\n    this.validationFilter(validationErrors);\n\n    response.status(statusCode).json(r);\n  }\n\n  private validationFilter(validationErrors: ValidationError[]): void {\n    for (const validationError of validationErrors) {\n      const children = validationError.children;\n\n      if (children && !_.isEmpty(children)) {\n        this.validationFilter(children);\n\n        return;\n      }\n\n      delete validationError.children;\n\n      const constraints = validationError.constraints;\n\n      if (!constraints) {\n        return;\n      }\n\n      for (const [constraintKey, constraint] of Object.entries(constraints)) {\n        // convert default messages\n        if (!constraint) {\n          // convert error message to error.fields.{key} syntax for i18n translation\n          constraints[constraintKey] = `error.fields.${_.snakeCase(\n            constraintKey,\n          )}`;\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAbstractEntity.html":{"url":"interfaces/IAbstractEntity.html","title":"interface - IAbstractEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAbstractEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/abstract.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract Entity\nIt's experimental and recommended using it only in microservice architecture,\notherwise just delete and use your own entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        toDto\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toDto\n                        \n                    \n                \n            \n            \n                \ntoDto(options?: O)\n                \n            \n\n\n            \n                \n                    Defined in src/common/abstract.entity.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            O\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DTO\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nimport type { Constructor } from '../types';\nimport type { AbstractDto } from './dto/abstract.dto';\n\n/**\n * Abstract Entity\n * @author Narek Hakobyan \n *\n * @description This class is an abstract class for all entities.\n * It's experimental and recommended using it only in microservice architecture,\n * otherwise just delete and use your own entity.\n */\nexport interface IAbstractEntity {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n\n  toDto(options?: O): DTO;\n}\n\nexport abstract class AbstractEntity implements IAbstractEntity\n{\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n  })\n  updatedAt: Date;\n\n  private dtoClass: Constructor;\n\n  toDto(options?: O): DTO {\n    const dtoClass = this.dtoClass;\n\n    if (!dtoClass) {\n      throw new Error(\n        `You need to use @UseDto on class (${this.constructor.name}) be able to call toDto function`,\n      );\n    }\n\n    return new this.dtoClass(this, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiFile.html":{"url":"interfaces/IApiFile.html","title":"interface - IApiFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IApiFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/IApiFile.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isArray\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isArray\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isArray:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IApiFile {\n  name: string;\n  isArray?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExistsValidationArguments.html":{"url":"interfaces/IExistsValidationArguments.html","title":"interface - IExistsValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExistsValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/exists.validator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ValidationArguments\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            constraints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constraints:         ExistsValidationConstraints\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExistsValidationConstraints\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport type {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { registerDecorator, ValidatorConstraint } from 'class-validator';\nimport type { EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { Connection } from 'typeorm';\n\n@Injectable()\n@ValidatorConstraint({ name: 'exists', async: true })\nexport class ExistsValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  public async validate(\n    value: string,\n    args: IExistsValidationArguments,\n  ): Promise {\n    const [entityClass, findCondition = args.property] = args.constraints;\n\n    return (\n      (await this.connection.getRepository(entityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      })) > 0\n    );\n  }\n\n  defaultMessage(args: ValidationArguments): string {\n    const [entityClass] = args.constraints;\n    const entity = entityClass.name || 'Entity';\n\n    return `The selected ${args.property}  does not exist in ${entity} entity`;\n  }\n}\n\ntype ExistsValidationConstraints = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface IExistsValidationArguments extends ValidationArguments {\n  constraints: ExistsValidationConstraints;\n}\n\nexport function Exists(\n  constraints: Partial>,\n  validationOptions?: ValidationOptions,\n): PropertyDecorator {\n  return (object, propertyName: string) => {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints,\n      validator: ExistsValidator,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/IFile.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            encoding\n                                        \n                                \n                                \n                                        \n                                            fieldname\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  encoding: string;\n  buffer: Buffer;\n  fieldname: string;\n  mimetype: string;\n  originalname: string;\n  size: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INumberFieldOptions.html":{"url":"interfaces/INumberFieldOptions.html","title":"interface - INumberFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INumberFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/field.decorators.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            each\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            int\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPositive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maximum\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimum\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        each\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        each:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        int:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPositive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPositive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maximum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maximum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimum:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport type { ApiPropertyOptions } from '@nestjs/swagger';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMaxSize,\n  ArrayMinSize,\n  ArrayNotEmpty,\n  IsBoolean,\n  IsDate,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport _ from 'lodash';\n\nimport { supportedLanguageCount } from '../constants';\nimport { ApiEnumProperty, ApiUUIDProperty } from './property.decorators';\nimport {\n  PhoneNumberSerializer,\n  ToArray,\n  ToBoolean,\n  ToLowerCase,\n  ToUpperCase,\n  Trim,\n} from './transform.decorators';\nimport { IsPassword, IsPhoneNumber, IsTmpKey } from './validator.decorators';\n\ntype RequireField = T & Required>;\n\ninterface IStringFieldOptions {\n  minLength?: number;\n  maxLength?: number;\n  toLowerCase?: boolean;\n  toUpperCase?: boolean;\n  swagger?: boolean;\n}\n\ninterface INumberFieldOptions {\n  each?: boolean;\n  minimum?: number;\n  maximum?: number;\n  int?: boolean;\n  isPositive?: boolean;\n  swagger?: boolean;\n}\n\nexport function NumberField(\n  options: Omit & INumberFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Number)];\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { each, int, minimum, maximum, isPositive, swagger } = options;\n\n  if (swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: Number, ...options, example: int ? 1 : 1.2 }),\n    );\n  }\n\n  if (each) {\n    decorators.push(ToArray());\n  }\n\n  if (int) {\n    decorators.push(IsInt({ each }));\n  } else {\n    decorators.push(IsNumber({}, { each }));\n  }\n\n  if (_.isNumber(minimum)) {\n    decorators.push(Min(minimum, { each }));\n  }\n\n  if (_.isNumber(maximum)) {\n    decorators.push(Max(maximum, { each }));\n  }\n\n  if (isPositive) {\n    decorators.push(IsPositive({ each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function NumberFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    NumberField({ required: false, ...options }),\n  );\n}\n\nexport function StringField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [IsNotEmpty(), IsString(), Trim()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  if (options?.minLength) {\n    decorators.push(MinLength(options.minLength));\n  }\n\n  if (options?.maxLength) {\n    decorators.push(MaxLength(options.maxLength));\n  }\n\n  if (options?.toLowerCase) {\n    decorators.push(ToLowerCase());\n  }\n\n  if (options?.toUpperCase) {\n    decorators.push(ToUpperCase());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function StringFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    StringField({ required: false, ...options }),\n  );\n}\n\nexport function PasswordField(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    StringField({ format: '^[\\\\d!#$%&*@A-Z^a-z]*$', ...options }),\n    IsPassword(),\n  );\n}\n\nexport function PasswordFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    PasswordField({ required: false, ...options }),\n  );\n}\n\nexport function BooleanField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsBoolean(), ToBoolean()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: Boolean, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function BooleanFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    BooleanField({ required: false, ...options }),\n  );\n}\n\nexport function TranslationsField(\n  options: RequireField, 'type'> &\n    Partial,\n): PropertyDecorator {\n  const decorators = [\n    ArrayMinSize(supportedLanguageCount),\n    ArrayMaxSize(supportedLanguageCount),\n    ValidateNested({\n      each: true,\n    }),\n    Type(() => options.type as FunctionConstructor),\n  ];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ isArray: true, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TranslationsFieldOptional(\n  options: RequireField, 'type'> &\n    Partial,\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    TranslationsField({ required: false, ...options }),\n  );\n}\n\nexport function TmpKeyField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsTmpKey()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TmpKeyFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    TmpKeyField({ required: false, ...options }),\n  );\n}\n\nexport function EnumField(\n  getEnum: () => TEnum,\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const enumValue = getEnum() as any;\n  const decorators = [IsEnum(enumValue, { each: options.each })];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiEnumProperty(getEnum, options));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EnumFieldOptional(\n  getEnum: () => TEnum,\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    EnumField(getEnum, { required: false, ...options }),\n  );\n}\n\nexport function EmailField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    IsEmail(),\n    StringField({ toLowerCase: true, ...options }),\n  ];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EmailFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    EmailField({ required: false, ...options }),\n  );\n}\n\nexport function PhoneField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsPhoneNumber(), PhoneNumberSerializer()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PhoneFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    PhoneField({ required: false, ...options }),\n  );\n}\n\nexport function UUIDField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsUUID('4', { each: options?.each })];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiUUIDProperty(options));\n  }\n\n  if (options?.each) {\n    decorators.push(ArrayNotEmpty(), ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function UUIDFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    UUIDField({ required: false, ...options }),\n  );\n}\n\nexport function URLField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(StringField(options), IsUrl());\n}\n\nexport function URLFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    URLField({ required: false, ...options }),\n  );\n}\n\nexport function DateField(\n  options: Omit & Partial = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Date), IsDate()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty(options));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function DateFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    DateField({ ...options, required: false }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPageMetaDtoParameters.html":{"url":"interfaces/IPageMetaDtoParameters.html","title":"interface - IPageMetaDtoParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPageMetaDtoParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/page-meta.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            pageOptionsDto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport type { PageOptionsDto } from './page-options.dto';\n\ninterface IPageMetaDtoParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: IPageMetaDtoParameters) {\n    this.page = pageOptionsDto.page;\n    this.take = pageOptionsDto.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStringFieldOptions.html":{"url":"interfaces/IStringFieldOptions.html","title":"interface - IStringFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStringFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/field.decorators.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            maxLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swagger\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toLowerCase\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            toUpperCase\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toLowerCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toLowerCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toUpperCase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toUpperCase:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { applyDecorators } from '@nestjs/common';\nimport type { ApiPropertyOptions } from '@nestjs/swagger';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMaxSize,\n  ArrayMinSize,\n  ArrayNotEmpty,\n  IsBoolean,\n  IsDate,\n  IsEmail,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsPositive,\n  IsString,\n  IsUrl,\n  IsUUID,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport _ from 'lodash';\n\nimport { supportedLanguageCount } from '../constants';\nimport { ApiEnumProperty, ApiUUIDProperty } from './property.decorators';\nimport {\n  PhoneNumberSerializer,\n  ToArray,\n  ToBoolean,\n  ToLowerCase,\n  ToUpperCase,\n  Trim,\n} from './transform.decorators';\nimport { IsPassword, IsPhoneNumber, IsTmpKey } from './validator.decorators';\n\ntype RequireField = T & Required>;\n\ninterface IStringFieldOptions {\n  minLength?: number;\n  maxLength?: number;\n  toLowerCase?: boolean;\n  toUpperCase?: boolean;\n  swagger?: boolean;\n}\n\ninterface INumberFieldOptions {\n  each?: boolean;\n  minimum?: number;\n  maximum?: number;\n  int?: boolean;\n  isPositive?: boolean;\n  swagger?: boolean;\n}\n\nexport function NumberField(\n  options: Omit & INumberFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Number)];\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { each, int, minimum, maximum, isPositive, swagger } = options;\n\n  if (swagger !== false) {\n    decorators.push(\n      ApiProperty({ type: Number, ...options, example: int ? 1 : 1.2 }),\n    );\n  }\n\n  if (each) {\n    decorators.push(ToArray());\n  }\n\n  if (int) {\n    decorators.push(IsInt({ each }));\n  } else {\n    decorators.push(IsNumber({}, { each }));\n  }\n\n  if (_.isNumber(minimum)) {\n    decorators.push(Min(minimum, { each }));\n  }\n\n  if (_.isNumber(maximum)) {\n    decorators.push(Max(maximum, { each }));\n  }\n\n  if (isPositive) {\n    decorators.push(IsPositive({ each }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function NumberFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    NumberField({ required: false, ...options }),\n  );\n}\n\nexport function StringField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [IsNotEmpty(), IsString(), Trim()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  if (options?.minLength) {\n    decorators.push(MinLength(options.minLength));\n  }\n\n  if (options?.maxLength) {\n    decorators.push(MaxLength(options.maxLength));\n  }\n\n  if (options?.toLowerCase) {\n    decorators.push(ToLowerCase());\n  }\n\n  if (options?.toUpperCase) {\n    decorators.push(ToUpperCase());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function StringFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    StringField({ required: false, ...options }),\n  );\n}\n\nexport function PasswordField(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    StringField({ format: '^[\\\\d!#$%&*@A-Z^a-z]*$', ...options }),\n    IsPassword(),\n  );\n}\n\nexport function PasswordFieldOptional(\n  options: Omit &\n    IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    PasswordField({ required: false, ...options }),\n  );\n}\n\nexport function BooleanField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsBoolean(), ToBoolean()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: Boolean, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function BooleanFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    BooleanField({ required: false, ...options }),\n  );\n}\n\nexport function TranslationsField(\n  options: RequireField, 'type'> &\n    Partial,\n): PropertyDecorator {\n  const decorators = [\n    ArrayMinSize(supportedLanguageCount),\n    ArrayMaxSize(supportedLanguageCount),\n    ValidateNested({\n      each: true,\n    }),\n    Type(() => options.type as FunctionConstructor),\n  ];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ isArray: true, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TranslationsFieldOptional(\n  options: RequireField, 'type'> &\n    Partial,\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    TranslationsField({ required: false, ...options }),\n  );\n}\n\nexport function TmpKeyField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsTmpKey()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function TmpKeyFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    TmpKeyField({ required: false, ...options }),\n  );\n}\n\nexport function EnumField(\n  getEnum: () => TEnum,\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const enumValue = getEnum() as any;\n  const decorators = [IsEnum(enumValue, { each: options.each })];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiEnumProperty(getEnum, options));\n  }\n\n  if (options.each) {\n    decorators.push(ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EnumFieldOptional(\n  getEnum: () => TEnum,\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    EnumField(getEnum, { required: false, ...options }),\n  );\n}\n\nexport function EmailField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  const decorators = [\n    IsEmail(),\n    StringField({ toLowerCase: true, ...options }),\n  ];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function EmailFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    EmailField({ required: false, ...options }),\n  );\n}\n\nexport function PhoneField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsPhoneNumber(), PhoneNumberSerializer()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty({ type: String, ...options }));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function PhoneFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    PhoneField({ required: false, ...options }),\n  );\n}\n\nexport function UUIDField(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  const decorators = [IsUUID('4', { each: options?.each })];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiUUIDProperty(options));\n  }\n\n  if (options?.each) {\n    decorators.push(ArrayNotEmpty(), ToArray());\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function UUIDFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    UUIDField({ required: false, ...options }),\n  );\n}\n\nexport function URLField(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(StringField(options), IsUrl());\n}\n\nexport function URLFieldOptional(\n  options: Omit & IStringFieldOptions = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    URLField({ required: false, ...options }),\n  );\n}\n\nexport function DateField(\n  options: Omit & Partial = {},\n): PropertyDecorator {\n  const decorators = [Type(() => Date), IsDate()];\n\n  if (options?.swagger !== false) {\n    decorators.push(ApiProperty(options));\n  }\n\n  return applyDecorators(...decorators);\n}\n\nexport function DateFieldOptional(\n  options: Omit &\n    Partial = {},\n): PropertyDecorator {\n  return applyDecorators(\n    IsOptional(),\n    DateField({ ...options, required: false }),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITranslationDecoratorInterface.html":{"url":"interfaces/ITranslationDecoratorInterface.html","title":"interface - ITranslationDecoratorInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITranslationDecoratorInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/ITranslationDecoratorInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            translationKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        translationKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translationKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITranslationDecoratorInterface {\n  translationKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUniqueValidationArguments.html":{"url":"interfaces/IUniqueValidationArguments.html","title":"interface - IUniqueValidationArguments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUniqueValidationArguments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/unique.validator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ValidationArguments\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            constraints\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constraints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        constraints:         UniqueValidationConstraints\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UniqueValidationConstraints\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport type {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { registerDecorator, ValidatorConstraint } from 'class-validator';\nimport type { EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { Connection } from 'typeorm';\n\n@Injectable()\n@ValidatorConstraint({ name: 'unique', async: true })\nexport class UniqueValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  public async validate(\n    value: string,\n    args: IUniqueValidationArguments,\n  ): Promise {\n    const [entityClass, findCondition = args.property] = args.constraints;\n\n    return (\n      (await this.connection.getRepository(entityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      }))  = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface IUniqueValidationArguments extends ValidationArguments {\n  constraints: UniqueValidationConstraints;\n}\n\nexport function Unique(\n  constraints: Partial>,\n  validationOptions?: ValidationOptions,\n): PropertyDecorator {\n  return function (object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints,\n      validator: UniqueValidator,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserEntity.html":{"url":"interfaces/IUserEntity.html","title":"interface - IUserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IAbstractEntity\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            settings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         RoleType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         IUserSettingsEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUserSettingsEntity\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\n\nimport type { IAbstractEntity } from '../../common/abstract.entity';\nimport { AbstractEntity } from '../../common/abstract.entity';\nimport { RoleType } from '../../constants';\nimport { UseDto, VirtualColumn } from '../../decorators';\nimport type { UserDtoOptions } from './dto/user.dto';\nimport { UserDto } from './dto/user.dto';\nimport type { IUserSettingsEntity } from './user-settings.entity';\nimport { UserSettingsEntity } from './user-settings.entity';\n\nexport interface IUserEntity extends IAbstractEntity {\n  firstName?: string;\n\n  lastName?: string;\n\n  role: RoleType;\n\n  email?: string;\n\n  password?: string;\n\n  phone?: string;\n\n  avatar?: string;\n\n  fullName?: string;\n\n  settings?: IUserSettingsEntity;\n}\n\n@Entity({ name: 'users' })\n@UseDto(UserDto)\nexport class UserEntity\n  extends AbstractEntity\n  implements IUserEntity\n{\n  @Column({ nullable: true })\n  firstName?: string;\n\n  @Column({ nullable: true })\n  lastName?: string;\n\n  @Column({ type: 'enum', enum: RoleType, default: RoleType.USER })\n  role: RoleType;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column({ nullable: true })\n  password?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  avatar?: string;\n\n  @VirtualColumn()\n  fullName?: string;\n\n  @OneToOne(() => UserSettingsEntity, (userSettings) => userSettings.user)\n  settings?: UserSettingsEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserSettingsEntity.html":{"url":"interfaces/IUserSettingsEntity.html","title":"interface - IUserSettingsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserSettingsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-settings.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IAbstractEntity\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isEmailVerified\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPhoneVerified\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isEmailVerified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isEmailVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPhoneVerified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPhoneVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IUserEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUserEntity\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\n\nimport type { IAbstractEntity } from '../../common/abstract.entity';\nimport { AbstractEntity } from '../../common/abstract.entity';\nimport { UseDto } from '../../decorators';\nimport type { UserDtoOptions } from './dto/user.dto';\nimport { UserDto } from './dto/user.dto';\nimport type { IUserEntity } from './user.entity';\nimport { UserEntity } from './user.entity';\n\nexport interface IUserSettingsEntity extends IAbstractEntity {\n  isEmailVerified?: boolean;\n\n  isPhoneVerified?: boolean;\n\n  user?: IUserEntity;\n}\n\n@Entity({ name: 'user_settings' })\n@UseDto(UserDto)\nexport class UserSettingsEntity\n  extends AbstractEntity\n  implements IUserSettingsEntity\n{\n  @Column({ default: false })\n  isEmailVerified?: boolean;\n\n  @Column({ default: false })\n  isPhoneVerified?: boolean;\n\n  @Column({ type: 'uuid' })\n  userId?: string;\n\n  @OneToOne(() => UserEntity, (user) => user.settings)\n  @JoinColumn({ name: 'user_id' })\n  user?: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ApiConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ApiConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(args: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport type { RoleType } from '../../constants';\nimport { TokenType } from '../../constants';\nimport { ApiConfigService } from '../../shared/services/api-config.service';\nimport type { UserEntity } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ApiConfigService,\n    private userService: UserService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.authConfig.jwtSecret,\n    });\n  }\n\n  async validate(args: {\n    userId: string;\n    role: RoleType;\n    type: TokenType;\n  }): Promise {\n    if (args.type !== TokenType.ACCESS_TOKEN) {\n      throw new UnauthorizedException();\n    }\n\n    const user = await this.userService.findOne({\n      id: args.userId,\n      role: args.role,\n    });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayloadDto.html":{"url":"classes/LoginPayloadDto.html","title":"class - LoginPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/LoginPayloadDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserDto, token: TokenPayloadDto)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/dto/LoginPayloadDto.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        TokenPayloadDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenPayloadDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: TokenPayloadDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/LoginPayloadDto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: UserDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/LoginPayloadDto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { UserDto } from '../../user/dto/user.dto';\nimport { TokenPayloadDto } from './TokenPayloadDto';\n\nexport class LoginPayloadDto {\n  @ApiProperty({ type: UserDto })\n  user: UserDto;\n\n  @ApiProperty({ type: TokenPayloadDto })\n  token: TokenPayloadDto;\n\n  constructor(user: UserDto, token: TokenPayloadDto) {\n    this.user = user;\n    this.token = token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/page.dto.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport { PageMetaDto } from './page-meta.dto';\n\nexport class PageDto {\n  @ApiProperty({ isArray: true })\n  readonly data: T[];\n\n  @ApiProperty()\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IPageMetaDtoParameters)\n                    \n                \n                        \n                            \n                                Defined in src/common/dto/page-meta.dto.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IPageMetaDtoParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nimport type { PageOptionsDto } from './page-options.dto';\n\ninterface IPageMetaDtoParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: IPageMetaDtoParameters) {\n    this.page = pageOptionsDto.page;\n    this.take = pageOptionsDto.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                q\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EnumFieldOptional(undefined, {default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-options.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberFieldOptional({minimum: 1, default: 1, int: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-options.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        q\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringFieldOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-options.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberFieldOptional({minimum: 1, maximum: 50, default: 10, int: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/page-options.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/common/dto/page-options.dto.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Order } from '../../constants';\nimport {\n  EnumFieldOptional,\n  NumberFieldOptional,\n  StringFieldOptional,\n} from '../../decorators';\n\nexport class PageOptionsDto {\n  @EnumFieldOptional(() => Order, {\n    default: Order.ASC,\n  })\n  readonly order: Order = Order.ASC;\n\n  @NumberFieldOptional({\n    minimum: 1,\n    default: 1,\n    int: true,\n  })\n  readonly page: number = 1;\n\n  @NumberFieldOptional({\n    minimum: 1,\n    maximum: 50,\n    default: 10,\n    int: true,\n  })\n  readonly take: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n\n  @StringFieldOptional()\n  readonly q?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageTypeException.html":{"url":"classes/PageTypeException.html","title":"class - PageTypeException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageTypeException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/page-type.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/page-type.exception.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class PageTypeException extends BadRequestException {\n  constructor() {\n    super('error.pageType');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                call\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        call\n                        \n                    \n                \n            \n            \n                \ncall()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')\n                \n            \n\n            \n                \n                    Defined in src/modules/post/post.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject, Optional } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@Controller('posts')\nexport class PostController {\n  constructor(\n    @Optional() @Inject('NATS_SERVICE') private client: ClientProxy,\n  ) {}\n\n  @Get('search')\n  call() {\n    return this.client.send('search', { text: 'test' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { PostController } from './post.controller';\n\n@Module({\n  controllers: [PostController],\n})\nexport class PostModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublicStrategy.html":{"url":"injectables/PublicStrategy.html","title":"injectable - PublicStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PublicStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/public.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/public.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/public.strategy.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport';\n\n@Injectable()\nexport class PublicStrategy extends PassportStrategy(Strategy, 'public') {\n  constructor() {\n    super();\n  }\n\n  authenticate(): void {\n    return this.success({ [Symbol.for('isPublic')]: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilder.html":{"url":"interfaces/QueryBuilder.html","title":"interface - QueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boilerplate.polyfill.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        searchByString\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        searchByString\n                        \n                    \n                \n            \n            \n                \nsearchByString(q: string, columnNames: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/boilerplate.polyfill.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    q\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnNames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register';\n\nimport { compact, map } from 'lodash';\nimport { Brackets, QueryBuilder, SelectQueryBuilder } from 'typeorm';\n\nimport type { AbstractEntity } from './common/abstract.entity';\nimport type { AbstractDto } from './common/dto/abstract.dto';\nimport { PageDto } from './common/dto/page.dto';\nimport { PageMetaDto } from './common/dto/page-meta.dto';\nimport type { PageOptionsDto } from './common/dto/page-options.dto';\nimport { VIRTUAL_COLUMN_KEY } from './decorators/virtual-column.decorator';\n\ndeclare global {\n  interface Array {\n    toDtos(this: T[], options?: any): Dto[];\n\n    toPageDto(\n      this: T[],\n      pageMetaDto: PageMetaDto,\n      // FIXME make option type visible from entity\n      options?: any,\n    ): PageDto;\n  }\n}\n\ndeclare module 'typeorm' {\n  interface QueryBuilder {\n    searchByString(q: string, columnNames: string[]): this;\n  }\n\n  interface SelectQueryBuilder {\n    paginate(\n      this: SelectQueryBuilder,\n      pageOptionsDto: PageOptionsDto,\n      options?: Partial,\n    ): Promise;\n  }\n}\n\nArray.prototype.toDtos = function ,\n  Dto extends AbstractDto,\n>(options?: any): Dto[] {\n  return compact(\n    map(this, (item) => item.toDto(options as never)),\n  );\n};\n\nArray.prototype.toPageDto = function (pageMetaDto: PageMetaDto, options?: any) {\n  return new PageDto(this.toDtos(options), pageMetaDto);\n};\n\nQueryBuilder.prototype.searchByString = function (q, columnNames) {\n  if (!q) {\n    return this;\n  }\n\n  this.andWhere(\n    new Brackets((qb) => {\n      for (const item of columnNames) {\n        qb.orWhere(`${item} ILIKE :q`);\n      }\n    }),\n  );\n\n  this.setParameter('q', `%${q}%`);\n\n  return this;\n};\n\nSelectQueryBuilder.prototype.paginate = async function (\n  pageOptionsDto: PageOptionsDto,\n  options?: Partial,\n) {\n  if (options?.takeAll) {\n    this.skip(pageOptionsDto.skip).take(pageOptionsDto.take);\n  }\n\n  const itemCount = await this.getCount();\n\n  const { entities, raw } = await this.getRawAndEntities();\n\n  const items = entities.map((entity, index) => {\n    const metaInfo = Reflect.getMetadata(VIRTUAL_COLUMN_KEY, entity) ?? {};\n    const item = raw[index];\n\n    for (const [propertyKey, name] of Object.entries(metaInfo)) {\n      entity[propertyKey] = item[name];\n    }\n\n    return entity;\n  });\n\n  const pageMetaDto = new PageMetaDto({\n    itemCount,\n    pageOptionsDto,\n  });\n\n  return [items, pageMetaDto];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryFailedFilter.html":{"url":"classes/QueryFailedFilter.html","title":"class - QueryFailedFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryFailedFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/query-failed.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/filters/query-failed.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reflector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Reflector\n\n                    \n                \n                    \n                        \n                                Defined in src/filters/query-failed.filter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/query-failed.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { ArgumentsHost, ExceptionFilter } from '@nestjs/common';\nimport { Catch, HttpStatus } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport type { Response } from 'express';\nimport { STATUS_CODES } from 'http';\nimport { QueryFailedError } from 'typeorm';\n\nimport { constraintErrors } from './constraint-errors';\n\n@Catch(QueryFailedError)\nexport class QueryFailedFilter implements ExceptionFilter {\n  constructor(public reflector: Reflector) {}\n\n  catch(\n    exception: QueryFailedError & { constraint?: string },\n    host: ArgumentsHost,\n  ) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status = exception.constraint?.startsWith('UQ')\n      ? HttpStatus.CONFLICT\n      : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    response.status(status).json({\n      statusCode: status,\n      error: STATUS_CODES[status],\n      message: exception.constraint\n        ? constraintErrors[exception.constraint]\n        : undefined,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import type { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport _ from 'lodash';\n\nimport type { RoleType } from '../constants';\nimport type { UserEntity } from '../modules/user/user.entity';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get('roles', context.getHandler());\n\n    if (_.isEmpty(roles)) {\n      return true;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    return roles.includes(user.role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectQueryBuilder.html":{"url":"interfaces/SelectQueryBuilder.html","title":"interface - SelectQueryBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectQueryBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/boilerplate.polyfill.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        paginate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        paginate\n                        \n                    \n                \n            \n            \n                \npaginate(this: SelectQueryBuilder, pageOptionsDto: PageOptionsDto, options?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/boilerplate.polyfill.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import 'source-map-support/register';\n\nimport { compact, map } from 'lodash';\nimport { Brackets, QueryBuilder, SelectQueryBuilder } from 'typeorm';\n\nimport type { AbstractEntity } from './common/abstract.entity';\nimport type { AbstractDto } from './common/dto/abstract.dto';\nimport { PageDto } from './common/dto/page.dto';\nimport { PageMetaDto } from './common/dto/page-meta.dto';\nimport type { PageOptionsDto } from './common/dto/page-options.dto';\nimport { VIRTUAL_COLUMN_KEY } from './decorators/virtual-column.decorator';\n\ndeclare global {\n  interface Array {\n    toDtos(this: T[], options?: any): Dto[];\n\n    toPageDto(\n      this: T[],\n      pageMetaDto: PageMetaDto,\n      // FIXME make option type visible from entity\n      options?: any,\n    ): PageDto;\n  }\n}\n\ndeclare module 'typeorm' {\n  interface QueryBuilder {\n    searchByString(q: string, columnNames: string[]): this;\n  }\n\n  interface SelectQueryBuilder {\n    paginate(\n      this: SelectQueryBuilder,\n      pageOptionsDto: PageOptionsDto,\n      options?: Partial,\n    ): Promise;\n  }\n}\n\nArray.prototype.toDtos = function ,\n  Dto extends AbstractDto,\n>(options?: any): Dto[] {\n  return compact(\n    map(this, (item) => item.toDto(options as never)),\n  );\n};\n\nArray.prototype.toPageDto = function (pageMetaDto: PageMetaDto, options?: any) {\n  return new PageDto(this.toDtos(options), pageMetaDto);\n};\n\nQueryBuilder.prototype.searchByString = function (q, columnNames) {\n  if (!q) {\n    return this;\n  }\n\n  this.andWhere(\n    new Brackets((qb) => {\n      for (const item of columnNames) {\n        qb.orWhere(`${item} ILIKE :q`);\n      }\n    }),\n  );\n\n  this.setParameter('q', `%${q}%`);\n\n  return this;\n};\n\nSelectQueryBuilder.prototype.paginate = async function (\n  pageOptionsDto: PageOptionsDto,\n  options?: Partial,\n) {\n  if (options?.takeAll) {\n    this.skip(pageOptionsDto.skip).take(pageOptionsDto.take);\n  }\n\n  const itemCount = await this.getCount();\n\n  const { entities, raw } = await this.getRawAndEntities();\n\n  const items = entities.map((entity, index) => {\n    const metaInfo = Reflect.getMetadata(VIRTUAL_COLUMN_KEY, entity) ?? {};\n    const item = raw[index];\n\n    for (const [propertyKey, name] of Object.entries(metaInfo)) {\n      entity[propertyKey] = item[name];\n    }\n\n    return entity;\n  });\n\n  const pageMetaDto = new PageMetaDto({\n    itemCount,\n    pageOptionsDto,\n  });\n\n  return [items, pageMetaDto];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceHealthIndicator.html":{"url":"injectables/ServiceHealthIndicator.html","title":"injectable - ServiceHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health-checker/health-indicators/service.indicator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HealthIndicator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                isHealthy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientProxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/modules/health-checker/health-indicators/service.indicator.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientProxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isHealthy\n                        \n                    \n                \n            \n            \n                \n                    \n                    isHealthy(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/health-checker/health-indicators/service.indicator.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport type { HealthIndicatorResult } from '@nestjs/terminus';\nimport { HealthCheckError, HealthIndicator } from '@nestjs/terminus';\nimport { firstValueFrom } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class ServiceHealthIndicator extends HealthIndicator {\n  constructor(\n    @Optional()\n    @Inject('NATS_SERVICE')\n    private readonly clientProxy: ClientProxy,\n  ) {\n    super();\n  }\n\n  async isHealthy(eventName: string): Promise {\n    try {\n      if (!this.clientProxy) {\n        return {\n          [eventName]: {\n            status: 'down',\n          },\n        };\n      }\n\n      const result = await firstValueFrom(\n        this.clientProxy.send(eventName, { check: true }).pipe(timeout(10_000)),\n        {\n          defaultValue: undefined,\n        },\n      );\n\n      return {\n        [eventName]: result,\n      };\n    } catch (error) {\n      throw new HealthCheckError(`${eventName} failed`, {\n        [eventName]: error,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nApiConfigService \n\nApiConfigService \n\n\n\nAwsS3Service \n\nAwsS3Service \n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nTranslationService \n\nTranslationService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nSharedModule\n\nSharedModule\n\nApiConfigService  -->\n\nSharedModule->ApiConfigService \n\n\n\nAwsS3Service  -->\n\nSharedModule->AwsS3Service \n\n\n\nGeneratorService  -->\n\nSharedModule->GeneratorService \n\n\n\nTranslationService  -->\n\nSharedModule->TranslationService \n\n\n\nValidatorService  -->\n\nSharedModule->ValidatorService \n\n\n\n\n\nApiConfigService\n\nApiConfigService\n\nSharedModule -->\n\nApiConfigService->SharedModule\n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nSharedModule -->\n\nAwsS3Service->SharedModule\n\n\n\n\n\nGeneratorService\n\nGeneratorService\n\nSharedModule -->\n\nGeneratorService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nValidatorService\n\nValidatorService\n\nSharedModule -->\n\nValidatorService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiConfigService\n                        \n                        \n                            AwsS3Service\n                        \n                        \n                            GeneratorService\n                        \n                        \n                            TranslationService\n                        \n                        \n                            ValidatorService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiConfigService\n                        \n                        \n                            AwsS3Service\n                        \n                        \n                            GeneratorService\n                        \n                        \n                            TranslationService\n                        \n                        \n                            ValidatorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Global, Module } from '@nestjs/common';\n\n// import { ClientProxyFactory, Transport } from '@nestjs/microservices';\nimport { ApiConfigService } from './services/api-config.service';\nimport { AwsS3Service } from './services/aws-s3.service';\nimport { GeneratorService } from './services/generator.service';\nimport { TranslationService } from './services/translation.service';\nimport { ValidatorService } from './services/validator.service';\n\nconst providers = [\n  ApiConfigService,\n  ValidatorService,\n  AwsS3Service,\n  GeneratorService,\n  TranslationService,\n  // {\n  //   provide: 'NATS_SERVICE',\n  //   useFactory: (configService: ApiConfigService) => {\n  //     const natsConfig = configService.natsConfig;\n  //     return ClientProxyFactory.create({\n  //       transport: Transport.NATS,\n  //       options: {\n  //         name: 'NATS_SERVICE',\n  //         url: `nats://${natsConfig.host}:${natsConfig.port}`,\n  //       },\n  //     });\n  //   },\n  //   inject: [ApiConfigService],\n  // },\n];\n\n@Global()\n@Module({\n  providers,\n  imports: [HttpModule],\n  exports: [...providers, HttpModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SnakeNamingStrategy.html":{"url":"classes/SnakeNamingStrategy.html","title":"class - SnakeNamingStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SnakeNamingStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/snake-naming.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    DefaultNamingStrategy\n            \n\n            \n                Implements\n            \n            \n                        NamingStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                classTableInheritanceParentColumnName\n                            \n                            \n                                columnName\n                            \n                            \n                                joinColumnName\n                            \n                            \n                                joinTableColumnName\n                            \n                            \n                                joinTableName\n                            \n                            \n                                relationName\n                            \n                            \n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        classTableInheritanceParentColumnName\n                        \n                    \n                \n            \n            \n                \nclassTableInheritanceParentColumnName(parentTableName: string, parentTableIdPropertyName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentTableIdPropertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnName\n                        \n                    \n                \n            \n            \n                \ncolumnName(propertyName: string, customName: string, embeddedPrefixes: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    embeddedPrefixes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinColumnName\n                        \n                    \n                \n            \n            \n                \njoinColumnName(relationName: string, referencedColumnName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relationName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    referencedColumnName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinTableColumnName\n                        \n                    \n                \n            \n            \n                \njoinTableColumnName(tableName: string, propertyName: string, columnName?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columnName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinTableName\n                        \n                    \n                \n            \n            \n                \njoinTableName(firstTableName: string, secondTableName: string, firstPropertyName: string, _secondPropertyName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstPropertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _secondPropertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relationName\n                        \n                    \n                \n            \n            \n                \nrelationName(propertyName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableName\n                        \n                    \n                \n            \n            \n                \ntableName(className: string, customName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/snake-naming.strategy.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    className\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    customName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { NamingStrategyInterface } from 'typeorm';\nimport { DefaultNamingStrategy } from 'typeorm';\nimport { snakeCase } from 'typeorm/util/StringUtils';\n\nexport class SnakeNamingStrategy\n  extends DefaultNamingStrategy\n  implements NamingStrategyInterface\n{\n  tableName(className: string, customName: string): string {\n    return customName ? customName : snakeCase(className);\n  }\n\n  columnName(\n    propertyName: string,\n    customName: string,\n    embeddedPrefixes: string[],\n  ): string {\n    return (\n      snakeCase(embeddedPrefixes.join('_')) +\n      (customName ? customName : snakeCase(propertyName))\n    );\n  }\n\n  relationName(propertyName: string): string {\n    return snakeCase(propertyName);\n  }\n\n  joinColumnName(relationName: string, referencedColumnName: string): string {\n    return snakeCase(relationName + '_' + referencedColumnName);\n  }\n\n  joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    firstPropertyName: string,\n    _secondPropertyName: string,\n  ): string {\n    return snakeCase(\n      firstTableName +\n        '_' +\n        firstPropertyName.replace(/\\./gi, '_') +\n        '_' +\n        secondTableName,\n    );\n  }\n\n  joinTableColumnName(\n    tableName: string,\n    propertyName: string,\n    columnName?: string,\n  ): string {\n    return snakeCase(\n      tableName + '_' + (columnName ? columnName : propertyName),\n    );\n  }\n\n  classTableInheritanceParentColumnName(\n    parentTableName: string,\n    parentTableIdPropertyName: string,\n  ): string {\n    return snakeCase(`${parentTableName}_${parentTableIdPropertyName}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPayloadDto.html":{"url":"classes/TokenPayloadDto.html","title":"class - TokenPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/TokenPayloadDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/dto/TokenPayloadDto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/TokenPayloadDto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/TokenPayloadDto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TokenPayloadDto {\n  @ApiProperty()\n  expiresIn: number;\n\n  @ApiProperty()\n  accessToken: string;\n\n  constructor(data: { expiresIn: number; accessToken: string }) {\n    this.expiresIn = data.expiresIn;\n    this.accessToken = data.accessToken;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationInterceptor.html":{"url":"injectables/TranslationInterceptor.html","title":"injectable - TranslationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptors/translation-interceptor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in src/interceptors/translation-interceptor.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(_context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptors/translation-interceptor.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import type {\n  CallHandler,\n  ExecutionContext,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Injectable } from '@nestjs/common';\nimport type { Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nimport type { AbstractDto } from '../common/dto/abstract.dto';\nimport { TranslationService } from '../shared/services/translation.service';\n\n@Injectable()\nexport class TranslationInterceptor implements NestInterceptor {\n  constructor(private readonly translationService: TranslationService) {}\n\n  public intercept(\n    _context: ExecutionContext,\n    next: CallHandler,\n  ): Observable {\n    return next\n      .handle()\n      .pipe(\n        mergeMap((data) =>\n          this.translationService.translateNecessaryKeys(data),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                translate\n                            \n                            \n                                    Async\n                                translateNecessaryKeys\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/translation.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        translate\n                        \n                    \n                \n            \n            \n                \n                    \n                    translate(key: string, options: translateOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/translation.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            translateOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        translateNecessaryKeys\n                        \n                    \n                \n            \n            \n                \n                    \n                    translateNecessaryKeys(dto: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/translation.service.ts:22\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { isArray, isString, map } from 'lodash';\nimport { I18nService } from 'nestjs-i18n';\nimport type { translateOptions } from 'nestjs-i18n/dist/services/i18n.service';\n\nimport { AbstractDto } from '../../common/dto/abstract.dto';\nimport { TRANSLATION_DECORATOR_KEY } from '../../decorators/translate.decorator';\nimport type { ITranslationDecoratorInterface } from '../../interfaces';\nimport { ContextProvider } from '../../providers/context.provider';\n\n@Injectable()\nexport class TranslationService {\n  constructor(private readonly i18n: I18nService) {}\n\n  async translate(\n    key: string,\n    options: translateOptions = {},\n  ): Promise {\n    return this.i18n.translate(`translations.${key}`, options);\n  }\n\n  async translateNecessaryKeys(dto: T): Promise {\n    await Promise.all(\n      map(dto, async (value, key) => {\n        if (isString(value)) {\n          const translateDec: ITranslationDecoratorInterface =\n            Reflect.getMetadata(TRANSLATION_DECORATOR_KEY, dto, key);\n\n          if (translateDec.translationKey) {\n            await this.translate(`${translateDec.translationKey}.${value}`, {\n              lang: ContextProvider.getLanguage(),\n            });\n          }\n\n          return;\n        }\n\n        if (value instanceof AbstractDto) {\n          await this.translateNecessaryKeys(value);\n\n          return;\n        }\n\n        if (isArray(value)) {\n          await Promise.all(\n            map(value, (v) => {\n              if (v instanceof AbstractDto) {\n                return this.translateNecessaryKeys(v);\n              }\n            }),\n          );\n        }\n      }),\n    );\n\n    return dto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniqueValidator.html":{"url":"injectables/UniqueValidator.html","title":"injectable - UniqueValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniqueValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validators/unique.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/validators/unique.validator.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/unique.validator.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(value: string, args: IUniqueValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/validators/unique.validator.ts:17\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        E\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                IUniqueValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport type {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport { registerDecorator, ValidatorConstraint } from 'class-validator';\nimport type { EntitySchema, FindConditions, ObjectType } from 'typeorm';\nimport { Connection } from 'typeorm';\n\n@Injectable()\n@ValidatorConstraint({ name: 'unique', async: true })\nexport class UniqueValidator implements ValidatorConstraintInterface {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  public async validate(\n    value: string,\n    args: IUniqueValidationArguments,\n  ): Promise {\n    const [entityClass, findCondition = args.property] = args.constraints;\n\n    return (\n      (await this.connection.getRepository(entityClass).count({\n        where:\n          typeof findCondition === 'function'\n            ? findCondition(args)\n            : {\n                [findCondition || args.property]: value,\n              },\n      }))  = [\n  ObjectType | EntitySchema | string,\n  ((validationArguments: ValidationArguments) => FindConditions) | keyof E,\n];\ninterface IUniqueValidationArguments extends ValidationArguments {\n  constraints: UniqueValidationConstraints;\n}\n\nexport function Unique(\n  constraints: Partial>,\n  validationOptions?: ValidationOptions,\n): PropertyDecorator {\n  return function (object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName,\n      options: validationOptions,\n      constraints,\n      validator: UniqueValidator,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                admin\n                            \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        admin\n                        \n                    \n                \n            \n            \n                \n                    \n                    admin(user: UserEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('admin')@Auth(['undefined'])@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Auth(['undefined'])@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, description: 'Get users list', type: UserDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(pageOptionsDto: UsersPageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Auth(['undefined'])@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, description: 'Get users list', type: PageDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                UsersPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Query,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { PageDto } from '../../common/dto/page.dto';\nimport { RoleType } from '../../constants';\nimport { Auth, AuthUser, UUIDParam } from '../../decorators';\nimport { TranslationService } from '../../shared/services/translation.service';\nimport { UserDto } from './dto/user.dto';\nimport { UsersPageOptionsDto } from './dto/users-page-options.dto';\nimport { UserEntity } from './user.entity';\nimport { UserService } from './user.service';\n\n@Controller('users')\n@ApiTags('users')\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private readonly translationService: TranslationService,\n  ) {}\n\n  @Get('admin')\n  @Auth([RoleType.USER])\n  @HttpCode(HttpStatus.OK)\n  async admin(@AuthUser() user: UserEntity): Promise {\n    const translation = await this.translationService.translate(\n      'keywords.admin',\n      {\n        lang: 'en',\n      },\n    );\n\n    return `${translation} ${user.firstName}`;\n  }\n\n  @Get()\n  @Auth([RoleType.USER])\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Get users list',\n    type: PageDto,\n  })\n  getUsers(\n    @Query(new ValidationPipe({ transform: true }))\n    pageOptionsDto: UsersPageOptionsDto,\n  ): Promise> {\n    return this.userService.getUsers(pageOptionsDto);\n  }\n\n  @Get(':id')\n  @Auth([RoleType.USER])\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Get users list',\n    type: UserDto,\n  })\n  getUser(@UUIDParam('id') userId: string): Promise {\n    return this.userService.getUser(userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                isActive\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserEntity, options?: UserDtoOptions)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/dto/user.dto.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        UserDtoOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: RoleType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDto:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AbstractDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nimport { AbstractDto } from '../../../common/dto/abstract.dto';\nimport { RoleType } from '../../../constants';\nimport type { UserEntity } from '../user.entity';\n\n// TODO, remove this class and use constructor's second argument's type\nexport type UserDtoOptions = Partial;\n\nexport class UserDto extends AbstractDto {\n  @ApiPropertyOptional()\n  firstName?: string;\n\n  @ApiPropertyOptional()\n  lastName?: string;\n\n  @ApiProperty()\n  username: string;\n\n  @ApiPropertyOptional({ enum: RoleType })\n  role: RoleType;\n\n  @ApiPropertyOptional()\n  email?: string;\n\n  @ApiPropertyOptional()\n  avatar?: string;\n\n  @ApiPropertyOptional()\n  phone?: string;\n\n  @ApiPropertyOptional()\n  isActive?: boolean;\n\n  constructor(user: UserEntity, options?: UserDtoOptions) {\n    super(user);\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.role = user.role;\n    this.email = user.email;\n    this.avatar = user.avatar;\n    this.phone = user.phone;\n    this.isActive = options?.isActive;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                avatar\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                fullName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                settings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @VirtualColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: RoleType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSettingsEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, userSettings => userSettings.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, OneToOne } from 'typeorm';\n\nimport type { IAbstractEntity } from '../../common/abstract.entity';\nimport { AbstractEntity } from '../../common/abstract.entity';\nimport { RoleType } from '../../constants';\nimport { UseDto, VirtualColumn } from '../../decorators';\nimport type { UserDtoOptions } from './dto/user.dto';\nimport { UserDto } from './dto/user.dto';\nimport type { IUserSettingsEntity } from './user-settings.entity';\nimport { UserSettingsEntity } from './user-settings.entity';\n\nexport interface IUserEntity extends IAbstractEntity {\n  firstName?: string;\n\n  lastName?: string;\n\n  role: RoleType;\n\n  email?: string;\n\n  password?: string;\n\n  phone?: string;\n\n  avatar?: string;\n\n  fullName?: string;\n\n  settings?: IUserSettingsEntity;\n}\n\n@Entity({ name: 'users' })\n@UseDto(UserDto)\nexport class UserEntity\n  extends AbstractEntity\n  implements IUserEntity\n{\n  @Column({ nullable: true })\n  firstName?: string;\n\n  @Column({ nullable: true })\n  lastName?: string;\n\n  @Column({ type: 'enum', enum: RoleType, default: RoleType.USER })\n  role: RoleType;\n\n  @Column({ unique: true, nullable: true })\n  email?: string;\n\n  @Column({ nullable: true })\n  password?: string;\n\n  @Column({ nullable: true })\n  phone?: string;\n\n  @Column({ nullable: true })\n  avatar?: string;\n\n  @VirtualColumn()\n  fullName?: string;\n\n  @OneToOne(() => UserSettingsEntity, (userSettings) => userSettings.user)\n  settings?: UserSettingsEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/UserLoginDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserLoginDto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserLoginDto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString } from 'class-validator';\n\nexport class UserLoginDto {\n  @IsString()\n  @IsEmail()\n  @ApiProperty()\n  readonly email: string;\n\n  @IsString()\n  @ApiProperty()\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { CreateSettingsHandler } from './commands/create-settings.command';\nimport { UserController } from './user.controller';\nimport { UserRepository } from './user.repository';\nimport { UserService } from './user.service';\nimport { UserSettingsRepository } from './user-settings.repository';\n\nexport const handlers = [CreateSettingsHandler];\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserRepository, UserSettingsRepository]),\n    CqrsModule,\n  ],\n  controllers: [UserController],\n  exports: [UserService],\n  providers: [UserService, ...handlers],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/user-not-found.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\n\nexport class UserNotFoundException extends NotFoundException {\n  constructor(error?: string) {\n    super('error.user_not_found', error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegisterDto.html":{"url":"classes/UserRegisterDto.html","title":"class - UserRegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/UserRegisterDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsEmail()@IsNotEmpty()@Trim()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserRegisterDto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@Trim()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserRegisterDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@Trim()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserRegisterDto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({minLength: 6})@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserRegisterDto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column()@IsPhoneNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/UserRegisterDto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  MinLength,\n} from 'class-validator';\nimport { Column } from 'typeorm';\n\nimport { Trim } from '../../../decorators/transform.decorators';\n\nexport class UserRegisterDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @Trim()\n  readonly firstName: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @Trim()\n  readonly lastName: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  @Trim()\n  readonly email: string;\n\n  @ApiProperty({ minLength: 6 })\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n\n  @ApiProperty()\n  @Column()\n  @IsPhoneNumber()\n  @IsOptional()\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\n\nimport { UserEntity } from './user.entity';\n\n@EntityRepository(UserEntity)\nexport class UserRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSettings\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findByUsernameOrEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, validatorService: ValidatorService, awsS3Service: AwsS3Service, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        validatorService\n                                                  \n                                                        \n                                                                        ValidatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsS3Service\n                                                  \n                                                        \n                                                                        AwsS3Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSettings(userId: string, createSettingsDto: CreateSettingsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createSettingsDto\n                                    \n                                                CreateSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(userRegisterDto: UserRegisterDto, file: IFile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRegisterDto\n                                    \n                                                UserRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsernameOrEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsernameOrEmail(options: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(findData: FindConditions)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:34\n                \n            \n\n\n            \n                \n                    Find single user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findData\n                                    \n                                                FindConditions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(pageOptionsDto: UsersPageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                UsersPageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { plainToClass } from 'class-transformer';\nimport type { FindConditions } from 'typeorm';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\n\nimport type { PageDto } from '../../common/dto/page.dto';\nimport { FileNotImageException, UserNotFoundException } from '../../exceptions';\nimport { IFile } from '../../interfaces';\nimport { AwsS3Service } from '../../shared/services/aws-s3.service';\nimport { ValidatorService } from '../../shared/services/validator.service';\nimport type { Optional } from '../../types';\nimport { UserRegisterDto } from '../auth/dto/UserRegisterDto';\nimport { CreateSettingsCommand } from './commands/create-settings.command';\nimport { CreateSettingsDto } from './dto/create-settings.dto';\nimport type { UserDto } from './dto/user.dto';\nimport type { UsersPageOptionsDto } from './dto/users-page-options.dto';\nimport type { UserEntity } from './user.entity';\nimport { UserRepository } from './user.repository';\nimport type { UserSettingsEntity } from './user-settings.entity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private userRepository: UserRepository,\n    private validatorService: ValidatorService,\n    private awsS3Service: AwsS3Service,\n    private commandBus: CommandBus,\n  ) {}\n\n  /**\n   * Find single user\n   */\n  findOne(findData: FindConditions): Promise> {\n    return this.userRepository.findOne(findData);\n  }\n\n  async findByUsernameOrEmail(\n    options: Partial,\n  ): Promise> {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    if (options.email) {\n      queryBuilder.orWhere('user.email = :email', {\n        email: options.email,\n      });\n    }\n\n    if (options.username) {\n      queryBuilder.orWhere('user.username = :username', {\n        username: options.username,\n      });\n    }\n\n    return queryBuilder.getOne();\n  }\n\n  @Transactional()\n  async createUser(\n    userRegisterDto: UserRegisterDto,\n    file: IFile,\n  ): Promise {\n    const user = this.userRepository.create(userRegisterDto);\n\n    if (file && !this.validatorService.isImage(file.mimetype)) {\n      throw new FileNotImageException();\n    }\n\n    if (file) {\n      user.avatar = await this.awsS3Service.uploadImage(file);\n    }\n\n    await this.userRepository.save(user);\n\n    user.settings = await this.createSettings(\n      user.id,\n      plainToClass(CreateSettingsDto, {\n        isEmailVerified: false,\n        isPhoneVerified: false,\n      }),\n    );\n\n    return user;\n  }\n\n  async getUsers(\n    pageOptionsDto: UsersPageOptionsDto,\n  ): Promise> {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n    const [items, pageMetaDto] = await queryBuilder.paginate(pageOptionsDto);\n\n    return items.toPageDto(pageMetaDto);\n  }\n\n  async getUser(userId: string): Promise {\n    const queryBuilder = this.userRepository.createQueryBuilder('user');\n\n    queryBuilder.where('user.id = :userId', { userId });\n\n    const userEntity = await queryBuilder.getOne();\n\n    if (!userEntity) {\n      throw new UserNotFoundException();\n    }\n\n    return userEntity.toDto();\n  }\n\n  async createSettings(\n    userId: string,\n    createSettingsDto: CreateSettingsDto,\n  ): Promise {\n    return this.commandBus.execute(\n      new CreateSettingsCommand(userId, createSettingsDto),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserSettingsEntity.html":{"url":"entities/UserSettingsEntity.html","title":"entity - UserSettingsEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserSettingsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-settings.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                isEmailVerified\n                            \n                            \n                                    Optional\n                                isPhoneVerified\n                            \n                            \n                                    Optional\n                                user\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user-settings.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isPhoneVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user-settings.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.settings)@JoinColumn({name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user-settings.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user-settings.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne } from 'typeorm';\n\nimport type { IAbstractEntity } from '../../common/abstract.entity';\nimport { AbstractEntity } from '../../common/abstract.entity';\nimport { UseDto } from '../../decorators';\nimport type { UserDtoOptions } from './dto/user.dto';\nimport { UserDto } from './dto/user.dto';\nimport type { IUserEntity } from './user.entity';\nimport { UserEntity } from './user.entity';\n\nexport interface IUserSettingsEntity extends IAbstractEntity {\n  isEmailVerified?: boolean;\n\n  isPhoneVerified?: boolean;\n\n  user?: IUserEntity;\n}\n\n@Entity({ name: 'user_settings' })\n@UseDto(UserDto)\nexport class UserSettingsEntity\n  extends AbstractEntity\n  implements IUserSettingsEntity\n{\n  @Column({ default: false })\n  isEmailVerified?: boolean;\n\n  @Column({ default: false })\n  isPhoneVerified?: boolean;\n\n  @Column({ type: 'uuid' })\n  userId?: string;\n\n  @OneToOne(() => UserEntity, (user) => user.settings)\n  @JoinColumn({ name: 'user_id' })\n  user?: UserEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSettingsRepository.html":{"url":"classes/UserSettingsRepository.html","title":"class - UserSettingsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSettingsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-settings.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\n\nimport { UserSettingsEntity } from './user-settings.entity';\n\n@EntityRepository(UserSettingsEntity)\nexport class UserSettingsRepository extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity-subscribers/user-subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeInsert\n                            \n                            \n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \nbeforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/entity-subscribers/user-subscriber.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \nbeforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/entity-subscribers/user-subscriber.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/entity-subscribers/user-subscriber.ts:13\n                \n            \n\n\n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type {\n  EntitySubscriberInterface,\n  InsertEvent,\n  UpdateEvent,\n} from 'typeorm';\nimport { EventSubscriber } from 'typeorm';\n\nimport { generateHash } from '../common/utils';\nimport { UserEntity } from '../modules/user/user.entity';\n\n@EventSubscriber()\nexport class UserSubscriber implements EntitySubscriberInterface {\n  listenTo(): typeof UserEntity {\n    return UserEntity;\n  }\n\n  beforeInsert(event: InsertEvent): void {\n    if (event.entity.password) {\n      event.entity.password = generateHash(event.entity.password);\n    }\n  }\n\n  beforeUpdate(event: UpdateEvent): void {\n    // FIXME check event.databaseEntity.password\n    const entity = event.entity as UserEntity;\n\n    if (entity.password !== event.databaseEntity.password) {\n      entity.password = generateHash(entity.password!);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersPageOptionsDto.html":{"url":"classes/UsersPageOptionsDto.html","title":"class - UsersPageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersPageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/users-page-options.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PageOptionsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                q\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @EnumFieldOptional(undefined, {default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberFieldOptional({minimum: 1, default: 1, int: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        q\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @StringFieldOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @NumberFieldOptional({minimum: 1, maximum: 50, default: 10, int: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PageOptionsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         PageOptionsDto:27\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PageOptionsDto } from '../../../common/dto/page-options.dto';\n\nexport class UsersPageOptionsDto extends PageOptionsDto {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidatorService.html":{"url":"injectables/ValidatorService.html","title":"injectable - ValidatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/validator.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    isImage(mimeType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/validator.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mimeType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ValidatorService {\n  public isImage(mimeType: string): boolean {\n    const imageMimeTypes = ['image/jpeg', 'image/png'];\n\n    return imageMimeTypes.includes(mimeType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/boilerplate.polyfill.ts\n            \n            interface\n            Array\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/boilerplate.polyfill.ts\n            \n            interface\n            QueryBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/boilerplate.polyfill.ts\n            \n            interface\n            SelectQueryBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/abstract-client.service.ts\n            \n            class\n            AbstractClientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/abstract.entity.ts\n            \n            class\n            AbstractEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/abstract.entity.ts\n            \n            interface\n            IAbstractEntity\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/common/dto/abstract.dto.ts\n            \n            class\n            AbstractDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/dto/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/dto/page-meta.dto.ts\n            \n            interface\n            IPageMetaDtoParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/dto/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/dto/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/utils.ts\n            \n            function\n            generateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/utils.ts\n            \n            function\n            getVariableName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils.ts\n            \n            function\n            validateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants/language-code.enum.ts\n            \n            variable\n            supportedLanguageCount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1622299665807-create-users-table.ts\n            \n            class\n            CreateUsersTable1622299665807\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1639940635548-add-user-settings.ts\n            \n            class\n            AddUserSettings1639940635548\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/seeds/users.seed.ts\n            \n            class\n            CreateUsers\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/api-page-ok-response.decorator.ts\n            \n            function\n            ApiPageOkResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/auth-user.decorator.ts\n            \n            variable\n            AuthUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            interface\n            INumberFieldOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            interface\n            IStringFieldOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            BooleanField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            BooleanFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            DateField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            DateFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            EmailField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            EmailFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            EnumField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            EnumFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            NumberField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            NumberFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            PasswordField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            PasswordFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            PhoneField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            PhoneFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            StringField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            StringFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            TmpKeyField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            TmpKeyFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            TranslationsField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            TranslationsFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            URLField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            URLFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            UUIDField\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/field.decorators.ts\n            \n            function\n            UUIDFieldOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/http.decorators.ts\n            \n            function\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/http.decorators.ts\n            \n            function\n            UUIDParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiBooleanProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiBooleanPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiEnumProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiEnumPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiUUIDProperty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/property.decorators.ts\n            \n            function\n            ApiUUIDPropertyOptional\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/public-route.decorator.ts\n            \n            variable\n            PUBLIC_ROUTE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/public-route.decorator.ts\n            \n            variable\n            PublicRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/swagger.schema.ts\n            \n            function\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/swagger.schema.ts\n            \n            function\n            ApiFileDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/swagger.schema.ts\n            \n            function\n            explore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/swagger.schema.ts\n            \n            function\n            RegisterModels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            PhoneNumberSerializer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            S3UrlParser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            ToArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            ToInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            ToLowerCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            ToUpperCase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/transform.decorators.ts\n            \n            function\n            Trim\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/translate.decorator.ts\n            \n            function\n            Translate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/translate.decorator.ts\n            \n            variable\n            TRANSLATION_DECORATOR_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/use-dto.decorator.ts\n            \n            function\n            UseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/validator.decorators.ts\n            \n            function\n            IsNullable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/validator.decorators.ts\n            \n            function\n            IsPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/validator.decorators.ts\n            \n            function\n            IsPhoneNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/validator.decorators.ts\n            \n            function\n            IsTmpKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/validator.decorators.ts\n            \n            function\n            IsUndefinable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/virtual-column.decorator.ts\n            \n            function\n            VirtualColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorators/virtual-column.decorator.ts\n            \n            variable\n            VIRTUAL_COLUMN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entity-subscribers/user-subscriber.ts\n            \n            class\n            UserSubscriber\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exceptions/file-not-image.exception.ts\n            \n            class\n            FileNotImageException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/page-type.exception.ts\n            \n            class\n            PageTypeException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/bad-request.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/filters/constraint-errors.ts\n            \n            variable\n            constraintErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/query-failed.filter.ts\n            \n            class\n            QueryFailedFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/auth.guard.ts\n            \n            function\n            AuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptors/auth-user-interceptor.service.ts\n            \n            injectable\n            AuthUserInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptors/translation-interceptor.service.ts\n            \n            injectable\n            TranslationInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/IApiFile.ts\n            \n            interface\n            IApiFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/IFile.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/interfaces/ITranslationDecoratorInterface.ts\n            \n            interface\n            ITranslationDecoratorInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/context.middelware.ts\n            \n            variable\n            contextMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/LoginPayloadDto.ts\n            \n            class\n            LoginPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/TokenPayloadDto.ts\n            \n            class\n            TokenPayloadDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/UserLoginDto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/UserRegisterDto.ts\n            \n            class\n            UserRegisterDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/public.strategy.ts\n            \n            injectable\n            PublicStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/health-checker/health-checker.controller.ts\n            \n            controller\n            HealthCheckerController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/health-checker/health-indicators/service.indicator.ts\n            \n            injectable\n            ServiceHealthIndicator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/commands/create-settings.command.ts\n            \n            class\n            CreateSettingsCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/commands/create-settings.command.ts\n            \n            class\n            CreateSettingsHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-settings.dto.ts\n            \n            class\n            CreateSettingsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/modules/user/dto/users-page-options.dto.ts\n            \n            class\n            UsersPageOptionsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/user-settings.entity.ts\n            \n            entity\n            UserSettingsEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user-settings.entity.ts\n            \n            class\n            UserSettingsEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/user/user-settings.entity.ts\n            \n            interface\n            IUserSettingsEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user-settings.repository.ts\n            \n            class\n            UserSettingsRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            interface\n            IUserEntity\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/user/user.module.ts\n            \n            variable\n            handlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/providers/context.provider.ts\n            \n            class\n            ContextProvider\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/providers/generator.provider.ts\n            \n            class\n            GeneratorProvider\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/setup-swagger.ts\n            \n            function\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/api-config.service.ts\n            \n            injectable\n            ApiConfigService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/services/aws-s3.service.ts\n            \n            injectable\n            AwsS3Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/services/generator.service.ts\n            \n            injectable\n            GeneratorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/services/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/services/validator.service.ts\n            \n            injectable\n            ValidatorService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/snake-naming.strategy.ts\n            \n            class\n            SnakeNamingStrategy\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/validators/exists.validator.ts\n            \n            injectable\n            ExistsValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/validators/exists.validator.ts\n            \n            interface\n            IExistsValidationArguments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/validators/exists.validator.ts\n            \n            function\n            Exists\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/same-as.validator.ts\n            \n            function\n            SameAs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/validators/unique.validator.ts\n            \n            injectable\n            UniqueValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/validators/unique.validator.ts\n            \n            interface\n            IUniqueValidationArguments\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/validators/unique.validator.ts\n            \n            function\n            Unique\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nanogiants/nestjs-swagger-api-exception-decorator : ^1.6.0\n        \n            @nestjs/axios : ^0.0.3\n        \n            @nestjs/common : ^8.2.4\n        \n            @nestjs/config : ^1.1.5\n        \n            @nestjs/core : ^8.2.4\n        \n            @nestjs/cqrs : ^8.0.1\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.2.4\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.4\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/terminus : ^8.0.1\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            aws-sdk : ^2.1047.0\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            compression : ^1.7.4\n        \n            express : ^4.17.2\n        \n            express-rate-limit : ^5.5.1\n        \n            helmet : ^4.6.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            lodash : ^4.17.21\n        \n            mime-types : ^2.1.34\n        \n            morgan : ^1.10.0\n        \n            nats : ^2.2.0\n        \n            nestjs-i18n : ^8.2.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.1\n        \n            reflect-metadata : ^0.1.13\n        \n            request-context : ^2.0.0\n        \n            rxjs : ^7.4.0\n        \n            source-map-support : ^0.5.21\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n        \n            typeorm-transactional-cls-hooked : ^0.1.21\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeviceTypeEnum   (src/.../device-type.enum.ts)\n                        \n                        \n                            LanguageCodeEnum   (src/.../language-code.enum.ts)\n                        \n                        \n                            Order   (src/.../order.ts)\n                        \n                        \n                            RoleType   (src/.../role-type.ts)\n                        \n                        \n                            TokenType   (src/.../token-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants/device-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DeviceTypeEnum\n                    \n                \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : ios\n                            \n                        \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : android\n                            \n                        \n            \n        \n\n    src/constants/language-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LanguageCodeEnum\n                    \n                \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : EN\n                            \n                        \n                        \n                            \n                                 RU\n                            \n                        \n                        \n                            \n                                Value : RU\n                            \n                        \n            \n        \n\n    src/constants/order.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/constants/role-type.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/constants/token-type.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 ACCESS_TOKEN\n                            \n                        \n                        \n                            \n                                Value : ACCESS_TOKEN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAwesome NestJS Boilerplate v8\n\n\nThis is an ever-evolving, very opinionated architecture and dev environment for new node projects using NestJS. Questions, feedback, and for now, even bikeshedding are welcome. 😄\n\nGetting started\n# 1. Clone the repository or click on \"Use this template\" button.\nnpx degit NarHakobyan/awesome-nest-boilerplate my-nest-app\n\n# 2. Enter your newly-cloned folder.\ncd my-nest-app\n\n# 3. Create Environment variables file.\ncp .env.example .env\n\n# 3. Install dependencies. (Make sure yarn is installed: https://yarnpkg.com/lang/en/docs/install)\nyarnChecklist\nWhen you use this template, try follow the checklist to update your info properly\n\n Change the author name in LICENSE\n Change configurations in .env\n Remove the .github folder which contains the funding info\n Clean up the README.md file\n\nAnd, enjoy :)\nDevelopment\n# 4. Run development server and open http://localhost:3000\nyarn start:dev\n\n# 5. Read the documentation linked below for \"Setup and development\".Build\nTo build the App, run\nyarn build:prodAnd you will see the generated file in dist that ready to be served.\nFeatures\n\n  Quick scaffolding\n  Create modules, services, controller - right from the CLI! -->\n\n  Instant feedback\n  Enjoy the best DX (Developer eXperience) and code your app at the speed of thought! Your saved changes are reflected instantaneously.\n\n  JWT Authentication\n  Installed and configured JWT authentication.\n\n  Next generation Typescript\n  Always up to date typescript version.\n\n  Industry-standard routing\n  It's natural to want to add pages (e.g. /about`) to your application, and routing makes this possible.\n\n  Environment Configuration\n  development, staging and production environment configurations\n\n  Swagger Api Documentation\n  Already integrated API documentation. To see all available endpoints visit http://localhost:3000/documentation\n\n  Linter  \n  eslint + prettier = ❤️\n\n\nDocumentation\nThis project includes a docs folder with more details on:\n\nSetup and development\nArchitecture\nNaming Cheatsheet\n\nCommunity\nFor help, discussion about best practices, or any other conversation that would benefit from being searchable:\nDiscuss Awesome NestJS Boilerplate on GitHub\n\"docs\": \"npm run typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src/app/\",\n\"typedoc\": \"typedoc\"\nnpx typedoc --plugin typedoc-plugin-markdown --tsconfig tsconfig.json --out docs --entryPointStrategy expand ./src\nnpx typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src\n--plugin typedoc-plugin-markdown --tsconfig tsconfig.json --out docs --entryPointStrategy expand ./src/**/*\nnpx typedoc --entryPoints ./src --entryPointStrategy expand --out docs --plugin typedoc-plugin-markdown\nnpx typedoc --plugin typedoc-plugin-markdown --tsconfig tsconfig.json --out docs/\nnpx typedoc --tsconfig tsconfig.json --entryPointStrategy expand --out docs ./src --plugin typedoc-plugin-markdown\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Narek Hakobyan\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthCheckerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HealthCheckerModule\n\n\n\ncluster_HealthCheckerModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHealthCheckerModule\n\nHealthCheckerModule\n\nAppModule -->\n\nHealthCheckerModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPublicStrategy\n\nPublicStrategy\n\nAuthModule -->\n\nPublicStrategy->AuthModule\n\n\n\n\n\nServiceHealthIndicator\n\nServiceHealthIndicator\n\nHealthCheckerModule -->\n\nServiceHealthIndicator->HealthCheckerModule\n\n\n\n\n\nApiConfigService \n\nApiConfigService \n\n\n\nAwsS3Service \n\nAwsS3Service \n\n\n\nGeneratorService \n\nGeneratorService \n\n\n\nTranslationService \n\nTranslationService \n\n\n\nValidatorService \n\nValidatorService \n\n\n\nSharedModule\n\nSharedModule\n\nApiConfigService  -->\n\nSharedModule->ApiConfigService \n\n\n\nAwsS3Service  -->\n\nSharedModule->AwsS3Service \n\n\n\nGeneratorService  -->\n\nSharedModule->GeneratorService \n\n\n\nTranslationService  -->\n\nSharedModule->TranslationService \n\n\n\nValidatorService  -->\n\nSharedModule->ValidatorService \n\n\n\n\n\nApiConfigService\n\nApiConfigService\n\nSharedModule -->\n\nApiConfigService->SharedModule\n\n\n\n\n\nAwsS3Service\n\nAwsS3Service\n\nSharedModule -->\n\nAwsS3Service->SharedModule\n\n\n\n\n\nGeneratorService\n\nGeneratorService\n\nSharedModule -->\n\nGeneratorService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nValidatorService\n\nValidatorService\n\nSharedModule -->\n\nValidatorService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Constructor   (src/.../types.ts)\n                        \n                        \n                            ExistsValidationConstraints   (src/.../exists.validator.ts)\n                        \n                        \n                            Nullable   (src/.../types.ts)\n                        \n                        \n                            Optional   (src/.../types.ts)\n                        \n                        \n                            Plain   (src/.../types.ts)\n                        \n                        \n                            RequireField   (src/.../field.decorators.ts)\n                        \n                        \n                            UniqueValidationConstraints   (src/.../unique.validator.ts)\n                        \n                        \n                            UserDtoOptions   (src/.../user.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types.ts\n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Nullable\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Optional\n                \n            \n            \n                \n                        T | undefined\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Plain\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n    src/validators/exists.validator.ts\n    \n    \n        \n            \n                \n                    \n                    ExistsValidationConstraints\n                \n            \n            \n                \n                        [, ]\n\n                \n            \n        \n    \n    src/decorators/field.decorators.ts\n    \n    \n        \n            \n                \n                    \n                    RequireField\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/validators/unique.validator.ts\n    \n    \n        \n            \n                \n                    \n                    UniqueValidationConstraints\n                \n            \n            \n                \n                        [, ]\n\n                \n            \n        \n    \n    src/modules/user/dto/user.dto.ts\n    \n    \n        \n            \n                \n                    \n                    UserDtoOptions\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthUser   (src/.../auth-user.decorator.ts)\n                        \n                        \n                            constraintErrors   (src/.../constraint-errors.ts)\n                        \n                        \n                            contextMiddleware   (src/.../context.middelware.ts)\n                        \n                        \n                            handlers   (src/.../user.module.ts)\n                        \n                        \n                            providers   (src/.../shared.module.ts)\n                        \n                        \n                            PUBLIC_ROUTE_KEY   (src/.../public-route.decorator.ts)\n                        \n                        \n                            PublicRoute   (src/.../public-route.decorator.ts)\n                        \n                        \n                            supportedLanguageCount   (src/.../language-code.enum.ts)\n                        \n                        \n                            TRANSLATION_DECORATOR_KEY   (src/.../translate.decorator.ts)\n                        \n                        \n                            VIRTUAL_COLUMN_KEY   (src/.../virtual-column.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/auth-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_data: unknown, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n\n    const user = request.user;\n\n    if (user?.[Symbol.for('isPublic')]) {\n      return;\n    }\n\n    return user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/filters/constraint-errors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constraintErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  UQ_97672ac88f789774dd47f7c8be3: 'error.unique.email',\n}\n                    \n                \n\n\n        \n    \n\n    src/middlewares/context.middelware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        contextMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : requestContext.middleware('request')\n                    \n                \n\n\n        \n    \n\n    src/modules/user/user.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CreateSettingsHandler]\n                    \n                \n\n\n        \n    \n\n    src/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ApiConfigService,\n  ValidatorService,\n  AwsS3Service,\n  GeneratorService,\n  TranslationService,\n  // {\n  //   provide: 'NATS_SERVICE',\n  //   useFactory: (configService: ApiConfigService) => {\n  //     const natsConfig = configService.natsConfig;\n  //     return ClientProxyFactory.create({\n  //       transport: Transport.NATS,\n  //       options: {\n  //         name: 'NATS_SERVICE',\n  //         url: `nats://${natsConfig.host}:${natsConfig.port}`,\n  //       },\n  //     });\n  //   },\n  //   inject: [ApiConfigService],\n  // },\n]\n                    \n                \n\n\n        \n    \n\n    src/decorators/public-route.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PUBLIC_ROUTE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'public_route'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PublicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (isPublic = false): CustomDecorator =>\n  SetMetadata(PUBLIC_ROUTE_KEY, isPublic)\n                    \n                \n\n\n        \n    \n\n    src/constants/language-code.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        supportedLanguageCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(LanguageCodeEnum).length\n                    \n                \n\n\n        \n    \n\n    src/decorators/translate.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TRANSLATION_DECORATOR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'custom:translate'\n                    \n                \n\n\n        \n    \n\n    src/decorators/virtual-column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VIRTUAL_COLUMN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('VIRTUAL_COLUMN_KEY')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
